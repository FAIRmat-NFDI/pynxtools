<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2014-2024 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXgraph_node_set" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="c">
            <doc>
                 The cardinality of the set, i.e. the number of nodes of the graph.
            </doc>
        </symbol>
        <symbol name="d">
            <doc>
                 The dimensionality of the graph. Eventually use one for categorical.
            </doc>
        </symbol>
    </symbols>
    <doc>
         A set of nodes representing members of a graph.
         
         Use as a direct child of an instance of :ref:`NXgraph_root`.
         Alternatively, use depends_on to specify which instance
         of NXgraph_root is defined by this instance.
    </doc>
    <attribute name="depends_on" type="NX_CHAR">
        <doc>
             Specify which instance of :ref:`NXgraph_root` this :ref:`NXgraph_node_set`
             refers to.
        </doc>
    </attribute>
    <field name="space" type="NX_CHAR">
        <doc>
             About which space does the graph make statements.
        </doc>
        <enumeration>
            <item value="euclidean"/>
            <item value="other"/>
        </enumeration>
    </field>
    <field name="dimensionality" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Dimensionality of the space about which the graph makes statements.
             Use only when value of the field space is euclidean.
        </doc>
        <enumeration>
            <item value="1"/>
            <item value="2"/>
            <item value="3"/>
        </enumeration>
    </field>
    <field name="cardinality" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Number of nodes of the graph.
        </doc>
    </field>
    <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer which specifies the first index to be used for distinguishing
             nodes. Identifiers are defined either implicitly or explicitly.
             
             For implicit indexing the identifiers are defined on the interval
             :math:`[identifier\_offset, identifier\_offset + c - 1]`.
             
             For explicit indexing use the field identifier. For implicit indexing,
             consult :ref:`NXcg_primitive_set` to get guidance how to set identifier_offset.
        </doc>
    </field>
    <field name="identifier" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer used to distinguish nodes for explicit indexing.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="is_a" type="NX_CHAR">
        <doc>
             A human-readable qualifier which type or e.g. class instance the
             node is an instance of. An example: a NeXus application definition is a
             graph, more specifically a hierarchical directed labelled property graph.
             Instances which are groups like :ref:`NXgraph_node_set` could have an is_a
             qualifier reading :ref:`NXgraph_node_set`.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="label" type="NX_CHAR">
        <doc>
             A human-readable label/caption/tag of each node.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
</definition>
