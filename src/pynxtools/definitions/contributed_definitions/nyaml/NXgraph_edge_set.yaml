category: base
doc: |
  A set of (eventually directed) edges which connect nodes of a graph.
  
  Use as a direct child of an instance of :ref:`NXgraph_root`.
  Alternatively, use depends_on to specify which instance
  of :ref:`NXgraph_root` is defined by this instance.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  n_edges: |
    The number of edges.
type: group
NXgraph_edge_set(NXobject):
  \@depends_on(NX_CHAR):
    doc: |
      Specify which instance of :ref:`NXgraph_root` this :ref:`NXgraph_edge_set` refers to.
  number_of_edges(NX_UINT):
    doc: |
      Total number of edges, counting eventual bidirectional edges only once.
    unit: NX_UNITLESS
  identifier_offset(NX_INT):
    doc: |
      Integer which specifies the first index to be used for distinguishing
      edges. Identifiers are defined either implicitly or explicitly.
      
      For implicit indexing the identifiers are defined on the interval
      :math:`[identifier\_offset, identifier\_offset + c - 1]`.
      
      For explicit indexing use the field identifier. For implicit indexing,
      consult :ref:`NXcg_primitive_set` to get guidance how to set identifier_offset.
    unit: NX_UNITLESS
  identifier(NX_INT):
    doc: |
      Integer used to distinguish edges for explicit indexing.
    unit: NX_UNITLESS
    dim: (n_edges,)
  directionality(NX_UINT):
    doc: |
      Specifier whether each edge is non-directional, one-directional,
      or bidirectional. Use the smallest available binary representation
      which can store three different states:
      
      * 0 / state 0x00 is non-directional
      * 1 / state 0x01 is one-directional
      * 2 / state 0x02 is bi-directional
    unit: NX_UNITLESS
    dim: (n_edges,)
  node_pair(NX_INT):
    doc: |
      Pairs of node/vertex identifier. Each pair represents the connection
      between two nodes. The order in the pair encodes eventual directionality.
      
      In the case that an edge is non- or bi-directional, storing
      node identifier in ascending order is preferred.
      
      In the case that an edge is one-directional, node identifier should be
      stored such that the identifier of the source node is the first entry
      and the identifier of the target is the second entry in the pair.
    unit: NX_UNITLESS
    dim: (n_edges, 2)
  is_a(NX_CHAR):
    doc: |
      A human-readable qualifier which type or e.g. class instance the
      edge is an instance of.
    dim: (n_edges,)
  label(NX_CHAR):
    doc: |
      A human-readable label/caption/tag of each edge.
    dim: (n_edges,)
