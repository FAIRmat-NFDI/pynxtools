category: base
doc: |
  Base class documenting the information common to tools of the paraprobe-toolbox.
  
  The paraprobe-toolbox is a collection of open-source tools for performing
  efficient analyses of point cloud data where each point can represent atoms or
  (molecular) ions. A key application of the toolbox has been for research in the
  field of Atom Probe Tomography (APT) and related Field Ion Microscopy (FIM):
  
  * `paraprobe-toolbox <https://www.gitlab.com/paraprobe/paraprobe-toolbox>`_
  * `M. KÃ¼hbach et al. <https://paraprobe-toolbox.readthedocs.io/en/main/>`_
  
  The toolbox does not replace but complements existent software tools in this
  research field. Given its capabilities of handling points as objects with
  properties and enabling analyses of the spatial arrangement of and inter-
  sections between geometric primitives, the software can equally be used
  for analyzing data in Materials Science and Materials Engineering.
  
  The common section can be used as a place to store e.g. organizational
  metadata and contextualization of that analysis in a research data
  management system.
type: group
NXapm_paraprobe_tool_common(NXobject):
  status(NX_CHAR):
    doc: |
      A statement whether the tool executable managed to process the analysis
      or whether this failed. Status is written to the results file after the
      end_time beyond which point in time the tool must no longer compute
      any further analysis results but exit.
      
      Only when this status message is present and its value is `success`,
      one should consider the results of the tool. In all other cases it might
      be that the tool has terminated prematurely or another error occurred.
    enumeration: [success, failure]
  (NXprogram):
  (NXidentifier):
  analysis_identifier(NX_UINT):
    doc: |
      Internal identifier used by the tool to refer to an analysis (aka simulation id).
    unit: NX_UNITLESS
  config(NXserialized):
    doc: |
      The configuration file that was used to parameterize
      the algorithms that this tool has executed.
  profiling(NXcs_profiling):
    # results_path(NX_CHAR):
    #   doc: |
    #     Path where the tool stores tool-specific results. If not specified,
    #    results will be stored in the current working directory.
    start_time(NX_DATE_TIME):
      doc: |
        ISO 8601 formatted time code with local time zone offset to UTC
        information included when the analysis in this results file was started,
        i.e. when the respective executable/tool was started as a process.
    end_time(NX_DATE_TIME):
      doc: |
        ISO 8601 formatted time code with local time zone offset to UTC
        information included when the analysis in this results file were
        completed and the respective process of the tool exited.
    total_elapsed_time(NX_FLOAT):
      doc: |
        Wall-clock time.
      unit: NX_TIME
  (NXuser):
  (NXcoordinate_system_set):
    doc: |
      Details about coordinate systems (reference frames) used. In atom probe several coordinate
      systems have to be distinguished. Names of instances of such :ref:`NXcoordinate_system`
      should be documented explicitly and doing so by picking from the
      following controlled set of names:
      
      * paraprobe
      * lab
      * specimen
      * laser
      * instrument
      * detector
      * recon
      
      The aim of this convention is to support users with contextualizing which reference frame
      each instance (coordinate system) is. If needed, instances of :ref:`NXtransformations`
      are used to detail the explicit affine transformations whereby one can convert
      representations between different reference frames.
      Inspect :ref:`NXtransformations` for further details.
    (NXcoordinate_system):
      (NXtransformations):
    # add further fields coming from using the charge state recovery
    # workflow from the ifes_apt_tc_data_modeling library
