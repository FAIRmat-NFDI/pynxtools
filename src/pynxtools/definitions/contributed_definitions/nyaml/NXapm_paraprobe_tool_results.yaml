category: base
doc: |
  Base class documenting the results obtained with a tool of the paraprobe-toolbox.
  
  The paraprobe-toolbox is a collection of open-source tools for performing
  efficient analyses of point cloud data where each point can represent atoms or
  (molecular) ions. A key application of the toolbox has been for research in the
  field of Atom Probe Tomography (APT) and related Field Ion Microscopy (FIM):
  
  * `paraprobe-toolbox <https://www.gitlab.com/paraprobe/paraprobe-toolbox>`_
  * `M. KÃ¼hbach et al. <https://paraprobe-toolbox.readthedocs.io/en/main/>`_
  
  The toolbox does not replace but complements existent software tools in this
  research field. Given its capabilities of handling points as objects with
  properties and enabling analyses of the spatial arrangement of and inter-
  sections between geometric primitives, the software can equally be used
  for analyzing data in Materials Science and Materials Engineering.
  
  The configuration and results of a run of a tool from the toolbox is documented
  using binary container formats. Currently, paraprobe-toolbox uses the
  Hierarchical Data Format 5 (HDF5).
  
  The paraprobe coordinate system is the reference *NXcoordinate_system*
  for each geometric primitive.
# thereby implicitly all \@default attributes for geometric primitives point to the
# single instance ENTRY[entry]/COORDINATE_SYSTEM_SET[coordinate_system_set]/paraprobe
# symbols:
#   doc: |
#     The symbols used in the schema to specify e.g. dimensions of arrays.
type: group
NXapm_paraprobe_tool_results(NXprocess):
  # config section
  description(NX_CHAR):
    doc: |
      Possibility for leaving a free-text description about this analysis.
  window(NXcs_filter_boolean_mask):
    doc: |
      A bitmask which identifies all ions considered in the analysis.
    number_of_ions(NX_UINT):
      doc: |
        Number of ions covered by the mask.
        By default, the total number of ions in the dataset.
      unit: NX_UNITLESS
    bitdepth(NX_UINT):
      doc: |
        Number of bits assumed matching on a default datatype.
      unit: NX_UNITLESS
    mask(NX_UINT):
      doc: |
        The mask. The length of the mask is an integer multiple of bitdepth.
        In such case, padded bits are set to 0.
      unit: NX_UNITLESS
      dim: (i,)
  # typically tool-specific section follows
