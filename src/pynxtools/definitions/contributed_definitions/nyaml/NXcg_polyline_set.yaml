category: base
doc: |
  Computational geometry description of a set of polylines.
  
  Each polyline is built from a sequence of vertices (points with identifiers).
  Each polyline must have a start and an end point.
  The sequence describes the positive traversal along the polyline when
  walking from the first to the last vertex.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  d: |
    The dimensionality, which has to be at least 1.
  c: |
    The cardinality of the set, i.e. the number of polylines.
  # n_unique: The number of unique vertices supporting the polyline.
  # multiple vertices possible with the same point coordinates but different names.
  n_v: |
    The number of vertices, supporting the polylines.
  n_total: |
    The total number of vertices traversed when visiting every polyline.
type: group
NXcg_polyline_set(NXcg_primitive_set):
  \@depends_on(NX_CHAR):
    doc: |
      Reference to an instance of :ref:`NXcg_point_set` which defines
      the location of the vertices that are referred to in the
      NXcg_polyline_set instance.
  number_of_unique_vertices(NX_POSINT):
    doc: |
      The total number of vertices that have different positions.
    unit: NX_UNITLESS
  number_of_total_vertices(NX_INT):
    doc: |
      The total number of vertices, irrespective of their eventual uniqueness.
    unit: NX_UNITLESS
  number_of_vertices(NX_INT):
    doc: |
      The total number of vertices of each polyline, irrespectively
      whether vertices are shared by vertices or not.
      See the docstring for polylines for further details about how
      a set with different polyline members should be stored.
    unit: NX_UNITLESS
    dim: (c,)
  # Users are encouraged to reduce the vertex set to the unique vertices.
  # Unique means not necessarily unique in position only but also unique in
  # identifier. In fact, it is possible to distinguish two vertices as two when
  # they share the same position in space but have different identifiers.
  vertices(NX_NUMBER):
    doc: |
      Positions of the vertices which support the members of the polyline set.
      
      Users are encouraged to reduce the vertices to unique positions and vertices
      as this often supports with storing geometry data more efficiently.
      It is also possible though to store the vertex positions naively
      in which case vertices_are_unique is likely False.
      Naively, here means that one stores each vertex of a triangle mesh
      even though many vertices are shared between triangles and thus
      storing multiple copies of their positions is redundant.
    unit: NX_ANY
    dim: (n_v, d)
  # alternatively we may store the actual vertices in an instance of
  # NXcg_point_set and (e.g. to promote compact storage of information and primitives)
  # and then use

  vertices_are_unique(NX_BOOLEAN):
    doc: |
      If true indicates that the vertices are all placed at different
      positions and have different identifiers, i.e. no points overlap
      or are counted several times.
  polylines(NX_INT):
    doc: |
      Sequence of identifier for vertices how they build each polyline.
      
      A trivial example is a set with two polylines with three vertices each.
      If the polylines meet in a junction, say the second vertex is shared
      and marking the junction between the two polylines, it is possible that
      there are only five unique positions. This suggests to store five
      unique vertices.
      
      A non-trivial example is a set with several polylines. Assume that each
      has a different number of vertices. The array stores the identifier of
      the vertices in the sequence how the polylines are visited:
      
      The first entry is the identifier of the first vertex of the first polyline,
      followed by the second vertex of the first polyline, until the last vertex
      of the first polyline.
      Thereafter, the first vertex of the second polyline, and so on and so forth.
      Using the (cumulated) counts in number_of_vertices, the vertices of the
      n-th polyline can be accessed on the following array index interval:
      :math:`[\sum_{i=0}^{i=N-1}, \sum_{i=0}^{i=N}]`.
    unit: NX_UNITLESS
    dim: (n_total,)
