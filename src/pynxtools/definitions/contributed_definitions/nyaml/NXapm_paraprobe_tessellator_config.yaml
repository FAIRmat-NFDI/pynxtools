category: application
doc: |
  Application definition for a configuration file of the paraprobe-tessellator tool.
  
  This tool is part of the paraprobe-toolbox. Inspect :ref:`NXapm_paraprobe_tool_config` for details.
# n_control_points: The number of control points for tessellating regions instead of tessellating the volume about ion positions.
# an example for limited conditions in NeXus
# if windowing_method is entire_dataset: no constraint on existence of NXcg and NXcs instances
# if windowing_method is union_of_primitives: sum of cardinality of NXcg >= 0
# if windowing_method is bitmasked_points: sum cardinality of NXcg := 0 and cardinality of NXcs_filter_boolean_mask == 1
type: group
NXapm_paraprobe_tessellator_config(NXobject):
  (NXentry):
    exists: [min, 1, max, 1]
    definition(NX_CHAR):
      \@version(NX_CHAR):
      enumeration: [NXapm_paraprobe_tessellator_config]
    tessellate(NXapm_paraprobe_tool_config):
      exists: [min, 1, max, 1]
      (NXidentifier):
        exists: optional
      analysis_identifier(NX_UINT):
        exists: recommended
      reconstruction(NXserialized):
        type(NX_CHAR):
        path(NX_CHAR):
        checksum(NX_CHAR):
        algorithm(NX_CHAR):
        position(NX_CHAR):
        mass_to_charge(NX_CHAR):
      ranging(NXserialized):
        type(NX_CHAR):
        path(NX_CHAR):
        checksum(NX_CHAR):
        algorithm(NX_CHAR):
        ranging_definitions(NX_CHAR):
      surface_distance(NXserialized):
        exists: optional
        type(NX_CHAR):
        path(NX_CHAR):
        checksum(NX_CHAR):
        algorithm(NX_CHAR):
        distance(NX_CHAR):
      spatial_filter(NXspatial_filter):
        windowing_method(NX_CHAR):
        hexahedron_set(NXcg_hexahedron_set):
          exists: optional
          dimensionality(NX_POSINT):
          cardinality(NX_POSINT):
          identifier_offset(NX_INT):
          hexahedra(NXcg_face_list_data_structure):
            vertices(NX_UINT):
        cylinder_set(NXcg_cylinder_set):
          exists: optional
          dimensionality(NX_POSINT):
          cardinality(NX_POSINT):
          identifier_offset(NX_INT):
          center(NX_NUMBER):
          height(NX_NUMBER):
          radii(NX_NUMBER):
        ellipsoid_set(NXcg_ellipsoid_set):
          exists: optional
          dimensionality(NX_POSINT):
          cardinality(NX_POSINT):
          identifier_offset(NX_INT):
          center(NX_NUMBER):
          half_axes_radii(NX_NUMBER):
          orientation(NX_NUMBER):
        polyhedron_set(NXcg_polyhedron_set):
          exists: optional
          # TODO
        bitmask(NXcs_filter_boolean_mask):
          exists: optional
          number_of_objects(NX_UINT):
          bitdepth(NX_UINT):
          mask(NX_UINT):
          # leave open if scalar or matrix
          #   dim: (i,)
          identifier(NX_UINT):
      evaporation_id_filter(NXsubsampling_filter):
        exists: optional
        min_incr_max(NX_INT):
      iontype_filter(NXmatch_filter):
        exists: optional
        method(NX_CHAR):
        match(NX_NUMBER):
      hit_multiplicity_filter(NXmatch_filter):
        exists: optional
        method(NX_CHAR):
        match(NX_NUMBER):
      # config
      method(NX_CHAR):
        doc: |
          The method used to compute the tessellation.
          The value *default* configures the computation of the Voronoi tessellation.
        # check versions prior paraprobe-toolbox v0.5 for control_point-based method
        enumeration: [default]
      has_cell_volume(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report the volume of each cell.
      has_cell_neighbors(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report the first-order neighbors of each cell.
      has_cell_geometry(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report the facets and vertices of each cell.
      has_cell_edge_detection(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report for each cell if it makes contact with
          the tight axis-aligned bounding box about the point cloud.
          This can be used to identify if the shape of the cell is likely affected
          by the edge of the dataset or if cells are deeply enough embedded
          into the point cloud so that the shape of their cells are not affected
          anymore by the boundary. This is valuable information to judge
          about the significance of finite size effects.
      # erosion_distance(NX_FLOAT):
      #   doc: |
      #     Maximum distance for which cells are eroded.
      #   unit: NX_LENGTH
      #   \@units: nm
      #   minValue: EPSILON
    common(NXapm_paraprobe_tool_common): 
      status(NX_CHAR):
      programID(NXprogram):
        exists: [min, 1, max, infty]
        program(NX_CHAR):
          \@version(NX_CHAR):
      profiling(NXcs_profiling):
        exists: recommended
        start_time(NX_DATE_TIME):
        end_time(NX_DATE_TIME):
        total_elapsed_time(NX_FLOAT):
        current_working_directory(NX_CHAR):
