category: base
doc: |
  Base class for a spatial filter for objects within a region-of-interest (ROI).
  
  Objects can be points or objects composed from other geometric primitives.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  n_hexahedra: |
    Number of hexahedra.
  n_cylinders: |
    Number of cylinders.
  n_ellipsoids: |
    Number of ellipsoids.
  n_polyhedra: |
    Number of polyhedra.
# n_vertices: Number of vertices for polyhedra.
# n_facets: Number of facets for polyhedra.
type: group
NXspatial_filter(NXobject):
  windowing_method(NX_CHAR):
    doc: |
      Qualitative statement which describes the logical operations
      that define which objects will be included and which excluded:
      
      * entire_dataset, no filter is applied, all objects are included.
      * union_of_primitives, a filter with (possibly non-axis-aligned) geometric
        primitives. Objects in or on the surface of the primitives are included.
        All other objects are excluded.
      * bitmask, a boolean array whose bits encode with 1 which objects
        are included. Bits set to zero encode which objects are excluded.
        Users of python can use the bitfield operations
        of the numpy package to work with bitfields.
      
# In the case that windowing_method is union_of_primitives,
# it is possible to specify none or all types of primitives
# (ellipsoids, cylinder, hexahedra). If no primitives are specified
# the filter falls back to entire_dataset.
# In the case that windowing_method is bitmask, the bitmask has to be defined;
# otherwise the filter falls back to entire dataset.
    enumeration: [entire_dataset, union_of_primitives, bitmask]
  (NXcg_hexahedron_set):
  (NXcg_cylinder_set):
  (NXcg_ellipsoid_set):
  (NXcg_polyhedron_set):
  (NXcs_filter_boolean_mask):
