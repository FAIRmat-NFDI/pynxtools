category: base
doc: |
  Base class for documenting the set of atoms of a (molecular) ion.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  n_ivec_max: |
    Maximum number of atoms/isotopes allowed per (molecular) ion (fragment).
  n_ranges: |
    Number of mass-to-charge-state-ratio range intervals for ion type.
type: group
NXion(NXobject):
  identifier(NX_CHAR):
    doc: |
      A unique identifier whereby such an ion can be referred to
      via the service offered as described in identifier_type.
  identifier_type(NX_CHAR):
    doc: |
      How can the identifier be resolved?
    enumeration: [inchi]
  ion_type(NX_UINT):
    doc: |
      Ion type (ion species) identifier.
      
      The identifier zero is reserved for the special unknown ion type.
    unit: NX_UNITLESS
  nuclide_hash(NX_UINT):
    doc: |
      Vector of nuclide hash values.
      
      Individual hash values :math:`H` is :math:`H = Z + N \cdot 256` with :math:`Z`
      encode the number of protons :math:`Z` and the number of neutrons :math:`N`
      of each nuclide respectively. :math:`Z` and :math:`N` have to be 8-bit unsigned integers.
      
      The array is sorted in decreasing order. For the rationale behind this see `M. KÃ¼hbach et al. (2021) <https://doi.org/10.1017/S1431927621012241>`_
    unit: NX_UNITLESS
    dim: (n_ivec_max,)
  nuclide_list(NX_UINT):
    doc: |
      Table which decodes the entries in nuclide_hash into a human-readable matrix of instances.
      The first column specifies the nuclide mass number, i.e. using the hashvalues
      from the isotope_vector this is :math:`Z + N` or 0. The value 0 documents that no
      isotope-specific information about the element encoded is relevant.
      The second row specifies the number of protons :math:`Z` or 0.
      The value 0 in this case documents a placeholder or that no element-specific
      information is relevant.
      Taking a carbon-14 nuclide as an example the mass number is 14.
      That is encoded as a value pair (14, 6) as one row of the table.
      
      Therefore, this notation is the typical superscribed nuclide mass number
      and subscripted number of protons element notation e.g. :math:`^{14}C`.
      The array is stored matching the order of nuclide_hash.
    unit: NX_UNITLESS
    dim: (n_ivecmax, 2)
  # color(NX_CHAR):
  #   doc: |
  #     Color code used for visualizing such ions.
  volume(NX_NUMBER):
    doc: |
      Assumed volume of the ion.
      
      In atom probe microscopy this field can be used to store the reconstructed
      volume per ion (average) which is typically stored alongside ranging
      definitions.
    unit: NX_VOLUME
  charge(NX_NUMBER):
    doc: |
      Charge of the ion.
    unit: NX_CHARGE
  charge_state(NX_INT):
    doc: |
      Signed charge state of the ion in multiples of electron charge.
      
      In the example of atom probe microscopy, only positive values will be measured
      as the ions are accelerated by a negatively signed bias electric field.
      In the case that the charge state is not explicitly recoverable, the value should
      be set to zero.
      
      In atom probe microscopy this is for example the case when using
      classical ranging definition files in formats like RNG, RRNG.
      These file formats do not document the charge state explicitly
      but the number of atoms of each element per molecular ion
      surplus the mass-to-charge-state-ratio interval.
      Details on ranging definition files can be found in the literature:
      `M. K. Miller <https://doi.org/10.1002/sia.1719>`_
    unit: NX_UNITLESS
  name(NX_CHAR):
    doc: |
      Human-readable ion type name (e.g. Al +++)
      The string should consists of UTF-8 characters, ideally using LaTeX
      notation to specify the isotopes, ions, and charge state.
      Examples are 12C + or Al +++.
      
      To ease automated parsing, isotope_vector should be the
      preferred machine-readable information used.
  mass_to_charge_range(NX_NUMBER):
    doc: |
      Associated lower (mqmin) and upper (mqmax) bounds of the
      mass-to-charge-state ratio interval(s) [mqmin, mqmax]
      (boundaries inclusive). This field is primarily of interest
      for documenting :ref:`NXprocess` steps of indexing a
      ToF/mass-to-charge state histogram.
    unit: NX_ANY  # u
    dim: (n_ranges, 2)
