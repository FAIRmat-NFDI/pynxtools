category: application
doc: |
  NXxrd_pan is a specialisation of NXxrd with exptra properties
# n_values - symbols
# ! : additions
# ? : could or should be modified?
type: "group"
NXxrd_pan(NXxrd):
  (NXentry):
    definition:
      doc: |
        Official NeXus NXDL schema to which this file conforms.
      enumeration: [NXxrd_pan]
    method:
      enumeration: [X-Ray Diffraction (XRD)]
      doc: |
        Method used to collect the data
        default='X-Ray Diffraction (XRD)'
    (NXinstrument):
    # Need a group that explain 
      (NXsource):
        xray_tube_material:
          doc: |
            Type of the X-ray tube.
          enumeration: [Cu, Cr, Mo, Fe, Ag, In, Ga]
        xray_tube_current(NX_FLOAT):
          unit: NX_CURRENT
          doc: |
            Current of the X-ray tube.
        xray_tube_voltage(NX_FLOAT):
          unit: NX_VOLTAGE
          doc: |
            Voltage of the X-ray tube.
        # Unicode for alpha : \u03b1
        k_alpha_one(NX_FLOAT):
          unit: NX_WAVELENGTH
          doc: |
            Wavelength of the K\u03b1 1 line.
          \@units:
            enumeration: [angstrom]
        k_alpha_two(NX_FLOAT):
          unit: NX_WAVELENGTH
          doc: |
            Wavelength of the K\u03b1 2 line.
          \@units:
            enumeration: [angstrom]
        ratio_k_alphatwo_k_alphaone(NX_FLOAT):
          unit: NX_DIMENSIONLESS
          doc: |
            K\u03b1 2/K\u03b1 1 intensity ratio.
        kbeta(NX_FLOAT):
          exists: optional
          unit: NX_WAVELENGTH
          doc: | 
            Wavelength of the K\u00df line.
          \@units:
            enumeration: [angstrom]
        source_peak_wavelength(NX_FLOAT):
          exists: optional
          unit: NX_WAVELENGTH
          doc: |
            Wavelength of the X-ray source. Used to convert from 2-theta to Q.
      (NXdetector):
        scan_axis:
         doc: |
           Axis scanned.
        scan_mode:
          doc: |
            Mode of scan.
        integration_time(NX_FLOAT):
          exists: optional
          unit: NX_TIME
          doc: |
            Integration time per channel.
    # Note: We should need to think about incident and deflected beam (NXbeam). As the data also contains
    # beams information about the beam and the object encountered by beam through the path
    # incident_beam(NXbeam):
    # defracted_beam(NXbeam):
    (NXcollection):
      exists: optional
      doc: | 
        Collect user inputs e.g. name or path of the input file.
      2theta(NXcollection):
        start(NX_FLOAT):
          unit: NX_ANGLE
          doc: |
            Starting value of the diffraction angle. 
        end(NX_FLOAT):
          unit: NX_ANGLE
          doc: |
            Ending value of the diffraction angle.
        step(NX_FLOAT):
          unit: NX_ANGLE
          doc: |
            Minimum step size in-between two diffraction angles.
      omega(NXcollection):
        start(NX_FLOAT):
          unit: NX_ANGLE
          doc: |
            Starting value of the incident angle. 
        end(NX_FLOAT):
          unit: NX_ANGLE
          doc: |
            Ending value of the incident angle.
        step(NX_FLOAT):
          unit: NX_ANGLE
          doc: |
            Minimum step size in the between two incident angles.
      data_file:
        exists: optional
        doc: |
          Name of the data file.
      measurement_type:
        doc: |
          Type of measurement.
      beam_attenuation_factors:
        doc: | 
          Beam attenuation factors over the path.
      goniometer_x(NX_FLOAT):
        exists: optional
        unit: NX_LENGTH
        doc: |
          Goniometer position X.
      goniometer_y(NX_FLOAT):
        exists: optional
        unit: NX_LENGTH
        doc: |
          Goniometer position Y.
      goniometer_z(NX_FLOAT):
        exists: optional
        unit: NX_LENGTH
        doc: |
          Goniometer position Z
      count_time(NX_FLOAT):
        unit: NX_TIME 
        doc: |
          Total time of count.
    2theta_plot(NXdata):
      doc: | 
        Desired plot would be two_theta vs intensity. 
      intensity(NX_FLOAT):
        dimensions:
          rank: 1
          dim: [[1, nDet]]
        doc: |
          Number of scattered electrons per unit time.
      two_theta(NX_FLOAT):
        dimensions:
          rank: 1
          dim: [[1, nDet]]
        doc: |
          Axis scale represeting the 2-theta range of the difractogram. 
      omega(NX_FLOAT):
        dimensions:
          rank: 1
          dim: [[1, nDet]]
        exists: optional
        doc: |
          The omega range of the difractogram.
      phi(NX_FLOAT):
        dimensions:
          rank: 1
          dim: [[1, nDet]]
        exists: optional
        doc: |
          The phi range of the difractogram
      chi(NX_FLOAT):
        dimensions:
          rank: 1
          dim: [[1, nDet]]
        exists: optional
        doc: |
          The chi range of the difractogram
    q_plot(NXdata):
      exists: optional
      doc: |
        Desired plot would be q_vector vs intensity.
      q(NX_FLOAT):
        doc: | 
          Axis scale representing wavevector for scatter energy.
      intensity(NX_FLOAT):
          doc: |
            Number of scattered electrons per unit time.
    (NXsample):
      exists: optional
      doc: |
        Description on sample.
      sample_mode:
        doc: |
          Mode of sample.
      sample_id:
        doc: |
          Id of sample.
      sample_name: 
        doc: |
          Usually in xrd sample are being analysed, but sample might be identified by assumed name or given name.
      prepared_by:
        doc: |
