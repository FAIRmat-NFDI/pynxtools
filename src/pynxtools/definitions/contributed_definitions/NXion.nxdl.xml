<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2014-2024 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXion" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_ivec_max">
            <doc>
                 Maximum number of atoms/isotopes allowed per (molecular) ion (fragment).
            </doc>
        </symbol>
        <symbol name="n_ranges">
            <doc>
                 Number of mass-to-charge-state-ratio range intervals for ion type.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Base class for documenting the set of atoms of a (molecular) ion.
    </doc>
    <field name="identifier" type="NX_CHAR">
        <doc>
             A unique identifier whereby such an ion can be referred to
             via the service offered as described in identifier_type.
        </doc>
    </field>
    <field name="identifier_type" type="NX_CHAR">
        <doc>
             How can the identifier be resolved?
        </doc>
        <enumeration>
            <item value="inchi"/>
        </enumeration>
    </field>
    <field name="ion_type" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Ion type (ion species) identifier.
             
             The identifier zero is reserved for the special unknown ion type.
        </doc>
    </field>
    <field name="nuclide_hash" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Vector of nuclide hash values.
             
             Individual hash values :math:`H` is :math:`H = Z + N \cdot 256` with :math:`Z`
             encode the number of protons :math:`Z` and the number of neutrons :math:`N`
             of each nuclide respectively. :math:`Z` and :math:`N` have to be 8-bit unsigned integers.
             
             The array is sorted in decreasing order. For the rationale behind this see `M. KÃ¼hbach et al. (2021) &lt;https://doi.org/10.1017/S1431927621012241&gt;`_
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_ivec_max"/>
        </dimensions>
    </field>
    <field name="nuclide_list" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Table which decodes the entries in nuclide_hash into a human-readable matrix of instances.
             The first column specifies the nuclide mass number, i.e. using the hashvalues
             from the isotope_vector this is :math:`Z + N` or 0. The value 0 documents that no
             isotope-specific information about the element encoded is relevant.
             The second row specifies the number of protons :math:`Z` or 0.
             The value 0 in this case documents a placeholder or that no element-specific
             information is relevant.
             Taking a carbon-14 nuclide as an example the mass number is 14.
             That is encoded as a value pair (14, 6) as one row of the table.
             
             Therefore, this notation is the typical superscribed nuclide mass number
             and subscripted number of protons element notation e.g. :math:`^{14}C`.
             The array is stored matching the order of nuclide_hash.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="n_ivecmax"/>
            <dim index="2" value="2"/>
        </dimensions>
    </field>
    <!--color(NX_CHAR):
  doc: |
    Color code used for visualizing such ions.-->
    <field name="volume" type="NX_NUMBER" units="NX_VOLUME">
        <doc>
             Assumed volume of the ion.
             
             In atom probe microscopy this field can be used to store the reconstructed
             volume per ion (average) which is typically stored alongside ranging
             definitions.
        </doc>
    </field>
    <field name="charge" type="NX_NUMBER" units="NX_CHARGE">
        <doc>
             Charge of the ion.
        </doc>
    </field>
    <field name="charge_state" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Signed charge state of the ion in multiples of electron charge.
             
             In the example of atom probe microscopy, only positive values will be measured
             as the ions are accelerated by a negatively signed bias electric field.
             In the case that the charge state is not explicitly recoverable, the value should
             be set to zero.
             
             In atom probe microscopy this is for example the case when using
             classical ranging definition files in formats like RNG, RRNG.
             These file formats do not document the charge state explicitly
             but the number of atoms of each element per molecular ion
             surplus the mass-to-charge-state-ratio interval.
             Details on ranging definition files can be found in the literature:
             `M. K. Miller &lt;https://doi.org/10.1002/sia.1719&gt;`_
        </doc>
    </field>
    <field name="name" type="NX_CHAR">
        <doc>
             Human-readable ion type name (e.g. Al +++)
             The string should consists of UTF-8 characters, ideally using LaTeX
             notation to specify the isotopes, ions, and charge state.
             Examples are 12C + or Al +++.
             
             To ease automated parsing, isotope_vector should be the
             preferred machine-readable information used.
        </doc>
    </field>
    <field name="mass_to_charge_range" type="NX_NUMBER" units="NX_ANY">
        <doc>
             Associated lower (mqmin) and upper (mqmax) bounds of the
             mass-to-charge-state ratio interval(s) [mqmin, mqmax]
             (boundaries inclusive). This field is primarily of interest
             for documenting :ref:`NXprocess` steps of indexing a
             ToF/mass-to-charge state histogram.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="n_ranges"/>
            <dim index="2" value="2"/>
        </dimensions>
    </field>
</definition>
