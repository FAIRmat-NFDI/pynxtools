<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2014-2024 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" ignoreExtraFields="true" ignoreExtraAttributes="true" name="NXdata_mpes_detector" extends="NXdata" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <doc>
         :ref:`NXdata_mpes_detector` describes the plottable data and related
         dimension scales for raw detector data in photoemission experiments.
         
         It extends the NXdata class and provides a glossary of explicitly named axis names
         which are typical for raw photoemission data.
    </doc>
    <field name="raw" type="NX_NUMBER">
        <doc>
             Raw data before calibration.
        </doc>
    </field>
    <field name="pixel_x" type="NX_FLOAT" units="NX_ANY">
        <doc>
             Detector pixel in x direction.
        </doc>
    </field>
    <field name="pixel_y" type="NX_FLOAT" units="NX_ANY">
        <doc>
             Detector pixel in y direction.
        </doc>
    </field>
    <field name="energy" type="NX_NUMBER" units="NX_ENERGY">
        <doc>
             (Un)calibrated energy axis.
        </doc>
        <attribute name="type" type="NX_CHAR">
            <doc>
                 The energy can be either stored as kinetic or as binding energy.
            </doc>
            <enumeration>
                <item value="kinetic">
                    <doc>
                         (Un)calibrated kinetic energy axis.
                         
                         This concept is related to term `3.35`_ of the ISO 18115-1:2023 standard.
                         
                         .. _3.35: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:3.35
                    </doc>
                </item>
                <item value="binding">
                    <doc>
                         (Un)calibrated binding energy axis.
                         
                         This concept is related to term `12.16`_ of the ISO 18115-1:2023 standard.
                         
                         .. _12.16: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.16
                    </doc>
                </item>
            </enumeration>
        </attribute>
    </field>
    <field name="kN" type="NX_NUMBER" units="NX_WAVENUMBER">
        <doc>
             One (un)calibrated k-space coordinate. It is envisioned that the axes are named kx, ky, and kz.
             
             Typically, the vectors in momentum space are defined such that kx and ky comprise the parallel component,
             while kz is taken as the perpendicular component.
             
             It is also possible to define k_parallel and k_perp for the parallel and perpendicular momenta, respectively.
             Units are 1/Angstr√∂m.
        </doc>
    </field>
    <field name="angularN" type="NX_NUMBER" units="NX_ANGLE">
        <doc>
             One (un)calibrated angular coordinate. It is envisioned that the axes are name angular0, angular1, etc.
             
             The angular axes should be named in order of decreasing speed, i.e., angular0 should be
             the fastest scan axis and angular1 should be the slow-axis angular coordinate. However,
             angular0 may also be second slow axis if the measurement is angularly integrated and angular1
             could also be the second fast axis in the case of simultaneous dispersion in two angular
             dimensions.
        </doc>
    </field>
    <field name="spatialN" type="NX_NUMBER" units="NX_ANGLE">
        <doc>
             One (un)calibrated spatial coordinate. It is envisioned that the axes are name spatial0, spatial1, etc.
             
             The spatial axes should be named in order of decreasing speed, i.e., spatial0 should be
             the fastest scan axis and spatial1 should be the slow-axis spatial coordinate. However,
             spatial0 may also be second slow axis if the measurement is spatially integrated and spatial1
             could also be the second fast axis in the case of simultaneous dispersion in two spatial
             dimensions.
        </doc>
    </field>
    <!--exists in NXdetector base class-->
    <field name="time_of_flight" type="NX_FLOAT" units="NX_TIME_OF_FLIGHT">
        <doc>
             Total time of flight.
        </doc>
    </field>
    <field name="time_of_flight_adc" type="NX_FLOAT" units="NX_ANY">
        <doc>
             Time-of-flight values, analog-to-digital converted.
        </doc>
    </field>
    <field name="delay" type="NX_NUMBER" units="NX_TIME">
        <doc>
             (Un)calibrated delay time.
        </doc>
    </field>
    <field name="polarization_angle" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             Linear polarization angle of the incoming or outgoing beam.
        </doc>
    </field>
    <field name="ellipticity" type="NX_FLOAT" units="NX_ANGLE">
        <doc>
             Ellipticity of the incoming or outgoing beam.
        </doc>
    </field>
    <field name="external_AXIS" type="NX_NUMBER" units="NX_ANY">
        <doc>
             Describes an axis which is coming from outside the detectors scope.
             
             Think of a detector just being triggered for readout by the rest of the experimental
             setup - it would just know that it collected N images, which would flatten the external
             parameters to one axis, too.
             This can then be linked, e.g. with NXcalibration, to the appropriate fields in the instrument
             and write it to the top-level NXdata_mpes.
        </doc>
    </field>
</definition>
