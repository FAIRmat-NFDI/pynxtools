# This workflow will install Python 3.9 and run the tests of all supported plugins.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test plugins

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  python-version: 3.11

jobs:
  pytest:
    name: pytest (${{ matrix.plugin }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - plugin: pynxtools-apm
            branch: main
            tests_to_run: tests/.
          - plugin: pynxtools-ellips
            branches: main
            tests_to_run: tests/.
          - plugin: pynxtools-em
            branch: main
            tests_to_run: tests/.
          - plugin: pynxtools-igor
            branch: main
            tests_to_run: tests/.    
          - plugin: pynxtools-mpes
            branch: main
            tests_to_run: tests/.
          - plugin: pynxtools-raman
            branches: main
            tests_to_run: tests/.
<<<<<<< HEAD
          - plugin: pynxtools-spm
            branch: main
=======
          - plugin: pynxtools-mpes
            branches: update-to-new-nxmpes, main
            tests_to_run: tests/.
          - plugin: pynxtools-stm
            branches: main
>>>>>>> dc70f9d (allow multiple branches in plugin test CI/CD)
            tests_to_run: tests/.
          - plugin: pynxtools-xps
            branches: use-multiformat-reader, main
            tests_to_run: tests/.
<<<<<<< HEAD
          - plugin: pynxtools-xrd
            branch: main
            tests_to_run: tests/.

=======
          # - plugin: pynxtools-apm
          #   branches: main
          #   tests_to_run: tests/.
          # - plugin: pynxtools-xrd
          #   branches: main
          #   tests_to_run: tests/.
          # - plugin: pynxtools-em
          #   branches: main
          #   tests_to_run: tests/.
>>>>>>> dc70f9d (allow multiple branches in plugin test CI/CD)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install uv and set the python version to ${{ env.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          uv pip install coverage coveralls
      - name: Install package
        run: |
          uv pip install ".[dev]"
      - name: Check if branch exists
        id: check-branch
        run: |
          branch_exists=false
          branches=(${{ matrix.branches }})
          for branch in ${branches[@]}; do
            echo "Checking branch: $branch"
            if git ls-remote --heads https://github.com/FAIRmat-NFDI/${{ matrix.plugin }}.git $branch | grep -q "refs/heads/$branch"; then
              echo "Branch $branch exists."
              echo "branch=$branch" >> $GITHUB_ENV
              branch_exists=true
              break
            fi
          done
          if [ "$branch_exists" = "false" ]; then
            echo "No branches exist."
            exit 1
          fi
      - name: Output environment variables for debugging
        run: |
          echo "Selected branch: ${{ env.branch }}"
      - name: Clone ${{ matrix.plugin }} repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: FAIRmat-NFDI/${{ matrix.plugin }}
          path: ${{ matrix.plugin }}
          ref: ${{ env.branch }}
      - name: Install nomad
        run: |
          uv pip install nomad-lab[infrastructure]@git+https://gitlab.mpcdf.mpg.de/nomad-lab/nomad-FAIR.git
      - name: Install ${{ matrix.plugin }}
        run: |
          cd ${{ matrix.plugin }}
          uv pip install .
      - name: Run ${{ matrix.plugin }} tests
        run: |
          cd ${{ matrix.plugin }}
          pytest ${{ matrix.tests_to_run }}
