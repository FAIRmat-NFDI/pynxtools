category: application
doc: |
  Application definition for atom probe and field ion microscopy experiments.
  
  This application definition provides a place to document data and metadata to
  an atom probe experiment. Primarily the measurement itself is documented.
  However, as most atom probe experiments are controlled with commercial software
  which does not allow to access the raw detector hits, this application definition
  also includes two key groups of processing steps (reconstruction and ranging).
  
  During tomographic reconstruction measured data are processed into a point cloud
  of reconstructed positions of certain ions. During ranging time-of-flight data
  are identified as representing specific ions to annotate each ion with a label.
  
  Commercial software used in atom probe research is designed as an integrated
  acquisition and instrument control software. For AMETEK/Cameca local electrode
  atom probe (LEAP) instruments the least processed (rawest) numerical results
  and metadata are stored in so-called STR, RRAW, RHIT, and HITS files, which
  are proprietary and their file format specifications not publicly documented.
  
  Supplementary metadata are kept in a database (formerly known as the ISDb)
  which is connected to the instrument control software and synced with the
  experiment while ions are detected. In effect, RHIT and HITS files
  store the (rawest) experiment data in a closed manner that is
  practically useless for users unless they have access to the
  commercial software.
  
  To arrive at a state that atom probe microscopy (APM) with LEAP instruments
  delivers a dataset with which users can study reconstructed atomic
  position and do e.g. composition analyses or other post-processing
  analysis tasks, these raw data have to be processed. Therefore, it is
  necessary that for an application definition to be useful, details about
  the physical acquisition of the raw data and all its
  processing steps have to be stored.
  
  With this a user can create derived quantities like ion hit positions
  (on the detector) and calibrated time-of-flight data. These derived
  quantities are also needed to obtain calibrated mass-to-charge-state
  ratios, and finally the tomographic reconstruction of the ion positions.
  
  In most cases, an APM dataset is useful only if it gets post-processed
  via so-called ranging. Ranging defines rules for mapping time-of-flight
  and mass-to-charge-state ratio values on ion species. This is post-processing
  even though in practice it is performed sometimes already (as preview)
  already while data are still being collected.
  
  The ion types decode molecular identities which can very often be
  mapped to elemental identities, and also be used to distinguish isotopes.
  All these steps are in most cases performed using commercial software.
  
  Frequently, though, ranging and post-processing is also performed with
  (open-source) research software. Therefore, there is strictly speaking
  not a single program used throughout an atom probe analysis not even
  for the early stage of data acquisition and processing stages to obtain
  a useful reconstructed and ranged dataset.
  
  This application definition documents not only the measurement but also the
  key post-processing steps which transform the proprietary data into a
  tomographic reconstruction with ranging definitions.
  
  Future guidance by the technology partners like AMETEK/Cameca could improve
  this description to cover a substantial larger number of eventually metadata
  that so far are neither publicly documented nor accessible.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays.
  n_ions: Total number of ions collected.
  n_dld_wires: Total number of independent wires in the delay-line detector.
  n_support: Number of support points for e.g. modeling peaks.
  n_ivec_max: |
    Maximum number of allowed atoms per (molecular) ion (fragment).
    Needs to match maximum_number_of_atoms_per_molecular_ion.
  n_ranges: |
    Number of mass-to-charge-state-ratio intervals of this ion type.
  n_x: Number of bins in the x direction.
  n_y: Number of bins in the y direction.
  n_z: Number of bins in the z direction.
  n_bins: Number of bins.
  n_topology: Total number of integers in the supplementary XDMF topology array.
# some consistence is not yet achieved with IFES_APT_TC APT HDF5 v1 format
# Language precision: Keywords such as “must” “required” “should”, etc are as per RFC-2119 [RFC2119]. https://tools.ietf.org/html/rfc2119
# https://gitlab.com/apt_software_toolbox/apt-hdf5 an implementation for an
# IFES APT TC APT HDF5 v1 verifier
# NEW ISSUE: possible offspring application definitions:
# NXapm_opt/pl would be possible, as soon as NXluminescence by Carola Emminger and Florian Dobner is ready whereby
# then there would be two subentries one for an NXapm and one for NXphotoluminesence to capture the photonic atom probe of Rouen/GPM
# and finally if there were an NXapm_afm for atomic force microscopy the IMEC AFM/APT experiments could be stored with an NXapm_afm application definition
# with NXapm and NXafm being respective subentries of the appdef but as NXapm_afm is a step-by-step approach one would have to release the constraint
# that only a single measurement can be performed.
# NXasat which could just take two subentries NXem and NXapm
# NXasat should be a fuse of NXapm and NXem within an NXentry with NXsubentry, in this way we can combine the strength of both application definitions
# to describe also the upcoming technique of atomic scale analytical tomography https://doi.org/10.1017/9781316677292

NXapm:
  (NXentry):
    exists: [min, 1, max, infty]
    \@version:
      doc: |
        An at least as strong as SHA256 hashvalue of the file
        that specifies the application definition.
    # enumeration: [sha_256_hash]
    definition:
      doc: NeXus NXDL schema to which this file conforms.
      enumeration: [NXapm]
    experiment_identifier:
      doc: |
        Ideally, a (globally) unique persistent identifier
        for referring to this experiment.
        
        The identifier is usually defined/issued by the facility, laboratory,
        or the principle investigator. The identifier enables to link
        experiments to e.g. proposals.
    experiment_description:
      exists: optional
      doc: |
        Free-text description about the experiment.
        
        Users are strongly advised to detail the sample history in the 
        respective field and fill rather as completely as possible the fields
        of the application definition behind instead of filling in these
        details into the experiment_description free-text description field.
        
        Users are encouraged to add in this field eventual DOIs to papers
        which yield further details to the experiment.
    start_time(NX_DATE_TIME):
      doc: |
        ISO 8601 time code with local time zone offset to UTC information
        included when the microscope session started.
        If the application demands that time codes in this section of the
        application definition should only be used for specifying when the
        experiment was performed - and the exact duration is not relevant
        - this start_time field should be used.
        
        Often though it is useful to specify a time interval with specifying
        both start_time and end_time to allow for more detailed bookkeeping
        and interpretation of the experiment. The user should be aware that
        even with having both dates specified, it may not be possible
        to infer how long the experiment took or for how long data
        were collected.
        
        More detailed timing data over the course of the experiment have to be
        collected to compute this event chain during the experiment.
      #  These computations can take advantage of individual time stamps
      #  in NXevent_em instances to provide additional pieces of information.
    end_time(NX_DATE_TIME):
      exists: recommended
      doc: |
        ISO 8601 time code with local time zone offset to UTC included
        when the microscope session ended.
    # NEW ISSUE: fields like duration need a clearer description as to how these
    # quantities should be defined. Most atom probers do not care for this other
    # than getting an approximate hour-accurate estimate of the time how long it
    # took to evaporate the specimen.
    # several programs and libraries are usually coupled together for LEAP instruments,
    # if it is possible to have a different root version with a different ivas/apsuite
    # version that having a single program and version field is not enough but multiple
    # are required LAS root version camecaroot version analysis software

    (NXprogram):
      exists: [min, 1, max, infty]
      program:
        \@version:
    run_number:
      exists: recommended
      doc: |
        Neither the specimen_name nor the experiment_identifier but the identifier
        through which the experiment is referred to in the control software.
        For LEAP instruments it is recommended to use the IVAS/APSuite
        run_number. For other instruments, such as the one from Stuttgart or
        Oxcart from Erlangen, or the instruments at GPM in Rouen, use the
        identifier which is closest in meaning to the LEAP run number.
        The field does not have to be required if the information is recoverable
        in the dataset which for LEAP instruments is the case when RHIT or HITS
        files are also stored alongside a data artifact instance which is
        generated according to this NXapm application definition.
        
        As a destructive microscopy technique, a run can be performed only once.
        It is possible, however, to interrupt a run and restart data acquisition
        while still using the same specimen. In this case, each evaporation run
        needs to be distinguished with different run numbers.
        We follow this habit of most atom probe groups.
        
        This application definition does currently not allow storing the
        entire set of such interrupted runs. Not because of a technical limitation
        within NeXus but because we have not seen a covering use case based
        on which we could have designed and implemented this case. 
        Atom probers are invited to contact the respective people in the
        FAIRmat team to fix this.
    experiment_documentation(NXnote):
      exists: optional
      doc: |
        Binary container for a file or a compressed collection of files which
        can be used to add further descriptions and details to the experiment.
        The container can hold a compressed archive.
        
        Required for operation_mode apt_fim or other to give further details.
        Users should not abuse this field to provide free-text information.
        Instead, these pieces of information should be mapped to
        respective groups and sections.
    thumbnail(NXnote):
      exists: optional
      doc: |
        A small image that is representative of the entry; this can be an
        image taken from the dataset like a thumbnail of a spectrum.
        A 640 x 480 pixel jpeg image is recommended. 
        Adding a scale bar to that image is recommended but not required
        as the main purpose of the thumbnail is to provide e.g. thumbnail
        images for displaying them in data repositories.
      \@type:
    operation_mode:
      doc: | 
        What type of atom probe microscopy experiment is performed.
        This field is primarily meant to inform materials database systems
        to qualitatively filter experiments:
        
        * apt are experiments where the analysis_chamber has no imaging gas.  
          experiment with LEAP instruments are typically performed as apt.  
        * fim are experiments where the analysis_chamber has an imaging gas,  
          which should be specified with the atmosphere in the analysis_chamber group.  
        * apt_fim should be used for combinations of the two imaging modes.  
        * other should be used in combination with the user specifying details in the  
          experiment_documentation field.  
        
      enumeration: [apt, fim, apt_fim, other]
    # description:
    #  exists: optional
    #  doc: |
    (NXuser):
      exists: [min, 0, max, infty]
      doc: |
        Contact information and eventually details person(s) involved in the
        microscope session. This can be the principle investigator who performed
        this experiment. Adding multiple users if relevant is recommended.
      name:
        doc: Given (first) name and surname of the user.
      affiliation:
        exists: recommended
        doc: |
          Name of the affiliation of the user at the point in time
          when the experiment was performed.
      address:
        exists: recommended
        doc: Postal address of the affiliation.
      email:
        exists: recommended
        doc: |
          Email address of the user at the point in time when the experiment
          was performed. Writing the most permanently used email is recommended.
      orcid:
        exists: recommended
        doc: |
          Globally unique identifier of the user as offered by services
          like ORCID or ResearcherID. If this field is field the specific 
          service should also be written in orcid_platform
      orcid_platform:
        exists: recommended
        doc: |
           Name of the OrcID or ResearcherID where the account
           under orcid is registered.
      telephone_number:
        exists: optional
        doc: |
          (Business) (tele)phone number of the user at the point
          in time when the experiment was performed.
      role:
        exists: recommended
        doc: |
          Which role does the user have in the place and at the point 
          in time when the experiment was performed? Technician operating
          the microscope. Student, postdoc, principle investigator, guest
          are common examples.
      social_media_name:
        exists: optional
        doc: |
          Account name that is associated with the user
          in social media platforms.
      social_media_platform:
        exists: optional
        doc: |
          Name of the social media platform where the account
          under social_media_name is registered.
    sample(NXsample):
      exists: recommended
      doc: |
        Description of the sample from which the specimen was prepared or
        site-specifically cut out using e.g. a focused-ion beam instrument.
        
        The sample group is currently a place for storing suggestions from
        atom probers about other knowledge they have gained about the sample
        from which they cut the specimen which is field-evaporated during the
        experiment. Typically this is possible because the atom probe specimen
        is usually not heat treated as is but one assumes that one has the sample
        prepared as needed (i.e. with a specific grain diameter) and can thus
        just cut out the specimen from that material.
        
        There are cases though where the specimen is processed further, i.e. the
        specimen is machined further or exposed to external stimuli during the
        experiment. In this case, these details should not be stored in the
        sample group but atom probers should make suggestions how this application
        definition can be improved to find a better place and compromise
        how to improve this application definition.
        
        In the future also details like how the grain_diameter was characterized,
        how the sample was prepared, how the material was heat-treated etc.,
        should be stored as using specific application definitions/schemas
        which are then arranged and documented with a description of the workflow
        so that actionable graphs become instantiatable.
      grain_diameter(NX_FLOAT):
        exists: optional
        doc: |
          Qualitative information about the grain size, here specifically
          described as the equivalent spherical diameter of an assumed
          average grain size for the crystal ensemble.
          Users of this information should be aware that although the grain
          diameter or radius is often referred to as grain size and used in
          e.g. Hall-Petch-type materials models this is if at all an ensemble
          average whose reporting may be very informative or not if the specimen
          contains a few grains only. In atom probe the latter is often the case
          because grains are measured partially as their diameter can be in the
          order of magnitude of the physical diameter of the specimen.
          
          Reporting a grain size is useful though as it allows judging if
          specific features are expected to be found in the detector hit map.
        unit: NX_LENGTH
      grain_diameter_error(NX_FLOAT):
        exists: optional
        doc: |
          Magnitude of the standard deviation of the grain_diameter.
        unit: NX_LENGTH
      heat_treatment_temperature(NX_FLOAT):
        exists: optional
        doc: |
          The temperature of the last heat treatment step before quenching.
          Knowledge about this value can give an idea how the sample
          was heat treated, however if available a documentation of the
          annealing treatment should be delivered by adding additional files
          which are uploaded alongside an NXapm instance.
          In the future there should better be an own schema used for the
          heat treatment.
        unit: NX_TEMPERATURE
      heat_treatment_temperature_error(NX_FLOAT):
        exists: optional
        doc: |
          Magnitude of the standard deviation of the heat_treatment_temperature.
        unit: NX_TEMPERATURE
      heat_treatment_quenching_rate(NX_FLOAT):
        exists: optional
        doc: |
          Rate of the last quenching step.
          Knowledge about this value can give an idea how the specimen
          was heat treated, however there are many situations where one
          can imagine that the scalar value for just the quenching rate,
          i.e. the first derivative of the measured time-temperature profile
          is itself time-dependant. An example is when the specimen was
          left in the furnace after the furnace was switched off. In this case
          the specimen cools down with a specific rate of how this furnace
          cools down in the lab. Processes which in practice are often not
          documented with measuring the time-temperature profile.
          
          This can be problematic because when the furnace door was left open
          or the ambient temperature in the lab changes, i.e. for a series of
          experiments where one is conducted on a hot summer
          day and the next during winter as might have an effect on the
          evolution of the microstructure. There are many cases where this
          has been reported to be an issue in industry, e.g. think about aging
          aluminium samples left on the factory parking lot on a hot summer
          day.
        unit: NX_ANY
      heat_treatment_quenching_rate_error(NX_FLOAT):
        exists: optional
        doc: |
          Magnitude of the standard deviation of the heat_treatment_quenching_rate.
        unit: NX_ANY
      description:
        exists: optional
      (NXchemical_composition):
        exists: recommended
        doc: |
          The chemical composition of the sample. Typically it is assumed that
          this more macroscopic composition is representative for the material
          so that the composition of the typically substantially less voluminous
          specimen probes from the more voluminous sample.
        normalization:
          doc: |
            Reporting compositions as atom and weight percent yields both
            dimensionless quantities but their conceptual interpretation
            differs. A normalization based on atom_percent counts relative to the
            total number of atoms are of a particular type. By contrast, weight_percent
            normalization factorizes in the respective mass of the elements.
            Python libraries like pint are challenged by these differences as
            at.-% and wt.-% both yield fractional quantities.
          enumeration: [atom_percent, weight_percent]
        ION(NXion):
          exists: [min, 1, max, 118]
          name:
            doc: |
              Human-readable name of the element/ion (e.g. Fe).
              Name has to be a symbol of an element from the periodic table.
              All symbols in the set of NXion instances inside the group
              chemical_composition need to be disjoint.
          composition(NX_FLOAT):
            doc: |
              Composition value for the element/ion referred to under name.
              The value is normalized based on normalization, i.e. composition
              is either an atom or weight percent quantity.
            unit: NX_DIMENSIONLESS
          composition_error(NX_FLOAT):
            doc: |
              Magnitude of the standard deviation of the composition (value).
            unit: NX_DIMENSIONLESS
    specimen(NXsample):
      # NEW ISSUE: inject the conclusion from the discussion with Andrea
      # according to SAMPLE.yaml 0f8df14 2022/06/15
      # NEW ISSUE: addition of a NXfurnace in which one can define the atmosphere
      # and partial pressures of the agents in that atmosphere with which the
      # sample was annealed at which temperature see the work happening at PNNL
      # NEW ISSUE: it would be good to have an application definition NXicp for chemical composition
      name:
        doc: |
          Descriptive name or ideally (globally) unique persistent identifier.
          The name distinguishes the specimen from all others and especially the
          predecessor/origin (see the sample group) from where this specimen was cut.
          In cases where the specimen was e.g. site-specifically cut from the
          sample referred to in the sample group or in cases of an instrument session
          during which multiple specimens are loaded, the name has to be descriptive
          enough to resolve which specimen on e.g. the microtip array was taken.
          
          The user is advised to store the details how a specimen was cut/prepared
          from a specific sample in the sample_history. The sample_history field 
          must not be used for writing an alias of the specimen. Instead,
          use the field alias for this. As an example there may be a specimen/sample
          monitoring system in a lab with bar codes. The bar code is a good
          specimen/sample name. A shorter and more human readable alias like
          A0 can be an example for something to write in the alias field.
          
          In cases where multiple specimens have been loaded into the microscope
          the name has to be the specific one, whose results are stored
          by this NXentry, because a single NXentry is to be used for the 
          characterization of a single specimen in a single continuous run.
          
          Details about the specimen preparation should be stored in the
          sample_history or if this is not possible in the sample group.
      sample_history:
        exists: recommended
        doc: |
          Ideally, a reference to the location of or a (globally) unique
          persistent identifier of e.g. another file which should document
          ideally as many details as possible of the material, its
          microstructure, and its thermo-chemo-mechanical processing/
          preparation history.
          
          In the case that such a detailed history of the sample/specimen is not
          available, use this field as a free-text description to specify a
          sub-set of the entire sample history, i.e. what you would consider
          as being the key steps and relevant information about the specimen,
          its material, microstructure, thermo-chemo-mechanical processing
          state and details of the preparation.
      preparation_date(NX_DATE_TIME):
        exists: recommended
        doc: | 
          ISO 8601 time code with local time zone offset to UTC information
          when the specimen was prepared.
          
          Ideally, report the end of the preparation, i.e. the last known time
          the measured specimen surface was actively prepared. Usually this
          should be a part of the sample history, i.e. the sample is imagined
          handed over for the analysis. At the point it enters the microscope
          the session starts.
          
          Knowing when the specimen was exposed to e.g. specific atmosphere is
          especially required for environmentally sensitive material such as
          hydrogen charged specimens or experiments including tracers with a
          short half time. Further time stamps prior to preparation_date should
          better be placed in resources which describe the sample_history.
      alias:
        exists: optional
        doc: |
          Short_name or abbreviation of the specimen name field.
      atom_types:
        doc: |
          List of comma-separated elements from the periodic table
          that are contained in the sample. 
          If the sample substance has multiple components, all 
          elements from each component must be included in `atom_types`. 
          
          The purpose of the field is to offer materials database systems an
          opportunity to parse the relevant elements without having to interpret
          these from the sample history or from other data sources.
      description:
        exists: optional
        doc: |
          Discouraged free-text field in case properly designed records
          for the sample_history or sample section are not available.
      is_polycrystalline(NX_BOOLEAN):
        exists: recommended
        doc: |
          Report if the specimen is polycrystalline, in which case it
          contains a grain or phase boundary, or if the specimen is a
          single crystal.
      # NEW ISSUE: error model
      # NEW ISSUE: use Andrea and MarkusK groups for
      # describing the geometry of the sample
    (NXdata):
      exists: optional
      doc: |
        Hard link to a location in the hierarchy of the NeXus file
        where the data for default plotting are stored.
    (NXcoordinate_system_set):
      exists: recommended
      doc: |
        Container to hold different coordinate systems conventions.
        
        For the specific idea and conventions to use with the
        NXcoordinate_system_set inspect the description of the
        NXcoordinate_system_set base class. Specific details for application
        in atom probe microscopy follow.
        
        In this research field scientists distinguish usually several
        Euclidean coordinate systems (CS):
        
        * World space;  
          a CS specifying a local coordinate system of the planet earth which
          identifies into which direction gravity is pointing such that
          the laboratory space CS can be rotated into this world CS.
        * The laboratory space;  
          a CS specifying the room where the instrument is located in or  
          a physical landmark on the instrument, e.g. the direction of the  
          transfer rod where positive is the direction how the rod  
          has to be pushed during loading a specimen into the instrument.  
          In summary, this CS is defined by the chassis of the instrument.
        * The specimen space;  
          a CS affixed to either the base or the initial apex of the specimen,  
          whose z axis points towards the detector.  
        * The detector space;  
          a CS affixed to the detector plane whose xy plane is usually in the  
          detector and whose z axis points towards the specimen.  
          This is a distorted space with respect to the reconstructed ion  
          positions.  
        * The reconstruction space;  
          a CS in which the reconstructed ion positions are defined.  
          The orientation depends on the analysis software used.  
        * Eventually further coordinate systems attached to the  
          flight path of individual ions might be defined.  
        
        Coordinate systems should be right-handed ones.
        Clockwise rotations should be considered positive rotations.
        
        In atom probe microscopy a frequently used choice for the detector
        space (CS) is discussed with the so-called detector space image
        (stack). This is a stack of two-dimensional histograms of detected ions
        within a predefined evaporation ID interval. Typically, the set of
        ion evaporation sequence IDs is grouped into chunks.
        
        For each chunk a histogram of the ion hit positions on the detector
        is computed. This leaves the possibility for inconsistency between
        the so-called detector space and the e.g. specimen space.
        
        The transformation here resolves this ambiguity by specifying how
        the positive z-axes of either coordinate systems is oriented.
        Consult the work of A. J. Breen and B. Gault and team
        for further details.
      # Spatial transformations are always active transformations; i.e. the location and direction of a vector in one coordinate system is expressed by the following transformation matrix, T Ptransformed = TPoriginal
      # add a note about what is the tip space
      #Conventions: right-handed, Cartesian, 3D Euclidean CS should be used Laboratory space to be set by This is the space that is set by the chassis of the instrument. The Z direction must be reasonably parallel to gravity (+ve defined to be gravity vector pointing towards lowest ground), but can be defined to be a direction that is nominally parallel to gravity during an experiment. The origin must be placed within a bounding box of the chassis. Tip space instead of specimen space, The space occupied by a tip in the neutral position when ready for analysis. Z+ should be located in the direction of the needle (apex is Z+ from needle centreline). i) If the specimen moves relative to the laboratory frame, and the electrode does not, or if no electrode is present, then the space should be defined such that when the tip is moved physically, it also moves through tip space. ii) If the electrode moves relative to the laboratory frame, then the space should be defined such that, in tip space, the electrode position does not change. 
      # iii) The transformation between laboratory space and Tip space must be describable by a fixed 3x3 transformation matrix. Detector space: This is a 2D space only, and contains X+ and Y+ directions. X+ and Y+ should indicate primary directions on the detector, and should be, for an equivalent straight-flight-path configuration, such that X+ and Y+ is matched to that of tip space. Laser space missing: Laser space: The coordinate frame describing the impinging wavefront on the sample. Z+ is the vector of the propagating wavefront. X+ is the orthogonal component of the tip direction within the tip-laser plane. The origin shall be placed at the best estimate for tip apex position at the start of the experiment. Reconstruction space : The space occupied by a correctly reconstructed dataset. X+ and Y+ should correspond to X+ and Y+ in the detector space. Z+ should be such that the needle centre line is normal to the detector position. The origin shall be placed at the tip apex.
      TRANSFORMATIONS(NXtransformations):
        exists: [min, 0, max, infty]
    # NEW ISSUE: add Breen's Ultramicroscopy paper on atom probe crystallography
    # in what follows each component of the instrument might be equipped with an NXmonitor
    (NXmonitor):
      exists: [min, 0, max, infty]
    # NEW ISSUE ADD AS MANY MONITORS AS NEEDED, also for pressure etc.
    # add a default plot V = f(time/evaporation_id), essentially for each quantity
    atom_probe(NXinstrument):
      doc: |
        Metadata and numerical data of the atom probe and the lab in which it 
        stands.
        
        An atom probe microscope (experiment) is different compared to a large-
        scale facility or electron accelerator experiments in at least two ways:
        
        * First, ionized atoms and molecular ion(s fragments)  
          (in the case of atom probe tomography)  
          and (primarily) imaging gas ions (in the case of field ion  
          microscopy) are accelerated towards a position-sensitive  
          and time-of-flight taking detector system.  
          Hence, there is no real probe/beam.  
        * Second, the specimen is the lens of the microscope.  
        
      (NXcsg):
        exists: optional
      instrument_name:
        doc: |
          Given name of the atom probe at the hosting institution. This is an
          alias. Examples could be LEAP5000, Raptor, Oxcart, one atom at a time,
          etc.
      location:
        exists: optional
        doc: |
          Location of the lab or place where the instrument is installed.
          Using GEOREF is preferred.
      (NXfabrication):
         exists: recommended
         vendor:
           exists: recommended
         model:
           exists: recommended
         identifier:
           exists: recommended
         capabilities:
           exists: optional
      flight_path_length(NX_FLOAT):
        doc: |
          The space inside the atom probe along which ions pass nominally
          when they leave the specimen and travel to the detector.
          
          THIS DOCSTRING NEEDS CLARIFICATION.
        unit: NX_LENGTH
      # NEW ISSUE: discussion depends on the type of instrument, 
      # straight flight path, curved, there were a few comments to made
      # https://fairmat-experimental.github.io/nexus-fairmat-proposal/
      # 50433d9039b3f33299bab338998acb5335cd8951/classes/
      # contributed_definitions/NXapm.html
      # where further details of the flight geometry should be recorded however
      # in the majority of cases these data are not offered by APSuite and
      # so far nobody has asked or seriously proceeded with how to use these
      # pieces of information if they were to be stored
      # MK::NEW ISSUE
      field_of_view(NX_FLOAT):
        exists: recommended
        doc: |
          The nominal diameter of the specimen ROI which is measured in the
          experiment. It is important to mention that the physical specimen
          cannot be measured completely because ions may launch but not be
          detected or hit elsewhere in the analysis_chamber.
        unit: NX_LENGTH
      (NXreflectron):
        # check if doc string gets carried over doc: Device for reducing flight time differences of ions in ToF experiments.
        applied(NX_BOOLEAN):
          doc: | 
            Is a reflectron installed and was it used?
        name:
          exists: optional
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
        description:
          exists: recommended
        (NXcsg):
          exists: optional
      # NEW ISSUE: flat_test_data(NXcollection):
      #   exists: recommended
      #   doc: NEED FOR FURTHER DISCUSSIONS WITH APM COLLEAGUES WHAT IS RELEVANT HERE.
      # NEW ISSUE: have a place to be more specific about the geometry and
      # usage of additional lenses:
      # for the invizo 6000 instrument it makes sense to add at least groups for the two additional lenses whereby the field of view is brought from 50-60 to at most 100 the key invention
      # add: decelerating_electrode(NXlens_em) accelerating_mesh maybe needs an own base class
      # I suggest that this section should be reworked with the local_electrode being required and all other components and opposite counter_electrodes being optional WO2016171675A1 details the key specifications of the components and the setup
      # see https://en.wikipedia.org/wiki/Einzel_lens for details double einzel lens in the invizo 6000 according to A. Breen (UNSW)
      local_electrode(NXlens_em):
        doc: |
          A local electrode guiding the ion flight path. Also called
          counter or extraction electrode.
        name:
          doc: |
            Identifier of the local_electrode in an e.g. database.
        (NXaperture_em):
          exists: optional
          name:
            exists: recommended  # ##MK::should become required
          (NXfabrication):
            exists: optional
            identifier:
              exists: recommended
            capabilities:
              exists: optional
          value(NX_NUMBER):
            exists: recommended  # ##MK::should become required
        (NXcsg):
          exists: optional
      # but the local_electrode does not really on purpose create a magnetic field,
      # specific for an electro-magnetic lens is the symmetry of its field
      # NEW ISSUE: for now keep that we have what is an NXlens_em
      # NEW ISSUE: APEX MONITOR / LEAP distance monitoring
      # NEW ISSUE: the definition of flat test data should be included and documented
      # NEW ISSUE: local electrode, baking strategies, storage
      ion_detector(NXdetector):
        doc: |
          Detector for taking raw time-of-flight and
          ion/hit impact positions data.
        type:
          doc: |
            Description of the detector type. Specify if the detector is
            not the usual type, i.e. not a delay-line detector.
            In the case the detector is a multi-channel plate/
            delay line detector, use mcp_dld. In the case the detector is
            a phosphor CCD use phosphor_ccd. In other case specify
            the detector type via free-text.
        # enumeration: [mcp_dld, phosphor_ccd, other]
        name:
          exists: recommended
          doc: Given name/alias.
        # NEW ISSUE: why not (NXfabrication)
        model:
          exists: recommended
          doc: Given brand or model name by the manufacturer.
        serial_number:
          exists: recommended
          doc: |
            Given hardware name/serial number or hash identifier
            issued by the manufacturer.
        manufacturer_name:
          exists: recommended
          doc: Given name of the manufacturer.
        signal_amplitude(NX_FLOAT):
          exists: optional
          doc: |
            Amplitude of the signal detected on the multi-channel plate (MCP).
            
            This field should be used for storing the signal amplitude quantity
            within ATO files. The ATO file format is used primarily by the
            atom probe groups of the GPM in Rouen, France.
          unit: NX_CURRENT
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
        (NXcsg):
          exists: optional
      pulser(NXpulser_apm):
        # NEW ISSUE: other sources of pulsers are possible
        # NEW ISSUE: see in WO2016171675A1 Invizo 6000 patent from AMETEK
        pulse_mode:
        pulse_frequency(NX_FLOAT):
        pulse_fraction(NX_FLOAT):
        pulsed_voltage(NX_FLOAT):
          exists: recommended
        standing_voltage(NX_FLOAT):
          exists: recommended
        (NXcsg):
          exists: optional
        SOURCE(NXsource):
          exists: [min, 0, max, 2]
          # INVIZO 6000 instrument have two symmetric lasers! so for these
          # laser_gun and laser_beam exists: [min, 0, max, 2]
          doc: |
            Atom probe microscopes use controlled laser, voltage, or a
            combination of pulsing strategies to trigger the excitation
            and eventual field evaporation/emission of an ion during
            an experiment.
            If pulse_mode is set to laser or laser_and_voltage (e.g. for
            LEAP6000-type instruments) having the group/section laser_gun
            is required and the following of its fields have to be filled:
            
            * name  
            * wavelength  
            * energy  
            
          name:
          (NXfabrication):
            exists: optional
            vendor:
              exists: recommended
            model:
              exists: recommended
            identifier:
              exists: recommended
            capabilities:
              exists: optional
          wavelength(NX_FLOAT):
            exists: recommended
          power(NX_FLOAT):
            exists: recommended
          pulse_energy(NX_FLOAT):
            exists: recommended
        laser_beam(NXbeam):
          exists: recommended
          pinhole_position(NXcollection):  # NXsnapshot, NXcg_point_set
            exists: recommended
          spot_position(NXcollection):  # NXsnapshot, NXcg_point_set
            exists: recommended

      stage_lab(NXstage_lab):
        # NEW ISSUE: consider more detailed opportunities for specifying holders like cryo-controller holder, type of holder, material for pucks make a difference for studies which hunt for hydrogen signal, equally dwell time in buffer and load lock chamber and environmental transfer, the application definition does not account for this at the moment, would need a class representing stage and specimen holder hierarchy of the entire sample loading and transfer system and the contributions or not these components make wrt to contamination.
        base_temperature(NX_FLOAT):
          doc: |
            Average temperature at the specimen base, i.e.
            base_temperature during the measurement.
          unit: NX_TEMPERATURE
        temperature(NX_FLOAT):
          exists: optional
          doc: |
            The best estimate, at experiment time, for the temperature at the
            sample base (furthest point along sample apex and holding assembly
            that is removable from the sample stage).
          unit: NX_TEMPERATURE
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
        (NXcsg):
          exists: optional
      # evaporation control in which context is it used?
      # NEW ISSUE: begin add and support I/O of further details
      # NEW ISSUE: with Shyam Katnagallu fix that so far the application definition does not really cover fim as there is no place to store values for a gas injection system and a (partial) pressure sensor for the imaging gas it should be clarified in the docstring of the pressure field if this measured either a chamber total of a species partial pressure
      # NEW ISSUE: add NXapm_energy_analyzer, a voltage grid like done in Rouen/GPM
      analysis_chamber(NXchamber):
        name:
          exists: optional
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
        description:
          exists: optional
        pressure(NX_FLOAT):
          doc: |
            Average pressure in the analysis chamber.
          unit: NX_PRESSURE
        (NXcsg):
          exists: optional
      buffer_chamber(NXchamber):
        exists: optional
        name:
          exists: optional
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
        description:
          exists: optional
        pressure(NX_FLOAT):
          doc: |
            Average pressure in the buffer chamber.
          unit: NX_PRESSURE
        (NXcsg):
          exists: optional
      load_lock_chamber(NXchamber):
        exists: optional
        name:
          exists: optional
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
        description:
          exists: optional
        pressure(NX_FLOAT):
          doc: |
            Average pressure in the load_lock_chamber.
          unit: NX_PRESSURE
        (NXcsg):
          exists: optional
      getter_pump(NXpump):
        exists: optional
        design:
          exists: recommended
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
          (NXcsg):
            exists: optional
      roughening_pump(NXpump):
        exists: optional
        design:
          exists: recommended
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
          (NXcsg):
            exists: optional
      turbomolecular_pump(NXpump):
        exists: optional
        design:
          exists: recommended
        (NXfabrication):
          exists: optional
          vendor:
            exists: recommended
          model:
            exists: recommended
          identifier:
            exists: recommended
          capabilities:
            exists: optional
          (NXcsg):
            exists: optional
      # NEW ISSUE: end add and support I/O of further details

      instrument_calibration(NXcollection):
        exists: recommended
        doc: |
          A possible place, which has to be discussed with the atom probe
          community more though, where quantitative details about the calibration
          of the counter electrode could be stored. Work in this direction was
          e.g. reported by the `Erlangen group <https://www.youtube.com/watch?v=99hNEkqdj78t=1876s>`_  
          (see `P. Felfer et al. <http://dx.doi.org/10.1016/j.ultramic.2016.07.008>`_  )
        # gridded-counter-electrode shadow image polyline fits are exported as
        # NXcg_spline_set see also https://www.youtube.com/watch?v=99hNEkqdj78t=2348s
      # NEW ISSUE: dld_signal_amplitude monitoring
      # arrival_time_pairs: (recommended) NX_NUMBER (Rank: 3, Dimensions: [n_ions, n_dld_wires, 2]) {units=NX_TIME}
      # eventually one may wish to store values from an NXmonitoring tracking the DLD signal amplitude (mV) = f(t)
      specimen_monitoring(NXcollection):
        exists: recommended
        # NEW ISSUE: should be promoted to recommended at some point in particular with closer integration of APM and EM instruments
        doc: | 
          A place where details about the initial shape of the specimen
          can be stored. Ideally, here also data about the shape evolution
          of the specimen can be stored. There are currently very few
          techniques which can measure the shape evolution:
          
          * Correlative electron microscopy coupled with modeling  
            but this usually takes an interrupted experiment  
            in which the specimen is transferred, an image taken,  
            and a new evaporation sequence initiated.  
            Examples are `I. Mouton et al. <https://doi.org/10.1017/S1431927618016161>`_  
            and `C. Fletcher <https://doi.org/10.1088/1361-6463/abaaa6>`_.  
          * Another method, which is less accurate though, is to monitor  
            the specimen evolution via the in-built camera system  
            (if available) in the instrument.  
          * Another method is to use correlated scanning force microscopy  
            methods like reported in `C. Fleischmann <https://doi.org/10.1016/j.ultramic.2018.08.010>`_.  
          * A continuous monitoring of the specimen in a   
            correlative electron microscopy/atom probe experiment  
            is planned to be developed by `T. Kelly et al. <https://doi.org/10.1017/S1431927620022205>`_  
            Nothing can be said about the outcome of this research yet but  
            here is where such spatio-temporally data could be stored.  
          
        # NEW ISSUE: consider the above comments into new fields when important progress has been made.
        initial_radius(NX_FLOAT):
          doc: |
            Ideally measured or best elaborated guess of the
            initial radius of the specimen.
          unit: NX_LENGTH
        shank_angle(NX_FLOAT):
          doc: |
            Ideally measured or best elaborated guess of the shank angle.
            This is a measure of the specimen taper. Define it in such a way
            that the base of the specimen is modelled as a conical frustrum so
            that the shank angle is the (shortest) angle between the specimen
            space z-axis and a vector on the lateral surface of the cone.
          unit: NX_ANGLE
        detection_rate(NX_FLOAT):
          doc: |
            Average detection rate over the course of the experiment.
          unit: NX_DIMENSIONLESS
        # NEW ISSUE: define e.g. radius(NX_FLOAT) and evaporation_id(NX_UINT) to store snapshots of the shape evolution of the specimen.
        estimated_field_at_the_apex(NX_FLOAT):
          exists: optional
          doc: |
            Estimated field at the apex along the evaporation sequence.
          unit: NX_ANY
          dimensions:
            rank: 1
            dim: [[1, n_ions]]

      control_software(NXcollection):
        doc: |
          The majority of atom probe microscopes come from a
          single commercial manufacturer `AMETEK (formerly Cameca) <https://www.atomprobe.com>`_.
          Their instruments are controlled via an(/a set) of integrated
          instrument control system(s) (APSuite/IVAS/DAVis).
          
          By contrast, instruments which were built by individual
          research groups such as of the French (GPM, Rouen, France),
          the Schmitz (Inspico, Stuttgart, Germany),
          the Felfer (Oxcart, Erlangen, Germany),
          the Northwestern (D. Isheim, Seidman group et al.),
          or the PNNL group (Pacific Northwest National Laborary,
          Portland, Oregon, U.S.) have other solutions
          to control the instrument.
          
          Some of which are modularized and open,
          some of which realize also integrated control units with
          portions of eventually undisclosed source code and
          (so far) lacking (support of)/open APIs.
          
          Currently, there is no accepted/implemented
          community-specific API for getting finely granularized
          access to such control settings.
          
          These considerations motivated the design of the NXapm
          application definition in that it stores quantities in NXcollection.
          groups to begin with. Holding heterogeneous, not yet standardized
          but relevant pieces of information is the purpose of this collection.
        # NEW ISSUE: With new development pull fields out of this collection into dedicated groups.
        # might consider moving this to individual groups under (NXpump) or (NXchamber) groups.
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        buffer_chamber(NXcollection):
          exists: optional
          doc: Track time-dependent details over the course of the measurement about the buffer_chamber.
        load_lock_chamber(NXcollection):
          exists: optional
          doc: Track time-dependent details over the course of the measurement about the load_lock_chamber.
        analysis_chamber(NXcollection):
          exists: optional
          doc: Track time-dependent details over the course of the measurement about the analysis_chamber.
        # NEW ISSUE: pressure in the buffer and load lock chambers
        # NEW ISSUE: atmosphere and partial pressures

      # so although strictly speaking the following steps are computational
      # post-processing of detector raw data to be specific they are listed
      # under the atom_lab group because for experiment with commercial instrument
      # these steps are currently not fully separatable as all processing in
      # most cases the processing is done in commercial software.

      status:
        exists: recommended
        doc: |
          A statement whether the measurement was successful or failed prematurely.
        enumeration: [success, failure, unknown]

      # NEW ISSUE: atomic volume, detection efficiency, electric field (assumptions),
      # final specimen state, pre, post image analysis, a reference to three images
      # taken as recommended by cameca, before or after, radius evolution model, field # factor, image compression

      # default statistics would be good to report as output e.g.
      # total ions (single, multiple, partial) reconstructed ions (ranged, unranged)
      # voltage and bowl calibration (peak) mass_calibration as an own field

      ion_impact_positions(NXprocess):
        # NEW ISSUE: check also here the PYCCAPT pipeline from P. Felfer's group
        exists: recommended
        doc: |
          Details about where ions hit the ion_detector and data processing
          steps related to analog-to-digital conversion of detector signals
          into ion hit positions. For AMETEK LEAP instruments this processing
          takes place partly in the control unit of the detector partly
          in the software. The process is controlled by the acquisition/
          instrument control software (IVAS/APSuite/DAVis).
          The exact details are not documented by AMETEK in an open manner.
          For instruments built by individual research groups,
          like the Oxcart instrument, individual timing data from the
          delay-line detector are openly accessible.
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        arrival_time_pairs(NX_NUMBER):
          exists: recommended
          doc: |
            Raw readings from the analog-to-digital-converter
            timing circuits of the detector wires.
          # NEW ISSUE: discuss with Oxcart developers which 
          # modifications might be necessary here.
          unit: NX_TIME
          dimensions:
            rank: 3
            dim: [[1, n_ions], [2, n_dld_wires], [3, 2]]
        hit_positions(NX_NUMBER):
          doc: |
            Evaluated ion impact coordinates at the detector
            (either as computed from the arrival time data
            or as reported by the control software).
            If the acquisition software enables it one can also store in this
            field the hit_positions, as measured by the detector, without any
            corrections.
          unit: NX_LENGTH
          dimensions:
            rank: 2
            dim: [[1, n_ions], [2, 2]]
          # NEW ISSUE: follow the example of base_temperature_time_profile to monitor the temporal evolution of the detection_rate over the course of the evaporation sequence
          # detection_rate_time_profile(NX_FLOAT):
          #   doc: Spatio-temporal profile of the detection rate since the start of the measurement.
          # NEW ISSUE: discuss how to handle cases when we would like to store ideally an array where one dimensions is NX_TIME and the other one is e.g. NX_PERCENT 
      hit_quality_filtering(NXprocess):
        exists: optional
        doc: |
          This could be a place where currently the publicly undocumented
          algorithmic steps are stored how detected hits are judged for their
          quality. In CamecaRoot this there is something mentioned like
          golden and partial hits, here is where this could be documented.
        sequence_index(NX_POSINT):
          exists: recommended
      hit_multiplicity(NXprocess):
        # NEW ISSUE: use symbols to monitor number of pulses
        exists: recommended
        doc: |
          Data post-processing step which is, like the impact position analyses,
          usually executed in the integrated control software. This processing
          yields how many ions were detected with each pulse.
          
          It is possible that multiple ions evaporate and hit the same or
          different pixels of the detector on the same pulse.
          These data form the basis to analyses of the so-called
          (hit) multiplicity of an ion.
          
          Multiplicity must not be confused with how many atoms 
          f the same element or isotope, respectively, a molecular
          ion contains (which is instead encoded with the
          isotope_vector field of each NXion instance).
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        pulses_since_last_ion(NX_UINT):
          exists: recommended
          doc: |
            Number of pulses since the last detected ion pulse.
            For multi-hit records, after the first record, this is zero.
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
          unit: NX_UNITLESS
        pulse_id(NX_UINT):
          # NEW ISSUE: I feel the name is misleading, the quantity is 
          # named like this de facto only because thats the jargon 
          # term with epos files.
          exists: optional
          doc: |
            Number of pulses since the start of the atom probe
            run/evaporation sequence.
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
          unit: NX_UNITLESS
        hit_multiplicity(NX_UINT):
          # NEW ISSUE: further discussions with members of the APM community 
          # is required to clarify this field and what it means
          doc: |
            Hit multiplicity.
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
          unit: NX_UNITLESS
      ion_filtering(NXprocess):
        exists: recommended
        doc: |
          Like impact position and hit multiplicity computations,
          ion filtering is a data post-processing step with which users
          identify which of the detected ions should be included
          in the voltage-and-bowl correction.
          This post-processing is usually performed via GUI interaction
          in the reconstruction pipeline of IVAS/APSuite.
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        evaporation_id_included(NX_BOOLEAN):  # NXcs_filter_boolean_mask
          doc: |
            Bitmask which is set to true if the ion 
            is considered and false otherwise.
          dimensions:
            rank: 1
            dim: [[1, n_ions]]  # then only a group

      voltage_and_bowl_correction(NXprocess):
        # NEW ISSUE: add section for propagation_delay(NXprocess) ?
        exists: recommended
        doc: |
          Data post-processing step to correct for ion impact
          position flight path differences, detector biases,
          and nonlinearities. This step is usually performed
          with commercial software.
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        # NEW ISSUE: realistic is that currently scientists can pull always a calibrated time-of-flight
        # but not necessarily unprocessed timing data from the detector (unless individuals built the instrument).
        # Relevant for ranging are the calibrated data, thats why only these
        # (as an intermediate/compromise solution) are required in this version of the application definition
        raw_tof(NX_FLOAT):
          exists: recommended
          doc: |
            Raw time-of-flight data as read out from the acquisition software
            if these data are available and accessible.
          unit: NX_TIME
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
        calibrated_tof(NX_FLOAT):
          # NEW ISSUE: which type of calibrations are applied is usually a modified
          # sqrt tof to m/q mapping the exact parameter of which are for LEAP instruments not immediately accessible.
          doc: |
            Calibrated time-of-flight.
          unit: NX_TIME
          dimensions:
            rank: 1
            dim: [[1, n_ions]]
        tof_calibration(NXcollection):
          exists: recommended
          doc: |
            The key idea and algorithm of the voltage-and-bowl correction is
            qualitatively similar for instruments of different manufacturers
            or research groups.
            
            Specific differences exists though in the form of different
            calibration models. For now we do not wish to resolve or
            generalize these differences. Rather the purpose of this collection
            is to provide a container where model-specific parameters
            and calibration models can be stored if users know these
            for sure.
            
            For AMETEK LEAP instruments this should be the place for
            storing initial calibration values. These values are
            accessible normally only by AMETEK service engineers.
            They use these for calibrating the detector and instrument.
            
            Users can also use this NXcollection for storing the
            iteratively identified calibrations which scientists
            will see displayed in e.g. APSuite while they execute
            the voltage-and-bowl correction as a part of the
            reconstruction pipeline in APSuite.
          # NEW ISSUE: should be recommended as otherwise one cannot ensure that
          # numerically the same voltage-and-bowl correction results are obtained
          # (without knowning the parameters...)

      mass_to_charge_conversion(NXprocess):
        exists: recommended
        doc: |
          Data post-processing step in which calibrated time-of-flight data
          (ToF) are interpreted into mass-to-charge-state ratios.
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        parameter(NXcollection):
          exists: recommended
          doc: |
            Store vendor-specific calibration models here (if available).
        mass_to_charge(NX_FLOAT):
          doc: |
            Mass-to-charge-state ratio values.
          unit: NX_ANY
          # \@units: Da / a unitless quantity because it is the charge state and not the charge
          dimensions:
            rank: 1
            dim: [[1, n_ions]]

      # NEW ISSUE: make this rather an own subentry NXapm_reconstruction
      reconstruction(NXprocess):
        exists: recommended
        doc: |
          Data post-processing step to create a tomographic reconstruction
          of the specimen based on selected calibrated ion hit positions,
          the evaporation sequence, and voltage curve data.
          Very often scientists use own software scripts according to
          published procedures, so-called reconstruction protocols,
          i.e. numerical recipes how to compute x, y, z atomic positions
          from the input data.
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        protocol_name:
          doc: |
            Qualitative statement about which reconstruction protocol was used.
          enumeration: [bas, geiser, gault, cameca, other]
        parameter:
          # NEW ISSUE: the status here should be promoted to required but currently
          # one needs to manually extract the reconstruction parameters
          # NEW ISSUE: for instance from commercial software, here a better strategy
          # is needed how to document the reconstruction parameter.
          doc: |
            Different reconstruction protocols exist. Although these approaches
            are qualitatively similar, each protocol uses different parameters
            (and interprets these differently). The source code to IVAS/APSuite
            is not open. For now users should store reconstruction parameter
            in a collection.
          # k(NX_FLOAT):
          #   doc: Field factor
          #   unit: ??
          # icf(NX_FLOAT):
          #   doc: Image compression factor.
          #   unit: ??
          # NEW ISSUE: for AMETEK, as well as for the Bas, Geiser, and 
          # Gault protocols we know the usual naming of the parameters
          # they should be added as optional quantities.
          # Therefore, it is difficult for now to generalize the meaning
          # and idea behind all relevant reconstruction parameters.
          # One could create a class for each reconstruction method, as 
          # these methods are de facto application definitions.
        crystallographic_calibration:
          doc: |
            Different strategies for crystallographic calibration of the
            reconstruction are possible. The field is required and details
            should be specified in free-text at least. If the not crystallographic
            calibration was performed the field should be filled with the n/a,
            meaning not applied.
        reconstructed_positions(NX_FLOAT):
          doc: |
            Three-dimensional reconstructed positions of the ions.
            Interleaved array of x, y, z positions in the specimen space.
          unit: NX_LENGTH
          dimensions:
            rank: 2
            dim: [[1, n_ions], [2, 3]]
        visualization(NXprocess):
          exists: recommended
          xdmf_topology(NX_UINT):
            doc: |
              An array of triplets of integers which can serve as a supplementary
              array for Paraview to display the reconstructed dataset.
              The XDMF primitive type is here 1, the number of primitives 1 per
              triplet, the last integer in each triplet is the identifier of
              each point starting from zero.
            unit: NX_UNITLESS
            dimensions:
              rank: 1
              dim: [[1, n_topology]]
              # n_topology == 3*n_ions
        xdmf_topology(NX_UINT):
          doc: |
            Six equally formatted sextets chained together. For each
            sextett the first entry is an XDMF primitive topology
            key (here 5 for polygon), the second entry the XDMF primitive
            count value (here 4 because each face is a quad).
            The remaining four values are the vertex indices.
          unit: NX_UNITLESS
          dimensions:
            rank: 1
            dim: [[1, 36]]

        naive_point_cloud_density_map(NXprocess):
          doc: |
            To get a first overview of the reconstructed dataset,
            the format conversion computes a simple 3d histogram
            of the ion density using one nanometer cubic bins without
            applying smoothening algorithms on this histogram.
          (NXprogram):
            exists: [min, 1, max, infty]
            program:
              \@version:
          (NXdata):
            doc: |
              A default three-dimensional histogram of the total
              number of ions in each bin obtained via using a rectangular
              transfer function.
            \@signal:
            \@axes:
            \@AXISNAME_indices:
            # \@long_name:
            title:
            data_counts(NX_NUMBER):
              doc: Array of counts for each bin.
              unit: NX_UNITLESS
              dimensions:
                rank: 3
                dim: [[1, n_z], [2, n_y], [3, n_x]]
            axis_z(NX_FLOAT):
              doc: Bin center of mass position along the z axis.
              unit: NX_LENGTH
              dimensions:
                rank: 1
                dim: [[1, n_z]]
              \@long_name:
            axis_y(NX_FLOAT):
              doc: Bin center of mass position along the y axis.
              unit: NX_LENGTH
              dimensions:
                rank: 1
                dim: [[1, n_y]]
              \@long_name: 
            axis_x(NX_FLOAT):
              doc: Bin center of mass position along the x axis.
              unit: NX_LENGTH
              dimensions:
                rank: 1
                dim: [[1, n_x]]
              \@long_name:

      # NEW ISSUE: make this rather an own subentry NXapm_ranging
      ranging(NXprocess):
        exists: recommended
        doc: |
         Data post-processing step in which elemental, isotopic,
         and/or molecular identities are assigned to the ions.
         The documentation of these steps is based on ideas
         described in the literature:
         
         * `M. K. Miller <https://doi.org/10.1002/sia.1719>`_  
         * `D. Haley et al. <https://doi.org/10.1017/S1431927620024290>`_  
         * `M. Kühbach et al. <https://doi.org/10.1017/S1431927621012241>`_  
         
        sequence_index(NX_POSINT):
          exists: recommended
        (NXprogram):
          exists: [min, 1, max, infty]
          program:
            \@version:
        number_of_ion_types(NX_UINT):
          doc: |
            How many ion types are distinguished.
            If no ranging was performed each ion is of the special unknown type.
            The iontype ID of this unknown type is 0 which is a reserve value.
            Consequently, iontypes start counting from 1.
          unit: NX_UNITLESS
        maximum_number_of_atoms_per_molecular_ion(NX_UINT):
          doc: |
            Assumed maximum value that suffices to store all relevant
            molecular ions, even the most complicated ones.
            Currently a value of 32 is used.
          unit: NX_UNITLESS

        mass_to_charge_distribution(NXprocess):
          exists: recommended
          doc: |
            Specifies the computation of the mass-to-charge histogram.
            Usually mass-to-charge values are studied as an ensemble quantity,
            specifically these values are binned.
            This (NXprocess) stores the settings of this binning.
          (NXprogram):
            exists: [min, 1, max, infty]
            program:
              \@version:
          range_minmax(NX_FLOAT):
            doc: |
              Smallest and largest mass-to-charge-state ratio value.
            unit: NX_ANY
            # \@units: Da
            # NEW ISSUE: NX_ATOMIC_MASS_UNIT use Tommasso scheme here Da
            dimensions:
              rank: 1
              dim: [[1, 2]]
          range_increment(NX_FLOAT):
            doc: |
              Binning width of the mass-to-charge-state ratio values.
            unit: NX_ANY
            # \@units: Da
            # NEW ISSUE: unit must match with range, is Da
          mass_spectrum(NXdata):
            doc: |
              A default histogram aka mass spectrum of
              the mass-to-charge-state ratio values.
            \@signal:
            \@axes:
            \@AXISNAME_indices:
            # \@long_name:
            title:
            data_counts(NX_NUMBER):
              doc: Array of counts for each bin.
              unit: NX_UNITLESS
              dimensions:
                rank: 1
                dim: [[1, n_bins]]
              \@long_name:
            axis_mass_to_charge(NX_FLOAT):
              doc: |
                Right boundary of each mass-to-charge-state ratio value bin.
              unit: NX_ANY
              # \@units: Da
              dimensions:
                rank: 1
                dim: [[1, n_bins]]
              \@long_name:

        background_quantification(NXprocess):
          exists: recommended
          doc: |
            Details of the background model which was used to
            correct the total counts per bin into counts.
          (NXprogram):
            exists: [min, 1, max, infty]
            program:
              \@version:
        # NEW ISSUE: add parameters of the background model in an e.g.
        # NXcollection as these are specific to every background model
        # NEW ISSUE: touching upon i.e. research activities by Andrew London et al.
        # substantiating the need for a clearer description how peak/signals were
        # eventually processed via deconvolution methods

        peak_search_and_deconvolution(NXprocess):
          exists: recommended
          doc: |
            How where peaks in the background-corrected in the histogram
            of mass-to-charge-state ratio values identified?
          (NXprogram):
            exists: [min, 1, max, infty]
            program:
              \@version:
          (NXpeak):
            exists: [min, 0, max, infty]
            label:
              exists: recommended
            peak_model:
              doc: |
                THIS DOCSTRING NEEDS CLARIFICATION.

        peak_identification(NXprocess):
          exists: recommended
          doc: |
            Details about how peaks, with taking into account
            error models, were interpreted as ion types or not.
          (NXprogram):
            exists: [min, 1, max, infty]
            program:
              \@version:
          (NXion):
            exists: [min, 0, max, 256]
            isotope_vector(NX_UINT):
            charge_state(NX_INT):
            mass_to_charge_range(NX_FLOAT):
            nuclid_list(NX_UINT):
              exists: recommended
            name:
              exists: recommended
