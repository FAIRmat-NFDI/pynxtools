#pincelli at fhi-berlin.mpg.de, 11/2021
#a draft version of a NeXus application definition for arpes,
#the existing NXarpes is too restrictive, this application definition aims at generalizing it
#to be agnostic of the experimental details.
#the draft uses the application example of a simple 2D slice through the k-space, the elementary unit of
#arpes measurements.
#It uses only existing NeXus base classes. It is designed to be extended by other application definitions
# with higher granularity in the data description.

name: NXmpes_core # Decided to use "core" and not "base" to avoid confusion with "base class". This is the most general (core) appdef.
doc: This is the most general application definition for multidimensional photoelectron spectroscopy.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays
  nfa: Number of fast axes (acquired simutaneously) e.g. emission angle, kinetic energy
  nsa: Number of slow axes (acquired scanning a physical quantity) e.g. lens voltage, photon energy or temperature
  nx: Number of points in the first angular direction
  ne: Number of points in the energy dispersion direction
category: application # Defaults "exists" to "required"
#draft the application definition
(NXentry):
  \@entry:
    doc: "NeXus convention is to use \"entry1\", \"entry2\", for analysis software to locate each entry."
  title:
  start_time(NX_DATE_TIME):
  definition:
    \@version: # New approach of NIAC: version controlled application definitions.
    doc: Official NeXus NXDL schema to which this file conforms.
    enumeration: [NXmpes_core]
  (NXinstrument):
    (NXsource):
      type:
      name:
      probe:
        enumeration: [x-ray,ultraviolet]
    (NXbeam): # Describes the beam at the sample.
      doc: Properties of the beam at the sample.
      distance(NX_NUMBER):
        doc: Distance of the point of evaluation of the beam from the sample.
        unit: NX_LENGTH
      incident_energy(NX_NUMBER):
        doc: Incident photon energy.
        unit: NX_ENERGY
      incident_energy_spread(NX_NUMBER): # Ahead of base class
        exists: recommended
        doc: FWHM energy linewidth of the incident photons.
        unit: NX_ENERGY
      # Not in NIAC. incident_wavelength_spread exists but is uncomfortable for photoemission people.
      incident_polarization(NX_NUMBER):
        exists: recommended
        doc: Incident polarization specified as a Stokes vector.
        exists: optional
        unit: NX_ANY
        dimensions:
          rank: 1
          dim: [[1, 4]]
      # In NIAC "incident_polarization" is a 2-vector of floats.
        # It is not explained but looks like a real-valued Jones vector, which
        # cannot describe circular or partially polarized.
        # Extended to a 4-vector of floats.
        # It is then meant to be represented as a Stokes vector.
    (NXelectronanalyser):
      description:
        doc: Free text description of the type of detector.
      energy_resolution(NX_NUMBER): # Ahead of base class
        doc: Energy resolution of the analyser with the current setting.
        unit: NX_ENERGY
      momentum_resolution(NX_NUMBER): # Ahead of base class
        doc: Momentum resolution of the analyser with the current setting.
        unit: NX_WAVENUMBER
      fast_axes:
        doc: List of the axes that are acquired symultaneously by the detector
        dimensions:
          rank: 1
          dim: [[1,nfa]]
      slow_axes:
        doc: List of the axes that are acquired by scanning a physical parameter, listed in order of decreasing speed.
        dimensions:
          rank: 1
          dim: [[1,nsa]]
      # Examples: Fermi surface maps at every step of a temperature ramp.
      # With an hemispherical:
      # fast_axes: [energy,kx]
      # slow_axes: [ky,temperature]
      # With a tof:
      # fast_axes: [energy, kx, ky]
      # slow_axes: [temperature]
      # axes can be less abstract than this, i.e. [detector_x, detector_y] and [manipulator_angle, temperature]
      (NXcollectionlens):
        scheme: #Ahead of base class
          doc: Scheme of collector lens.
          enumeration: [Standard, Deflector, PEEM, Momentum Microscope]
        lens_mode:
          exists: recommended
          doc: Labelling of a standard lens setting
        projection:
          doc: The space projected in the angularly dispersive directions, i.e. real or reciprocal
          enumeration: [real, reciprocal]
        (NXaperture): # Ahead of base class
          exists: recommended
          doc: aperture generating the momentum and/or energy filtering
          description:
          enumeration: [slit,pinhole,iris]
          shape:
          description:
            doc: Shape of the aperture, curved or straight for horizontal slits, square or round for pinhole etc.
            enumeration: [curved, straight, circle, square, hexagon, octagon, bladed]
          size(NX_NUMBER):
            doc: The relevant dimension for the aperture (slit width, pinhole diameter etc.)
            unit: NX_LENGTH
      (NXenergydispersion):
        scheme:
          doc: Energy dispersion scheme employed.
          enumeration: [tof, hemispherical, cylindrical mirror, display mirror, retarding grid]
        pass_energy(NX_NUMBER):
          doc: energy of the electrons on the mean path of the analyser
          unit: NX_ENERGY
        energy_scan_mode: # Ahead of base class
          doc: Way of scanning the energy axis (fixed or sweep)
          enumeration: [fixed,sweep]
      (NXdetector):
        amplifier_type:
          doc: Type of electron amplifier.
          enumeration: [MCP, channeltron] # channeltron might be used for some 1D applications such as spin detectors.
        detector_type:
          doc: Description of the detector type.
          enumeration: [DLD,Phosphor+CCD,Phosphor+CMOS,ECMOS]
        sensor_pixels(NX_INT): # Ahead of base class
          doc: Number of raw active element in each dimension. Important for swept scans.
          dimensions:
            rank: 1
            dim: [[1, 2]]
        (NXdata): # Raw signal without calibrated axes
          exists: recommended
          \@signal: raw # There is an object named raw that contains the signal
          raw(NX_NUMBER): # There is a block of numbers named raw.
  (NXprocess):
      calculated_kx(NX_FLOAT):
        exists: recommended
        doc: calibrated kx momentum axis
        unit: NX_WAVENUMBER
        dimensions:
          rank: 1
          dim: [[1, nx]]
      calculated_energy(NX_FLOAT):
        exists: recommended
        doc: calibrated energy axis
        unit: NX_ENERGY
        dimensions:
          rank: 1
          dim: [[1, ne]]
      (NXdistortion):
        applied(NX_BOOLEAN):
          doc: Has a distortion correction been applied?
      (NXregistration):
        applied(NX_BOOLEAN):
          doc: Has an image registration been applied?
      energy_calibration(NXcalibration):
        applied(NX_BOOLEAN):
          doc: Has an energy calibration been applied?
      (NXcalibration):
        applied(NX_BOOLEAN):
          doc: Has a momentum calibration been applied?
  (NXsample):
    name:
      doc: Simple and descriptive name of the sample
    chemical_formula:
      doc: Chemical formula of the sample
    sample_history:
      exists: optional
      doc: Ideally, a reference to the location or a unique identifier or other metadata file. In the case that is not available, free-text description.
    preparation_date(NX_DATE_TIME):
      exists: recommended
      doc: ISO 8601 date of preparation of the sample for the ARPES experiment (i.e. cleaving, last annealing).
      unit: NX_TIME
    description:
      doc: Free-text surface preparation technique for the ARPES experiment, i.e. UHV cleaving, in-situ growth, sputtering/annealing etc.
    temperature(NX_NUMBER):
      doc: Temperature of the sample
      unit: NX_TEMPERATURE
    situation: [vacuum]
    pressure(NX_NUMBER):
      doc: Residual gas pressure at the sample
      unit: NX_PRESSURE
  (NXdata):
    \@signal: data # There is an object named data that contains the signal
    \@energy_indices: # There is an axis (to be specified) that represents energy
    \@kx_indices: # There is an axis (to be specified) that represents the first parallel momentum direction
    data(NX_NUMBER): # There is a block of numbers named data.
# NXdata structure is extremeley free here to provide a low entry barrier for data parsing in the core appdef.
# Will be restricted further in extending appdefs.
# If there is no rebinning between raw data and plottable data, one can use links
# to link the data in NXinstrument:NXelectronanalyser:NXdetector:NXdata:Raw
# and the axes in NXprocess:calculated_kx and NXprocess:calculated_energy
