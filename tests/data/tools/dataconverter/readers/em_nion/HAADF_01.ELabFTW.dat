{
    "/ENTRY[entry]/experiment_description": "Example data for a HA(A)DF experiment from Benedikt Haas for development of software tools for FAIRmat.",
    "/ENTRY[entry]/program": "nionswift",
    "/ENTRY[entry]/program/@version": "v0.16.1",
    "/ENTRY[entry]/thumbnail/@type": "Not used in this example",
    "/ENTRY[entry]/operator/name": "Dr. Benedikt Haas",
    "/ENTRY[entry]/operator/affiliation": "Humboldt Universität zu Berlin",
    "/ENTRY[entry]/operator/address": "Newtonstraße 15, 12489 Berlin, Germany",
    "/ENTRY[entry]/operator/email": "None, (not shared here for data security purposes)",
    "/ENTRY[entry]/operator/orcid": "0000-0000-0000-0000 (not shared here for data security purposes)",
    "/ENTRY[entry]/operator/telephone_number": "None, (not shared here for data security purposes)",
    "/ENTRY[entry]/operator/role": "Research scientists, responsible for taking care of the Nion microscope",
    "/ENTRY[entry]/SAMPLE[sample]/name": "Example",
    "/ENTRY[entry]/SAMPLE[sample]/sample_history": "No particular relevant history",
    "/ENTRY[entry]/SAMPLE[sample]/short_title": "",
    "/ENTRY[entry]/SAMPLE[sample]/atom_types": "",
    "/ENTRY[entry]/SAMPLE[sample]/thickness": 0.0,
    "/ENTRY[entry]/SAMPLE[sample]/thickness/@units": "nm",
    "/ENTRY[entry]/em_lab/name": "Nion",
    "/ENTRY[entry]/em_lab/location": "IRIS Adlershof, Humboldt-Universität zu Berlin, Zum Großen Windkanal 2, 12489 Berlin",
    "/ENTRY[entry]/em_lab/instrument_manufacturer": "Nion Co.",
    "/ENTRY[entry]/em_lab/instrument_model": "Nion Hermes 30-200kV",
    "/ENTRY[entry]/em_lab/instrument_identifier": "We should use e.g. the inventory number",
    "/ENTRY[entry]/em_lab/instrument_capability": "No further details are relevant for this example",
    "/ENTRY[entry]/em_lab/hadf/SCANBOX_EM[scanbox_em]/program": "AS2, currently nionswift does not expose this piece of information.",
    "/ENTRY[entry]/em_lab/hadf/SCANBOX_EM[scanbox_em]/program/@version": "0",
    "/ENTRY[entry]/em_lab/electron_gun/probe": "electron",
    "/ENTRY[entry]/em_lab/electron_gun/emitter_type": "field_emission",
    "/ENTRY[entry]/em_lab/electron_gun/description": "No further details of the gun are relevant for this example",
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this piece of information.",
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/model": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this piece of information.",
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/serial_number": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this piece of information.",
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/manufacturer_name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this piece of information.",
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/value": 0,
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/value/@units": "NX_UNITLESS",
    "/ENTRY[entry]/em_lab/APERTURE[aperture]/description": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this piece of information.",
    "/ENTRY[entry]/em_lab/LENS_EM[lens_em]/type": "double",
    "/ENTRY[entry]/em_lab/LENS_EM[lens_em]/name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/LENS_EM[lens_em]/model": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/LENS_EM[lens_em]/serial_number": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/LENS_EM[lens_em]/manufacturer_name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/LENS_EM[lens_em]/description": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/has_cs_corrector": true,
    "/ENTRY[entry]/em_lab/CORRECTOR_CS[corrector_cs]/name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/CORRECTOR_CS[corrector_cs]/model": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/CORRECTOR_CS[corrector_cs]/serial_number": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/CORRECTOR_CS[corrector_cs]/manufacturer_name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/CORRECTOR_CS[corrector_cs]/description": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/STAGE_LAB[stage_lab]/design": "single tilt",
    "/ENTRY[entry]/em_lab/STAGE_LAB[stage_lab]/name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/STAGE_LAB[stage_lab]/model": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/STAGE_LAB[stage_lab]/serial_number": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/STAGE_LAB[stage_lab]/manufacturer_name": "The JSON metadata file which nionswift generated at the point in time when the example dataset was composed did not contain this information. Instead, these data could be stored in a lab-maintained config file which gets then parsed equivalently like this file, e.g. or a spreadsheet document.",
    "/ENTRY[entry]/em_lab/STAGE_LAB[stage_lab]/description": "Not of relevance for this example.",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/name": "The example does not detail how multiple images are stored. This should be added as part of the next sprint, in which then also this field can be filled.",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/model": "The example does not detail how multiple images are stored. This should be added as part of the next sprint, in which then also this field can be filled.",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/serial_number": "The example does not detail how multiple images are stored. This should be added as part of the next sprint, in which then also this field can be filled.",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/manufacturer_name": "The example does not detail how multiple images are stored. This should be added as part of the next sprint, in which then also this field can be filled.",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/sensor_material": "The example does not detail how multiple images are stored. This should be added as part of the next sprint, in which then also this field can be filled.",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/bit_depth_readout": 0,
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/number_of_cycles": 0,
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/x_pixel_size": 0.0,
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/x_pixel_size/@units": "NX_LENGTH",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/y_pixel_size": 0.0,
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/y_pixel_size/@units": "NX_LENGTH",
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/flatfield_applied": false,
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/flatfield": 0.0,
    "/ENTRY[entry]/em_lab/DETECTOR[detector]/description": "The example does not detail how multiple images are stored. This should be added as part of the next sprint, in which then also this field can be filled.",
    "/ENTRY[entry]/em_lab/miscellaneous/camera_length": 0.0,
    "/ENTRY[entry]/em_lab/miscellaneous/camera_length/@units": "Not of relevance for this example",
    "/ENTRY[entry]/em_lab/miscellaneous/magnification": 0.0,
    "/ENTRY[entry]/em_lab/miscellaneous/magnification/@units": "Not of relevance for this example",
    "/ENTRY[entry]/em_lab/hadf/program": "nionswift, but this is not stored in the JSON",
    "/ENTRY[entry]/em_lab/hadf/program/@version": "v0.16.1, but this is not stored in the JSON"
}
