{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to the FAIRmat NeXus documentation","text":"<p>Within FAIRmat, we are extending the NeXus data format standard to support the FAIR principles for experimental data in materials science.</p> <p>This documentation covers our contributions to the NeXus standard, and our supporting software tool, <code>pynxtools</code>. <code>pynxtools</code> maps data and metadata from diverse instruments and electronic lab notebooks (ELNs) into NeXus-compliant HDF5 files. It supports parsing, normalization, visualization, and ontology matching.</p> <p><code>pynxtools</code> offers scientists a convenient way to use the NeXus format and solves the challenge of unstructured and non-standardized data in experimental materials science. </p> <p>The software can also be used as a plugin in the research data management system NOMAD, an open-source platform for FAIR materials data management. Learn more in the NOMAD documentation.</p> <p>We are offering a small guide to getting started with NeXus, <code>pynxtools</code>, and NOMAD:</p> <ul> <li>Getting started</li> </ul>  Contact  <p>For questions or suggestions:</p> <ul> <li>Open an issue on the <code>pynxtools</code> GitHub</li> <li>Join our Discord channel </li> <li>Get in contact with our lead developers.</li> </ul> Project and community <p>The work is funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) - 460197019 (FAIRmat).</p>"},{"location":"index.html#tutorial","title":"Tutorial","text":"<ul> <li>Installation guide</li> <li>Converting your research data to NeXus</li> <li>Uploading NeXus data to NOMAD</li> <li>Development guide</li> </ul>"},{"location":"index.html#how-to-guides","title":"How-to guides","text":""},{"location":"index.html#nexus-data-modelling","title":"NeXus data modelling","text":"<ul> <li>Writing an application definition</li> </ul>"},{"location":"index.html#pynxtools","title":"pynxtools","text":"<ul> <li>Build your own <code>pynxtools</code> plugin</li> <li>How to use the built-in <code>MultiFormatReader</code></li> <li>Test functionality for <code>pynxtools</code> plugins</li> <li>Running <code>pynxtools</code> tests in parallel</li> <li>Using Python to create NeXus files</li> <li>Validation of NeXus files</li> </ul>"},{"location":"index.html#learn","title":"Learn","text":""},{"location":"index.html#an-introduction-to-nexus-and-its-design-principles","title":"An introduction to NeXus and its design principles","text":"<ul> <li>A primer on NeXus</li> <li>Rules for storing data in NeXus</li> </ul>"},{"location":"index.html#pynxtools_1","title":"pynxtools","text":"<ul> <li>Data conversion in <code>pynxtools</code></li> <li>Validation of NeXus files</li> <li>The <code>MultiFormatReader</code> as a reader superclass</li> </ul>"},{"location":"index.html#reference","title":"Reference","text":""},{"location":"index.html#nexus-definitions","title":"NeXus definitions","text":"<p>Here, you find the detailed list of application definitions and base classes and their respective fields.</p>"},{"location":"index.html#pynxtools_2","title":"pynxtools","text":"<p><code>pynxtools</code> has a number of command line tools that can be used to convert data and verify NeXus files. You can find more information about the API here.</p> <p>Within FAIRmat, we maintain a number of generic built-in pynxtools readers, together with reader plugins for different experimental techniques. Here you can find more information:</p> <ul> <li>Built-in <code>pynxtools</code> readers</li> <li>FAIRmat-supported <code>pynxtools</code> plugins</li> </ul>"},{"location":"contact.html","title":"Get in contact","text":"<p>NOMAD and <code>pynxtools</code> are open source project that warmly welcome community projects, contributions, suggestions, bug fixes, and constructive feedback. <code>pynxtools</code> is build mainly within FAIRmat Area B - Experiment.</p> <p>You can reach us by different channels. You can send as directly an email to the main contributors list:</p> Name E-mail Github profiles Dr. Lukas Pielsticker lukas.pielsticker@physik.hu-berlin.de @lukaspie Dr. Markus K\u00fchbach markus.kuehbach@physik.hu-berlin.de @mkuehbach Rubel Mozumder rubel.mozumder@physik.hu-berlin.de @RubelMozumder Sherjeel Shabih sherjeel.shabih@physik.hu-berlin.de @sherjeelshabih Dr. Jos\u00e9 Marquez josemarquez@physik.hu-berlin.de @Pepe-Marquez <p>Alternatively, you can also:</p> <ul> <li>Open an issue on the pynxtools GitHub</li> <li>Join the NOMAD discord channel and ask us there directly.</li> </ul>"},{"location":"getting-started.html","title":"Getting started","text":"<p>This is the entry point for anybody that is new to the NeXus data format and to FAIRmat/NOMAD. It serves as a guide to getting started with the <code>pynxtools</code> software.</p>"},{"location":"getting-started.html#what-should-you-should-know-before-reading-this-guide","title":"What should you should know before reading this guide?","text":"<p>Nothing!</p> <p>However, to get started, it does not hurt to read the following explanations:</p> <ul> <li>A primer on NeXus</li> <li>What is FAIR data</li> </ul>"},{"location":"getting-started.html#what-you-will-know-at-the-end-of-this-guide","title":"What you will know at the end of this guide?","text":"<p>You will have</p> <ul> <li>a basic understanding of what this software is about and its capabilities</li> <li>how the different software tools are interconnected</li> </ul>"},{"location":"getting-started.html#what-is-nexus","title":"What is NeXus?","text":"<p>NeXus is a data format intended for describing and standardizing experimental data. NeXus provides a specific grammar and syntactic rules via NXDL (NeXus Definition Language) for organizing data within files in addition to a dictionary of well-defined domain-specific field concepts. Since each individual concept is properly documented, it allows communities to agree on terms describing their data. Thus, NeXus acts as a contract on which concepts have to be present and how to name them in a given dataset.</p> <p>For a more detailed description on the general principles of NeXus we recommend:</p> <ul> <li>our learning page for NeXus</li> <li>the official NeXus manual</li> </ul>"},{"location":"getting-started.html#what-is-fairmat","title":"What is FAIRmat?","text":"<p>FAIRmat is one of the consortia of the German National Research Data Infrastructure (NFDI). It is tasked with building a FAIR data infrastructure for condensed-matter physics and the chemical physics of solids.</p>"},{"location":"getting-started.html#what-is-nomad","title":"What is NOMAD?","text":"<p>Within FAIRmat, we develop NOMAD: an open source research data management system for making materials science data searchable and publishable. NOMAD hosts a wide variety of datasets from different domains of materials science - including, but not limited to, NeXus data.</p> <ul> <li>NOMAD Homepage</li> <li>NOMAD documentation</li> </ul>"},{"location":"getting-started.html#what-is-pynxtools","title":"What is pynxtools?","text":"<p><code>pynxtools</code> is our main software tool for end-to-end handling of data from experiments using NeXus. It contains a parser for combining various instrument output formats and electronic lab notebook (ELN) formats into an HDF5 file according to NeXus application definitions. It provides validation against these NeXus definitions and can be used to annotate existing NeXus files with semantic meaning.</p> <p><code>pynxtools</code> acts as a Python framework with a built-in API for writing reader plugins that provide specialized reading and conversion functionality for different domains of materials science.</p> <p><code>pynxtools</code> can be used for standalone NeXus conversion, but it can also be used as a plugin to NOMAD, extending NOMAD schemas and parsing capabilities with NeXus-specific capabilities.</p>"},{"location":"getting-started.html#how-can-i-install-pynxtools-how-can-i-contribute","title":"How can I install pynxtools? How can I contribute?","text":"<ul> <li>Installation tutorial</li> <li>Development tutorial</li> </ul>"},{"location":"getting-started.html#does-pynxtools-require-nomad-or-nomad-oasis","title":"Does <code>pynxtools</code> require NOMAD or NOMAD OASIS?","text":"<p>No. With the available plugins or community-developed plugins, you can use <code>pynxtools</code> as a standalone tool for converting raw data from experiments to NeXus-compliant files. Therefore, this tool acts as the framework to design instances of data within the NeXus universe. The software can, however, be used as a NOMAD plugin to parse NeXus files, please see the section below for details.</p>"},{"location":"getting-started.html#how-to-use-pynxtools-with-nomad","title":"How to use <code>pynxtools</code> with NOMAD","text":"<p>NeXus is supported by the research data management platform NOMAD (as a NOMAD plugin). Experimental data files that are compatible with a NeXus application definition can easily be uploaded to NOMAD and translated into the NOMAD Metainfo data model using <code>pynxtools</code>. Therefore, the data file can be recognized by NOMAD's search system. If you want to learn more about uploading NeXus data to NOMAD, please refer to the NeXus to NOMAD tutorial of this documentation.</p> <p>To use the <code>pynxtools</code> Python package with NOMAD, simply install it in the same Python environment as the <code>nomad-lab</code> package. NOMAD will recognize <code>pynxtools</code> as a plugin automatically and offer automatic parsing of <code>.nxs</code> files. In addition, NOMAD will automatically transform the NeXus definitions shipped with <code>pynxtools</code> into its own data model called <code>Metainfo</code>. By default, <code>pynxtools</code> is already included in the NOMAD [production]https://nomad-lab.eu/prod/v1/gui/ and staging deployments..</p> <p>A note on FAIR data</p> <p>FAIRmat's contribution to the existing NeXus standard, together with the tools provided through <code>pynxtools</code>, enable scientists and research groups working with data, as well as helping communities implement standardized FAIR research data.</p> <p>You can think of NeXus fulfilling the interoperability and reproducibility part and a research data management platform like NOMAD the findable and accessible part.</p> <p>We consider <code>pynxtools</code> particularly useful for meeting the following FAIR principle as defined in FAIR Principles: Interpretations and Implementation Considerations: F2-4, I2-I3, and R1.</p>"},{"location":"getting-started.html#where-to-go-next","title":"Where to go next?","text":"<p>We suggest you have a look at one of our tutorials:</p> <ul> <li>installing <code>pynxtools</code></li> <li>how go convert data to NeXus</li> </ul>"},{"location":"how-tos/nexus/transformations.html","title":"Representing experimental geometries","text":"<p>Work in progress</p> <p>This part of the documentation is still being written and it might be confusing or incomplete.</p>"},{"location":"how-tos/nexus/using-multiple-appdefs.html","title":"Using multiple application definitions","text":"<p>Work in progress</p> <p>This part of the documentation is still being written and it might be confusing or incomplete.</p>"},{"location":"how-tos/nexus/writing-an-appdef.html","title":"Writing an application definition","text":"<p>Work in progress</p> <p>This part of the documentation is still being written and it might be confusing or incomplete.</p> <p>Concept of this How-to:</p> <p>Create an example file NXdouble_slit</p> <p>NXslit_experiments --&gt; NXdouble_slit NXslit_experiments --&gt; NXsingle_slit</p> <p>They should learn the basic principles of how nexus works, the different path notations</p> <ul> <li>Principles of nexus<ul> <li>concepts</li> <li>application definitions</li> <li>base classes</li> </ul> </li> <li>Inheritance of application definitions and base classes</li> <li>Connection of concept paths and instance paths</li> <li>Description of application definition/base class notation (upper and lower case)</li> <li>Basic tools for creation (pynxtools) and verification (pynxtools?) of nexus files</li> </ul> <p>Additional information (i.e., not in this tutorial but linked to this):</p> <ul> <li>Creating a reader in pynxtools</li> <li>Reading/writing nexus data in nomad</li> </ul> <p>The requirements are set by the community via workshops or at conferences. To initiate or propose changes/additions, you can comment the FAIRMat NeXus proposal by going to the NeXus definitions, and using the hypothes.is tool (sign-up/log-in) to give us some feedback (Red boxes in the image. Expand this panel on the left by clicking on the arrow symbol). </p>"},{"location":"how-tos/pynxtools/build-a-plugin.html","title":"Build your own pynxtools plugin","text":"<p>The pynxtools dataconverter is used to convert experimental data to NeXus/HDF5 files based on any of the provided NXDL schemas. The converter can be extending to support other data formats by allowing extensions called <code>readers</code>.  There exist a set of built-in pynxtools readers as well as <code>pynxtools</code> reader plugins to convert supported data files for some experimental techniques into NeXus-compliant files.</p> <p>Your current data is not supported yet by the built-in <code>pynxtools</code> readers or the officially supported <code>pynxtools</code> plugins?</p> <p>Don't worry, the following how-to will guide you through the steps of writing a reader for your own data.</p>"},{"location":"how-tos/pynxtools/build-a-plugin.html#getting-started","title":"Getting started","text":"<p>You should start by creating a clean repository that implements the following structure (for a plugin called <code>pynxtools-plugin</code>):</p> <pre><code>pynxtools-plugin\n\u251c\u2500\u2500 .github/workflows\n\u251c\u2500\u2500 docs\n\u2502   \u251c\u2500\u2500 explanation\n\u2502   \u251c\u2500\u2500 how-tos\n\u2502   \u251c\u2500\u2500 reference\n\u2502   \u251c\u2500\u2500 tutorial\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 pynxtools_plugin\n\u2502       \u251c\u2500\u2500 reader.py\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 data\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 mkdocs.yaml\n\u251c\u2500\u2500 dev-requirements.txt\n\u2514\u2500\u2500 pyproject.toml\n</code></pre> <p>To identify <code>pynxtools-plugin</code> as a plugin for <code>pynxtools</code>, an entry point must be established (in the <code>pyproject.toml</code> file):</p> pyproject.toml<pre><code>[project.entry-points.\"pynxtools.reader\"]\nmydatareader = \"pynxtools_plugin.reader:MyDataReader\"\n</code></pre> <p>Note that it is also possible that your plugin contains multiple readers. In that case, each reader must have its unique entry point.</p> <p>Here, we will focus mostly on the <code>reader.py</code> file and how to build a reader. For guidelines on how to build the other parts of your plugin, you can have a look here:</p> <ul> <li>Documentation writing guide</li> <li>Plugin testing framework</li> </ul>"},{"location":"how-tos/pynxtools/build-a-plugin.html#writing-a-reader","title":"Writing a Reader","text":"<p>After you have established the main structure, you can start writing your reader. The new reader shall be placed in <code>reader.py</code>.</p> <p>Then implement the reader function:</p> reader.py<pre><code>\"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\nfrom typing import Any\n\nfrom pynxtools.dataconverter.readers.base.reader import BaseReader\n\nclass MyDataReader(BaseReader):\n    \"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\n\n    supported_nxdls = [\n        \"NXmynxdl\" # this needs to be changed during implementation.\n    ]\n\n    def read(\n        self,\n        template: dict = None,\n        file_paths: tuple[str] = None,\n        objects: tuple[Any] = None\n    ) -&gt; dict:\n        \"\"\"Reads data from given file and returns a filled template dictionary\"\"\"\n        # Here, you must provide functionality to fill the the template, see below.\n        # Example:\n        # template[\"/entry/instrument/name\"] = \"my_instrument\"\n\n        return template\n\n\n# This has to be set to allow the convert script to use this reader. Set it to \"MyDataReader\".\nREADER = MyDataReader\n</code></pre>"},{"location":"how-tos/pynxtools/build-a-plugin.html#the-reader-template-dictionary","title":"The reader template dictionary","text":"<p>The read function takes a <code>Template</code> dictionary, which is used to map from the measurement (meta)data to the concepts defined in the NeXus application definition. The template contains keys that match the concepts in the provided NXDL file.</p> <p>The returned template dictionary should contain keys that exist in the template as defined below. The values of these keys have to be data objects to populate the output NeXus file. They can be lists, numpy arrays, numpy bytes, numpy floats, numpy integers, ... . Practically you can pass any value that can be handled by the <code>h5py</code> package.</p> <p>Example for a template entry:</p> <pre><code>{\n  \"/entry/instrument/source/type\": \"None\"\n}\n</code></pre> <p>For a given NXDL schema, you can generate an empty template with the command</p> <pre><code>user@box:~$ dataconverter generate-template --nxdl NXmynxdl\n</code></pre>"},{"location":"how-tos/pynxtools/build-a-plugin.html#naming-of-groups","title":"Naming of groups","text":"<p>In case the NXDL does not define a <code>name</code> for the group the requested data belongs to, the template dictionary will list it as <code>/NAME_IN_NXDL[name_in_output_nexus]</code>. You can choose any name you prefer instead of the suggested <code>name_in_output_nexus</code> (see here for the naming conventions). This allows the reader function to repeat groups defined in the NXDL to be outputted to the NeXus file.</p> <pre><code>{\n  \"/ENTRY[my_entry]/INSTRUMENT[my_instrument]/SOURCE[my_source]/type\": \"None\"\n}\n</code></pre>"},{"location":"how-tos/pynxtools/build-a-plugin.html#attributes","title":"Attributes","text":"<p>For attributes defined in the NXDL, the reader template dictionary will have the associated key with a \"@\" prefix to the attributes name at the end of the path:</p> <pre><code>{\n  \"/entry/instrument/source/@attribute\": \"None\"\n}\n</code></pre>"},{"location":"how-tos/pynxtools/build-a-plugin.html#units","title":"Units","text":"<p>If there is a field defined in the NXDL, the converter expects a filled in <code>/data/@units</code> entry in the template dictionary corresponding to the right <code>/data</code> field unless it is specified as <code>NX_UNITLESS</code> in the NXDL. Otherwise, a warning will be shown.</p> <pre><code>{\n  \"/ENTRY[my_entry]/INSTRUMENT[my_instrument]/SOURCE[my_source]/data\": \"None\",\n  \"/ENTRY[my_entry]/INSTRUMENT[my_instrument]/SOURCE[my_source]/data/@units\": \"Should be set to a string value\"\n}\n</code></pre>"},{"location":"how-tos/pynxtools/build-a-plugin.html#links","title":"Links","text":"<p>You can also define links by setting the value to sub dictionary object with key <code>link</code>:</p> <pre><code>template[\"/entry/instrument/source\"] = {\"link\": \"/path/to/source/data\"}\n</code></pre>"},{"location":"how-tos/pynxtools/build-a-plugin.html#building-off-of-the-basereader","title":"Building off of the BaseReader","text":"<p>When building off the <code>BaseReader</code>, the developer has the most flexibility. Any new reader must implement the <code>read</code> function, which must return a filled template object.</p>"},{"location":"how-tos/pynxtools/build-a-plugin.html#building-off-of-the-multiformatreader","title":"Building off of the MultiFormatReader","text":"<p>While building on the <code>BaseReader</code> allows for the most flexibility, in most cases it is desirable to implement a reader that can read in multiple file formats and then populate the template based on the read data. For this purpose, <code>pynxtools</code> has the <code>MultiFormatReader</code>, which can be readily extended for your own data.</p> <p>You can find an extensive how-to guide to build off the <code>MultiFormatReader</code> here.</p>"},{"location":"how-tos/pynxtools/build-a-plugin.html#calling-the-reader-from-the-command-line","title":"Calling the reader from the command line","text":"<p>The dataconverter can be executed using:</p> <pre><code>dataconverter --reader mydatareader --nxdl NXmynxdl --output path_to_output.nxs\n</code></pre> <p>Here, the <code>--reader</code> flag must match the reader name defined in <code>[project.entry-points.\"pynxtools.reader\"]</code> in the pyproject.toml file. The NXDL name passed to <code>--nxdl</code>must be a valid NeXus NXDL/XML file in <code>pynxtools.definitions</code>.</p> <p>Aside from this default structure, there are many more flags that can be passed to the dataconverter call. Here is its API:</p>"},{"location":"how-tos/pynxtools/build-a-plugin.html#dataconverter","title":"dataconverter","text":"<p>This command allows you to use the converter functionality of the dataconverter.</p> <p>Usage:</p> <pre><code>dataconverter [OPTIONS] [FILES]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--input-file</code> text Deprecated: Please use the positional file arguments instead. The path to the input data file to read. Repeat for more than one file. default=[] This option is required if no '--params-file' is supplied. <code>[]</code> <code>--reader</code> choice (<code>example</code> | <code>json_map</code> | <code>json_yml</code> | <code>multi</code>) The reader to use. Examples are json_map or readers from a pynxtools plugin. default='json_map' This option is required if no '--params-file' is supplied. <code>json_map</code> <code>--nxdl</code> text The name of the NeXus application definition file to use without the extension nxdl.xml. This option is required if no '--params-file' is supplied. None <code>--output</code> text The path to the output NeXus file to be generated. default='output.nxs' <code>output.nxs</code> <code>--params-file</code> filename Allows to pass a .yaml file with all the parameters the converter supports. None <code>--ignore-undocumented</code> boolean Ignore all undocumented concepts during validation. <code>False</code> <code>--fail</code> boolean Fail conversion and don't create an output file if the validation fails. <code>False</code> <code>--skip-verify</code> boolean Skips the verification routine during conversion. <code>False</code> <code>--mapping</code> text Takes a .mapping.json file and converts data from given input files. <code>Sentinel.UNSET</code> <code>-c</code>, <code>--config</code> file A json config file for the reader None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html","title":"Using Python to create NeXus files","text":"<p>In general, we recommend using <code>pynxtools</code> to create NeXus files, which has the inherent advantage that the resulting NeXus file gets automatically validated against the NeXus application definition during conversion.</p> <p>However, in some cases, it might be simpler to create the NeXus NeXus file (.nxs) directly using Python. For static data structures (i.e., always the same type of standard measurement) or one-time examples (small data publications), this may provide a feasible solution. For large scaled automated file processing, storage, and validation, we strongly recommend using <code>pynxtools</code> and its measurement method specific plugins.</p> <p>This How-To is intended as easy access to FAIR data structures via NeXus. It will demonstrate how NeXus file can be created in Python using <code>h5py</code>.</p> <p>You can find all of the data on Zenodo:</p> <p>Download from Zenodo</p> <p>Specifically, the Python script for creating a NeXus file can be downloaded here:</p> <p>Download h5py_nexus_file_creation.py</p> <p>We will discuss its content below and guide you through step-by-step in creating your NeXus file by hand.</p>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#create-a-nexus-file-through-python-and-h5py","title":"Create a NeXus file through Python and h5py","text":"<p>You start by installing <code>h5py</code> via <code>pip</code>:</p> <pre><code>pip install h5py\n</code></pre> <p>Next, we create the Python file and fill it with a minimal structure.</p> <pre><code># Import h5py, to write an hdf5 file\nimport h5py\n\n# create a h5py file in writing mode with given name \"NXopt_minimal_example\", file extension \"nxs\"\nf = h5py.File(\"NXopt_minimal_example.nxs\", \"w\")\n\n# there are only 3 fundamental objects: &gt;group&lt;, &gt;attribute&lt; and &gt;field&lt;.\n\n\n# create a &gt;group&lt; called \"entry\"\nf.create_group('/entry')\n\n# assign the &gt;group&lt; called \"entry\" an &gt;attribute&lt;\n# The attribute is \"NX_class\"(a NeXus class) with the value of this class is \"NXentry\"\nf['/entry'].attrs['NX_class'] = 'NXentry'\n\n# create &gt;field&lt; called \"definition\" inside the entry, and assign it the value \"NXoptical_spectroscopy\"\n# This field is important, as it is used in validation process to identify the NeXus definition.\nf['/entry/definition'] = 'NXoptical_spectroscopy'\n</code></pre> <p>This structure is the starting point for our NeXus file. We will go through these functions in the following.</p>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#add-nexus-concepts","title":"Add NeXus concepts","text":"<p>We will create a file according to the NeXus application definition <code>NXoptical_spectroscopy</code>, which provides a generic description for experiments in optical spectroscopy.</p> <p>On the linked documentation NeXus definitions documentation page, you see a tree-like structure of <code>NXoptical_spectroscopy</code> with several tree nodes: Status, Description, Symbols, Groups_cited, Structure. For now, only the part in Structure is of interest. This contains the information which has to be written in the Python code to add fields/groups/attributes to the NeXus file.</p> <p>Use your browser search (CTRL+F) and search for \"required\" to highlight all NeXus concepts which are required. You have to add those to the Python script to extend your created .nxs file. (Which fields/groups/attributes are \"required\" was defined by the respective scientific community, to ensure that the data serves the FAIR principles.)</p> <p>In the following, it will be shown how to add three types of fundamental NeXus objects through the Python script:</p> <ol> <li> <p>Attribute</p> </li> <li> <p>Field</p> </li> <li> <p>Group</p> </li> </ol>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#adding-an-attribute","title":"Adding an attribute","text":"<p>In the tree structure, the first concept which is not created yet, is the <code>@version</code> attribute:</p> <p>@version: (required) NX_CHAR \u2906</p> <ol> <li> <p>It is located in the tree at <code>ENTRY/definition/</code></p> </li> <li> <p>The \"@\" indicates that this is an attribute of the concept \"definition\".</p> </li> <li> <p>The name of the attribute is \"version\".</p> </li> <li> <p>Since it is \"required\", that means this attribute has to be added so that the resulting NeXus file is compliant with the NeXus definition <code>NXoptical\\_spectroscopy</code>.</p> </li> <li> <p><code>NX\\_CHAR</code> indicates the datatype. This should be a string: \"The preferred string representation is UTF-8\" (more information see here)</p> </li> </ol> <p></p> <p>We add an instance of this concept by adding an HDF5 attribute:</p> <pre><code>f['/entry/definition'].attrs['version'] = 'v2024.02'\n</code></pre> <p>This h5py command adds the attribute named \"version\" with the value \"v2024.02\" to the HDF5 dataset called \"/entry/definition\". The same is done for the URL attribute:</p> <pre><code>f['/entry/definition'].attrs['URL'] = 'https://github.com/FAIRmat-NFDI/nexus_definitions/blob/f75a29836431f35d68df6174e3868a0418523397/contributed_definitions/NXoptical_spectroscopy.nxdl.xml'\n</code></pre> <p>For your use case, you may want to use a different version of the NeXus definitions, since these are changed over time. In the following, it is shown where to obtain the correct version and URL.</p> <p>Get the values: version and URL</p> <p>At the time you create the NeXus file, can do the following to find the version and associated URL:</p> <ul> <li> <p>Go to the page of the respectively used NeXus concept, i.e. NXoptical_spectroscopy</p> </li> <li> <p>Scroll down until you find \"NXDL Source:\" and follow this link, i.e. NXoptical_spectroscopy.nxdl.xml</p> </li> </ul> <p>This is the GitHub website, in which the latest (FAIRmat) NeXus definition of NXoptical_spectroscopy is stored in the NeXus definition language file (.nxdl). The information is structured in the xml format.</p> <ul> <li>Now you have to copy the permalink of this file. Go to the top right side of the website. Find the Menu made by 3 dots:</li> </ul> <p></p> <p>Copy the permalink and insert it as value for the \"URL\" attribute (Step 1, Red box in the image)</p> <ul> <li>Go to \"nexus_definitions\" (Step 2, Red box in the image)</li> </ul> <p></p> <p>On the right side, you should see below \"Releases\" the \"tags\" (Red box in the image). Follow this link.</p> <ul> <li>Copy the latest tag, which should look similar to \"v2024.02\". Insert it as value for the \"version\" attribute.</li> </ul> <p>Disclaimer When specifying this version tag, it would be better to include the GitHub commit ID as well. In pynxtools, these are appended automatically. Such a version tag might look like this: <code>v2022.07.post1.dev1278+g1d7000f4</code>.</p> <p>If you have pynxtools installed, you can get the tag by:</p> <pre><code>from pynxtools import get_nexus_version\nget_nexus_version()\n&gt;&gt;&gt; 'v2022.07.post1.dev1284+gf75a2983'\n</code></pre>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#adding-a-field","title":"Adding a field","text":"<p>The next required concept of NXoptical_spectroscopy is \"experiment_type\".</p> <p>experiment_type: (required) NX_CHAR</p> <ol> <li> <p>It is located in the tree at position <code>ENTRY/</code></p> </li> <li> <p>There is no \"@\" in front of \"experiment_type\". So, this may be a group or a field.</p> </li> <li> <p>The name of this group/field is \"experiment_type\".</p> </li> <li> <p>The \"required\" indicates that this group/field has to be added to be in line with the NeXus definition \"NXoptical_spectroscopy\".</p> </li> <li> <p><code>NX\\_CHAR</code> indicates the datatype. This should NXoptical_spectrs be a string (see above).</p> </li> <li> <p>The presence of the datatype <code>NX\\_CHAR</code> indicates that this is a field. It is NOT a group.</p> </li> </ol> <p>Read the documentation at \"\u25b6 Specify the type of the optical experiment. ...\" by extending it via click on the triangle symbol. You should see something like this:</p> <p></p> <p>There, the value of the field has to be one of the shown list, since it is an enumeration (e.g. \"transmission spectroscopy\"). Note that this is requires an exact match to one of the enumerated items (case and whitespace sensitive).</p> <p>Therefore, the Python script has to be extended by:</p> <pre><code>f['/entry/experiment_type'] = 'transmission spectroscopy'\n</code></pre>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#adding-a-group","title":"Adding a group","text":"<p>The first required group in NXoptical_spectroscopy on the <code>ENTRY/</code> level is \"INSTRUMENT: (required) NXinstrument \u2906\"</p> <ol> <li> <p>It is located in the tree at position: NXentry/</p> </li> <li> <p>There is no \"@\" in front of \"INSTRUMENT\" and because the <code>NXinstrument</code> is a NeXus group, this has to be implemented as an HDF5 group in the Python script.</p> </li> <li> <p>The \"required\" indicates that this group has to be added to be in line with the NeXus definition \"NXoptical_spectroscopy\".</p> </li> <li> <p>As this is a group, other groups, fields, or attributes may be assigned to it.</p> </li> <li> <p>The uppercase notation of \"INSTRUMENT\" means:</p> <ol> <li> <p>You can give INSTRUMENT almost any name, such as \"abc\" or \"Raman_setup\" (see \"regex\" or regular expression).</p> </li> <li> <p>You can create as many groups with the class <code>NXinstrument</code> as you want. Their names have to be different.</p> </li> <li> <p>For more information, see the NeXus rules</p> </li> </ol> </li> </ol> <p>The Python code to implement the <code>NXinstrument</code> group as an HDF5 group named with the name \"experiment_setup_1\"  is:</p> <pre><code>f.create_group('/entry/experiment_setup_1')\nf['/entry/experiment_setup_1'].attrs['NX_class'] = 'NXinstrument'\n</code></pre> <p>The first line creates the group with the name \"experiment_setup_1\".</p> <p>The second line assigns this group the attribute with the name \"NX_class\" and its value \"NXinstrument\".</p>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#finishing-the-nexus-file","title":"Finishing the NeXus file","text":"<p>Afterwards, we repeat the process for all required NeXus groups/fields/attributes defined in NXoptical_spectroscopy.</p> <p>The next required entries are located inside the NXinstrument class:</p> <ol> <li> <p>beam_TYPE: (required) NXbeam \u2906</p> </li> <li> <p>detector_TYPE: (required) NXdetector \u2906</p> </li> </ol> <p>Both are groups. \"beam_TYPE\" could be named: \"beam_abc\" or \"beam_Raman_setup\". Use the knowledge above to extend the Python script to create those NeXus file entries.</p> <p>Note that you can also add instances for recommended or optional concepts to the file by using the same Python functionality as above. The difference to the required concept is that they have to be present in order for the file to comply with the application definitions, whereas recommended/optional files can, but don't need to be present.</p>"},{"location":"how-tos/pynxtools/create-nexus-files-by-python.html#whats-next","title":"What's next?","text":"<ul> <li>Once you have a finished NeXus file, you may continue by validating the NeXus file.</li> <li>If you find yourself in the situation that you need to run such Python code routinely to convert your data, we strongly recommend creating your own reader or plugin in the <code>pynxtools</code> ecosystem. You can find a how-to guide to get you started here.</li> </ul>"},{"location":"how-tos/pynxtools/run-tests-in-parallel.html","title":"Running <code>pynxtools</code> tests in parallel","text":"<p>The <code>pytest</code> framework allows tests to run in sequential and parallel using third-party plugins such as <code>pytest-xdist</code>. In our <code>pytest</code> setup for <code>pynxtools</code>, we use <code>pytest-xdist</code> to execute tests in parallel. To handle shared resources among multiple tests, tests are grouped using the <code>@pytest.mark.xdist_group</code> fixture. This prevents classic race conditions by ensuring that tests sharing the same resources are executed sequentially.</p>"},{"location":"how-tos/pynxtools/run-tests-in-parallel.html#running-tests-sequentially","title":"Running Tests Sequentially","text":"<p>In a local setup, tests can be run sequentially using the following command:</p> <pre><code>pytest tests\n</code></pre> <p>This will execute all tests in a sequential manner. For more details, refer to the official documentation:</p> <ul> <li>How to invoke pytest</li> </ul>"},{"location":"how-tos/pynxtools/run-tests-in-parallel.html#running-tests-in-parallel","title":"Running Tests in Parallel","text":"<p>The <code>pytest-xdist</code> plugin can be used to speed up test execution by distributing tests among available workers. To prevent race conditions, tests that share the same resources are grouped using the <code>@pytest.mark.xdist_group(name=\"group_name\")</code> fixture. These grouped tests must be run with the <code>--dist loadgroup</code> flag. For example:</p> <pre><code>pytest tests -n auto --dist loadgroup\n</code></pre> <p>Here:</p> <ul> <li>The <code>-n auto</code> flag tells <code>pytest</code> to automatically distribute tests among all available workers.</li> <li>The <code>--dist loadgroup</code> flag ensures that tests marked with the same @pytest.mark.xdist_group(name=\"...\") are executed serially.</li> </ul> <p>This setup allows for efficient parallel test execution while maintaining the integrity of tests that depend on shared resources.</p>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html","title":"How to use the built-in MultiFormatReader","text":"<p>While building on the <code>BaseReader</code> allows for the most flexibility, in most cases it is desirable to implement a reader that can read in multiple file formats and then populate the template based on the read data. For this purpose, <code>pynxtools</code> has the <code>MultiFormatReader</code>, which can be readily extended for your own data. In this how-to guide, we will focus on an implementation using a concrete example. If you are also interested in the general structure of the <code>MultiFormatReader</code>, you can find more information here.</p>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#getting-started","title":"Getting started","text":"<p>You can find all of the data and the developed Python scripts here:</p> <p>Download</p> <p>Here, we will implement a reader called <code>MyDataReader</code> that builds on the <code>MultiFormatReader</code>. <code>MyDataReader</code> is an example for a reader that can read HDF5 data from a specific technology-partner data set, as well as additional metadata from am electronic lab notebook (in YAML format).</p> <p>For demonstration purposes, we will work with a very simple mock application definition:</p> NXsimple.nxdl.xml<pre><code>&lt;definition xmlns=\"http://definition.nexusformat.org/nxdl/3.1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" category=\"application\" type=\"group\" name=\"NXsimple\" extends=\"NXobject\" xsi:schemaLocation=\"http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd\"&gt;\n    &lt;doc&gt;\n         Mock application definition.\n    &lt;/doc&gt;\n    &lt;group type=\"NXentry\"&gt;\n        &lt;field name=\"definition\"&gt;\n            &lt;attribute name=\"version\"/&gt;\n            &lt;enumeration&gt;\n                &lt;item value=\"NXsimple\"/&gt;\n            &lt;/enumeration&gt;\n        &lt;/field&gt;\n        &lt;field name=\"title\"/&gt;\n        &lt;group type=\"NXuser\" recommended=\"true\"&gt;\n            &lt;field name=\"name\"&gt;\n                &lt;doc&gt;\n                     Name of the user.\n                &lt;/doc&gt;\n            &lt;/field&gt;\n            &lt;field name=\"address\" recommended=\"true\"&gt;\n                &lt;doc&gt;\n                     Name of the affiliation of the user.\n                &lt;/doc&gt;\n            &lt;/field&gt;\n        &lt;/group&gt;\n        &lt;group type=\"NXinstrument\"&gt;\n            &lt;doc&gt;\n                 Description of the instrument and its individual parts.\n            &lt;/doc&gt;\n            &lt;attribute name=\"version\"&gt;\n                &lt;doc&gt;\n                     Version of the instrument.\n                &lt;/doc&gt;\n            &lt;/attribute&gt;\n            &lt;group type=\"NXdetector\" optional=\"true\"&gt;\n                &lt;field name=\"count_time\" type=\"NX_NUMBER\" units=\"NX_TIME\" recommended=\"true\"&gt;\n                    &lt;doc&gt;\n                         Elapsed actual counting time\n                    &lt;/doc&gt;\n                &lt;/field&gt;\n            &lt;/group&gt;\n        &lt;/group&gt;\n        &lt;group name=\"sample\" type=\"NXsample\"&gt;\n            &lt;field name=\"name\"/&gt;\n            &lt;field name=\"physical_form\" recommended=\"true\"/&gt;\n            &lt;field name=\"temperature\" type=\"NX_FLOAT\" recommended=\"true\" units=\"NX_TEMPERATURE\"/&gt;\n        &lt;/group&gt;\n        &lt;group name=\"data\" type=\"NXdata\"&gt;\n            &lt;doc&gt;\n                 The default NXdata group containing a view on the measured data.\n            &lt;/doc&gt;\n        &lt;/group&gt;\n    &lt;/group&gt;\n&lt;/definition&gt;\n</code></pre> <p>The application definitions requires a user, some sample information, some instrument metadata, and the measured data to be written. Some groups, fields, and attributes are strictly required (the default), others are just recommended or optional.</p> <p>Note that in order to be recognized as a valid application definition, this file should be copied to the <code>applications</code> folder within the <code>definitions</code> submodule at <code>pynxtools.definitions</code>.</p> <p>We first start by implementing the class and its <code>__init__</code> call:</p> reader.py<pre><code>\"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\nfrom typing import Any\n\nfrom pynxtools.dataconverter.readers.base.reader import ParseJsonCallbacks, MultiFormatReader\n\nclass MyDataReader(MultiFormatReader):\n    \"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\n\n    supported_nxdls = [\n        \"NXsimple\"\n    ]\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n        self.extensions = {\n            \".yml\": self.handle_eln_file,\n            \".yaml\": self.handle_eln_file,\n            \".json\": self.set_config_file,\n            \".hdf5\": self.handle_eln_file,\n            \".h5\": self.handle_eln_file,\n        }\n\nREADER = MyDataReader\n</code></pre> <p>Note that here we are adding handlers for three types of data file extensions:</p> <ol> <li><code>\".hdf5\"</code>, <code>\".h5\"</code>: This will be used to parse in the (meta)data from the instrument's HDF5 file.</li> <li><code>\".yml\"</code>, <code>\".yaml\"</code>: This will be used to parse in the (meta)data from the ELN file.</li> <li><code>\".json\"</code>: This will be used to read in the config file, which is used to map from the (meta)data concepts from the instrument and ELN data to the concepts in the NXDL file.</li> </ol>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#reading-in-the-instruments-data-and-metadata","title":"Reading in the instrument's data and metadata","text":"<p>First, we will have a look at the HDF5 file. This mock HDF5 file was generated with <code>h5py</code> using a simple script:</p> <p>Download create_mock_data.py</p> <p></p> <p>Here, we see that we have a <code>data</code> group with x and y values, as well as some additional metadata for the instrument.</p> <p>Here is one way to implement the method to read in the data:</p> reader.py<pre><code>import h5py\n\ndef handle_hdf5_file(filepath):\n    def recursively_read_group(group, path=\"\"):\n        result = {}\n        for key, item in group.items():\n            new_path = f\"{path}/{key}\" if path else key\n            if isinstance(item, h5py.Group):\n                # Recursively read subgroups\n                result.update(recursively_read_group(item, new_path))\n            elif isinstance(item, h5py.Dataset):\n                # Read datasets\n                result[new_path] = item[()]\n        return result\n\n    # Open the HDF5 file and read its contents\n    with h5py.File(filepath, \"r\") as hdf:\n        self.hdf5_data = recursively_read_group(hdf)\n\n    return {}\n</code></pre> <p>Note that here we are returning an empty dictionary because we don't want to fill the template just yet, but only read in the HDF5 data for now. We will use the config file later to fill the template with the read-in data. Note that it is also possible to return a dictionary here to update the template directly.</p> <p><code>self.hdf5_data</code> will look like this:</p> <pre><code>{\n    \"data/x_values\": array([-10.        ,  -9.7979798 ,  -9.5959596 , ...,  10.        ]),\n    \"data/y_values\": array([3.72665317e-06, 6.14389891e-06, 1.00262383e-05, ..., 3.72665317e-06]),\n    \"data/x_units\": \"eV\",\n    \"data/y_units\": \"counts_per_second\",\n    \"metadata/instrument/version\": 1.0,\n    \"metadata/instrument/detector/name\": \"my_gaussian_detector\",\n    \"metadata/instrument/detector/count_time\": 1.2,\n    \"metadata/instrument/detector/count_time_units\": s\",\n}\n</code></pre>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#reading-in-eln-data","title":"Reading in ELN data","text":"<p>As we can see in the application definition <code>NXsimple</code> above, there are some concepts defined for which there is no equivalent metadata in the HDF5 file. We are therefore using a YAML ELN file to add additional metadata. The ELN file <code>eln_data.yaml</code> looks like this:</p> eln_data.yaml<pre><code>title: My experiment\nuser:\n  name: John Doe\n  address: 123 Science Rd, Data City, DC\nsample:\n  name: my_sample\n  physical_form: powder\n  temperature:\n    value: 300\n    unit: K\n</code></pre> <p>It contains metadata about the user and the sample that was measured.</p> <p>We now need to write a function to read in this ELN data. Luckily, there exists already a solution within <code>pynxtools</code>, using the <code>parse_yaml</code> function:</p> reader.py<pre><code>from pynxtools.dataconverter.readers.utils import parse_yml\n\nCONVERT_DICT = {\n    \"unit\": \"@units\",\n    \"version\": \"@version\",\n    \"user\": \"USER[user]\",\n    \"instrument\": \"INSTRUMENT[instrument]\",\n    \"detector\": \"DETECTOR[detector]\",\n    \"sample\": \"SAMPLE[sample]\",\n}\n\ndef handle_eln_file(self, file_path: str) -&gt; dict[str, Any]:\n    self.eln_data = parse_yml(\n        file_path,\n        convert_dict=CONVERT_DICT,\n        parent_key=\"/ENTRY[entry]\",\n    )\n\n    return {}\n</code></pre> <p>When this method is called, <code>self.eln_data</code> will look like this:</p> <pre><code>{\n    \"/ENTRY[entry]/title\": \"My experiment\",\n    \"/ENTRY[entry]/USER[user]/name\": \"John Doe\",\n    \"/ENTRY[entry]/USER[user]/address\": \"123 Science Rd, Data City, DC\",\n    \"/ENTRY[entry]/SAMPLE[sample]/name\": \"my_sample\",\n    \"/ENTRY[entry]/SAMPLE[sample]/physical_form\": \"powder\",\n    \"/ENTRY[entry]/SAMPLE[sample]/temperature\": 300,\n    \"/ENTRY[entry]/SAMPLE[sample]/temperature/@units\": \"K\"\n}\n</code></pre> <p>Note that here we are using <code>parent_key=\"/ENTRY[entry]\"</code> as well as a <code>CONVERT_DICT</code>, meaning that each key in <code>self.eln_data</code> will start with <code>\"/ENTRY[entry]\"</code> and some of the paths will be converted to match the template notation. This will be important later.</p>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#parsing-the-config-file","title":"Parsing the config file","text":"<p>Next up, we can make use of the config file, which is a JSON file that tells the reader how to map the concepts from the HDF5 and ELN files in order to populate the template designed to match <code>NXsimple</code>. The choices made in the config file define how semantics from the source (data file) and target (NeXus application definition) side are mapped. Essentially, the config file should contain all keys that are present in the NXDL. In our case, the config file looks like this:</p> config_file.json<pre><code>{\n  \"/ENTRY/title\": \"@eln\", \n  \"/ENTRY/USER[user]\": {\n    \"name\":\"@eln\",\n    \"address\":\"@eln:/ENTRY/USER[user]/address\",\n  }, \n  \"/ENTRY/INSTRUMENT[instrument]\": {\n    \"@version\":\"@attrs:metadata/instrument/version\",\n    \"DETECTOR[detector]\":{\n      \"count_time\":\"@attrs:metadata/instrument/detector/count_time\",\n      \"count_time/@units\":\"@attrs:metadata/instrument/detector/count_time_units\"\n    }\n  },\n  \"/ENTRY/SAMPLE[sample]\": {\n    \"name\":\"@eln\",\n    \"physical_form\":\"@eln\",\n    \"temperature\":\"@eln\",\n    \"temperature/@units\":\"@eln\"\n  },\n  \"/ENTRY/data\": {\n    \"@axes\":[\"x_values\"],\n    \"@signal\": \"data\",\n    \"data\": \"@data:y_values\",\n    \"data/@units\": \"@attrs:data/y_units\",   \n    \"x_values/@units\": \"@attrs:data/x_units\",\n    \"x_values/@units\": \"@data:x_values\"\n  }\n}\n</code></pre> <p>Note that here we are using <code>@</code>-prefixes which are used to fill the template from the different data sources. We discuss this below in more detail.</p> <p>We also implement a method for setting the config file in the reader:</p> reader.py<pre><code>def set_config_file(self, file_path: str) -&gt; dict[str, Any]:\n    if self.config_file is not None:\n        logger.info(\n            f\"Config file already set. Replaced by the new file {file_path}.\"\n        )\n    self.config_file = file_path\n\n    return {}\n</code></pre>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#filling-the-template-from-the-read-in-data","title":"Filling the template from the read-in data","text":"<p>Finally, after reading in all of the data and metadata as well as designing the config file, we can start filling the template. For this, we must implement functions that are called using the reader's callbacks.</p> <p>We will start with the <code>@attrs</code> prefix, associated with the <code>attrs_callback</code>. We must implement the <code>get_attr</code> method:</p> reader.py<pre><code>def get_attr(self, key: str, path: str) -&gt; Any:\n    \"\"\"\n    Get the metadata that was stored in the main file.\n    \"\"\"\n    if self.hdf5_data is None:\n        return None\n\n    return self.hdf5_data.get(path)\n</code></pre> <p>This method (and all similar callbacks methods) have two inputs:</p> <ol> <li><code>key</code>, which is a key in the config file. Note that here, the generic <code>\"/ENTRY/\"</code> gets replaced by <code>f\"/ENTRY[{entry_name}]/\"</code>, where <code>entry_name</code> is the one of the entries of the <code>self.get_entry_names</code> method.</li> <li><code>path</code>, which is the part of the config value that comes after the <code>@attrs:</code> prefix. For example, for the config value <code>\"@attrs:my-metadata\"</code>, the extracted path is <code>my-metadata</code>.</li> </ol> <p>For the <code>get_attr</code> method, we are making use of the <code>path</code>. For example, for the config value <code>\"@attrs:metadata/instrument/version\"</code>, the extracted path is <code>metadata/instrument/version</code>, which is also one of the keys of the <code>self.hdf5_data</code> dictionary.</p> <p>For the ELN data, we must implement the <code>get_eln_data</code> function that gets called from the <code>eln_callback</code> when using the <code>@eln</code> prefix:</p> reader.py<pre><code>def get_eln_data(self, key: str, path: str) -&gt; Any:\n        \"\"\"Returns data from the given eln path.\"\"\"\n        if self.eln_data is None:\n            return None\n\n        return self.eln_data.get(key)\n</code></pre> <p>Here, we are making use of the fact that we have used <code>CONVERT_DICT</code> in the <code>parse_yml</code> function above. Thus, the keys of the <code>self.eln_data</code> dictionary are exactly the same as those in the config file (for example, the config key <code>\"/ENTRY[entry]/USER[user]/address\"</code> also exists in <code>self.eln_data</code>). Therefore, we can just get this data using the <code>key</code> coming from the config file.</p> <p>Finally, we also need to address the <code>@data</code> prefix, which gets used in the <code>data_callback</code> to populate the NXdata group in the template. Note that here we use the same <code>@data</code> prefix to fill the <code>x_values</code> as well as the <code>data</code> (from <code>y_values</code>) fields. We achieve this by using the path that follows <code>@data:</code> in the config file:</p> reader.py<pre><code>def get_data(self, key: str, path: str) -&gt; Any:\n    \"\"\"Returns measurement data from the given hdf5 path.\"\"\"\n    if path.endswith((\"x_values\", \"y_values\")):\n        return self.hdf5_data.get(f\"data/{path}\")\n    else:\n        logger.warning(f\"No axis name corresponding to the path {path}.\")\n</code></pre>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#bringing-it-all-together","title":"Bringing it all together","text":"<p>Et voil\u00e0! That's all we need to read in our data and populate the <code>NXsimple</code> template. Our final reader looks like this:</p> reader.py<pre><code>import logging\nfrom typing import Any\nimport h5py\n\nfrom pynxtools.dataconverter.readers.multi.reader import MultiFormatReader\nfrom pynxtools.dataconverter.readers.utils import parse_yml\n\nlogger = logging.getLogger(\"pynxtools\")\n\nCONVERT_DICT = {\n    \"unit\": \"@units\",\n    \"version\": \"@version\",\n    \"user\": \"USER[user]\",\n    \"instrument\": \"INSTRUMENT[instrument]\",\n    \"detector\": \"DETECTOR[detector]\",\n    \"sample\": \"SAMPLE[sample]\",\n}\n\n\nclass MyDataReader(MultiFormatReader):\n    \"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\n\n    supported_nxdls = [\n        \"NXsimple\"\n    ]\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n        self.extensions = {\n            \".yml\": self.handle_eln_file,\n            \".yaml\": self.handle_eln_file,\n           \".json\": self.set_config_file,\n            \".hdf5\": self.handle_hdf5_file,\n            \".h5\": self.handle_hdf5_file,\n        }\n\n    def set_config_file(self, file_path: str) -&gt; dict[str, Any]:\n        if self.config_file is not None:\n            logger.info(\n                f\"Config file already set. Replaced by the new file {file_path}.\"\n            )\n        self.config_file = file_path\n        return {}\n\n    def handle_hdf5_file(self, filepath) -&gt; dict[str, Any]:\n        def recursively_read_group(group, path=\"\"):\n            result = {}\n            for key, item in group.items():\n                new_path = f\"{path}/{key}\" if path else key\n                if isinstance(item, h5py.Group):\n                    # Recursively read subgroups\n                    result.update(recursively_read_group(item, new_path))\n                elif isinstance(item, h5py.Dataset):\n                    # Read datasets\n                    result[new_path] = item[()]\n            return result\n\n        # Open the HDF5 file and read its contents\n        with h5py.File(filepath, \"r\") as hdf:\n            self.hdf5_data = recursively_read_group(hdf)\n\n        return {}\n\n    def handle_eln_file(self, file_path: str) -&gt; dict[str, Any]:\n        self.eln_data = parse_yml(\n            file_path,\n            convert_dict=CONVERT_DICT,\n            parent_key=\"/ENTRY[entry]\",\n        )\n\n        return {}\n\n    def get_attr(self, key: str, path: str) -&gt; Any:\n        \"\"\"\n        Get the metadata that was stored in the main file.\n        \"\"\"\n        if self.hdf5_data is None:\n            return None\n\n        return self.hdf5_data.get(path)\n\n    def get_eln_data(self, key: str, path: str) -&gt; Any:\n        \"\"\"Returns data from the given eln path.\"\"\"\n        if self.eln_data is None:\n            return None\n\n        return self.eln_data.get(key)\n\n    def get_data(self, key: str, path: str) -&gt; Any:\n        \"\"\"Returns measurement data from the given hdf5 path.\"\"\"\n        if path.endswith((\"x_values\", \"y_values\")):\n            return self.hdf5_data.get(f\"data/{path}\")\n        else:\n            logger.warning(f\"No axis name corresponding to the path {path}.\")  \n\nREADER = MyDataReader\n</code></pre>"},{"location":"how-tos/pynxtools/use-multi-format-reader.html#using-the-reader","title":"Using the reader","text":"<p>We can call our reader using the following command</p> <pre><code>dataconverter mock_data.h5 eln_data.yaml -c config_file --reader mydatareader --nxdl NXsimple  --output output.nxs\n</code></pre> <p>The final <code>output.nxs</code> file gets automatically validated against <code>NXsimple</code>, so we can be sure that it is compliant with that application definition. Here is a look at our final NeXus file:</p> <p></p>"},{"location":"how-tos/pynxtools/using-pynxtools-test-framework.html","title":"Test functionality for <code>pynxtools</code> plugins","text":"<p><code>pynxtools</code> contains a sub-module called <code>testing</code> which should be utilized to write automated tests for <code>pynxtools</code> reader plugins. This enables comprehensive tests of the plugin's functionality without needing detailed knowledge of the internal architecture of <code>pynxtools</code>, the technical details of the raw data files, or the plugin\u2019s internal design.</p> <p>Note</p> <p>It is assumed that the plugin has the same structure internally as the existing <code>pynxtools</code> plugins.</p>"},{"location":"how-tos/pynxtools/using-pynxtools-test-framework.html#why-we-need-a-test-framework","title":"Why we need a test framework","text":"<p>To test integration of a plugin with the <code>pynxtools</code> core system, we need to:</p> <ol> <li>Test the plugin's integration with <code>pynxtools</code> from the plugin's CI/CD.</li> <li>Test in the <code>pynxtools</code> CI/CD if the plugin can be integrated with <code>pynxtools</code> properly.</li> </ol>"},{"location":"how-tos/pynxtools/using-pynxtools-test-framework.html#how-to-write-an-integration-test-for-a-reader-plugin-with-pynxtoolstesting","title":"How to write an integration test for a reader plugin with <code>pynxtools.testing</code>","text":"<p>It is very simple to write a test to verify the plugin integration with <code>pynxtools</code> within the plugin's tests directory. The developer can place the test where they want, but they need to use the provided test interface from <code>pynxtools.testing</code>. An example test for a demo plugin <code>pynxtools-FOO</code> (which contains a reader called <code>foo</code> for an application definition <code>NXfoo</code>) is given below:</p> test_plugin.py<pre><code>import os\n\nimport pytest\nfrom pynxtools.testing.nexus_conversion import ReaderTest\n\n# e.g. module_dir = /pynxtools-foo/tests\nmodule_dir = os.path.dirname(os.path.abspath(__file__))\n\n\n@pytest.mark.parametrize(\n    \"nxdl,reader_name,files_or_dir\",\n    [\n        (\"NXfoo\", \"foo\", f\"{module_dir}/../tests/data/test_data_dir_1\"),\n        (\"NXfoo\", \"foo\", f\"{module_dir}/../tests/data/test_data_dir_2\")\n    ],\n)\ndef test_foo_reader(nxdl, reader_name, files_or_dir, tmp_path, caplog):\n    \"\"\"Test for the FooReader or foo reader plugin.\n\n    Parameters\n    ----------\n    nxdl : str\n        Name of the NXDL application definition that is to be tested by\n        this reader plugin (e.g. NXfoo), without the file ending .nxdl.xml.\n    reader_name : str\n        Name of the class of the reader (e.g. \"foo\")\n    files_or_dir : class\n        Name of the class of the reader.\n    tmp_path : pytest.fixture\n        Pytest fixture variable, used to create temporary file and clean up the generated files\n        after test.\n    caplog : pytest.fixture\n        Pytest fixture variable, used to capture the log messages during the test.\n    \"\"\"\n    # test plugin reader\n    test = ReaderTest(nxdl, reader_name, files_or_dir, tmp_path, caplog)\n    test.convert_to_nexus()\n    # test.convert_to_nexus(caplog_level=\"ERROR\", ignore_undocumented=True)\n    # Use `ignore_undocumented` to skip undocumented fields\n    # caplog_level can be \"ERROR\" or \"WARNING\"\n    test.check_reproducibility_of_nexus()\n    # Here, you can also pass `ignore_lines` (a list) or `ignore_sections` (a dict)\n    # if you want to ignore certain lines or lines within a section in the comparison\n    # of the log files of the reference -nxs file and the one created in the test.\n</code></pre> <p>The <code>ReaderTest.convert_to_nexus</code> method tries to convert all files in the <code>files_or_dir</code> directory to a NeXus file that is compliant with the application definition (<code>nxdl</code>), using a specific pynxtools reader (<code>reader_name</code>). In this example, the <code>foo</code> reader is used to convert to files following the <code>NXfoo</code> application definition.</p> <p>There are some possibilities to configure this test for  your specific plugin:</p> <ul> <li>You can configure the test data that is used. Typically, this data should be located in <code>tests/data</code>, but it is also possible to use other data inside or even outside the test directory of the plugin.</li> <li>You can also pass additional parameters to <code>test.convert_to_nexus</code>:</li> <li> <p><code>caplog_level</code> (str): This parameter determines the level at which the caplog is set during testing. This can be either \"ERROR\" (by default) or \"WARNING\". If it is \"WARNING\", the test will also fail if any warnings are reported by the reader.</p> </li> <li> <p><code>ignore_undocumented</code> (boolean): If true, the test skips the verification of undocumented keys. Otherwise, a warning message for undocumented keys is logged.</p> </li> </ul> <p>Afterwards, the <code>ReaderTest.convert_to_nexus</code> method uses the NeXus annotator tool <code>read_nexus</code> (which is part of <code>pynxtools</code>) to create log files both of the reference NeXus file located in <code>files_or_dir</code> as well as the freshly created NeXus files. These log files are compared line-by-line to check that the created NeXus file is indeed the same as the reference file.</p> <p>This test can also be configured:</p> <ul> <li>You can pass a keyword argument <code>ignore_lines</code> to <code>check_reproducibility_of_nexus</code>. <code>ignore_lines</code> is expected to be a list of lines for which the comparison shall be skipped. Specifically, any line that starts with any of the strings in <code>ignore_lines</code> is ignored.</li> <li> <p>In addition, you can disable the comparison for a given line for a NeXus concept in the <code>read_nexus</code> output using the <code>ignore_sections</code> keyword. As an example, a typical section for a NeXus field in the output looks like this:</p> <pre><code>DEBUG: \n===== FIELD (//entry/start_time): &lt;HDF5 dataset \"start_time\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/start_time): &lt;HDF5 dataset \"start_time\": shape (), type \"|O\"&gt;\nvalue: 2018-05-01T07:22:00+02:00 \nDEBUG: value: 2018-05-01T07:22:00+02:00 \nclasspath: ['NXentry', 'NX_DATE_TIME']\nDEBUG: classpath: ['NXentry', 'NX_DATE_TIME']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/start_time\nNXentry.nxdl.xml:/start_time\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/start_time\nNXentry.nxdl.xml:/start_time\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/start_time):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/start_time):\n</code></pre> <p>If you do want to disable the comparison for the value of <code>entry/start_time</code>, you can pass a dictionary to <code>ignore_sections</code>. In this example, the dictionary <code>{\"FIELD (//entry/start_time)\": [\"value:\"]}</code> would disable the comparison of the <code>value</code> line. Any other line in this section can be disabled by adding more strings to the list (e.g. <code>DEBUG - value:</code>), whereas additional sections can be ignored by adding to the <code>ignore_sections</code> dictionary.</p> </li> </ul>"},{"location":"how-tos/pynxtools/using-pynxtools-test-framework.html#how-to-write-an-integration-test-for-a-nomad-example-in-a-reader-plugin","title":"How to write an integration test for a NOMAD example in a reader plugin","text":"<p>It is also possible to ship NOMAD Example Uploads directly with the reader plugin. As an example, <code>pynxtools-mpes</code> comes with its own NOMAD example using the <code>ExampleUploadEntryPoint</code> of NOMAD.</p> <p>The <code>testing</code> sub-package of <code>pynxtools</code> provides two functionalities for testing the <code>ExampleUploadEntryPoint</code> defined in a <code>pynxtools</code> plugin:</p> <ol> <li>Test that the <code>ExampleUploadEntryPoint</code> instance can be properly loaded.</li> <li>Test that the schemas and files in the example folder(s) can be parsed by NOMAD.</li> </ol> <p>We will write a test for a <code>pynxtools_foo_example_entrypoint</code> defined in the pyproject.toml file of a demo <code>pynxtools-FOO</code> repository. Here the actual example data resides in the folder <code>src/pynxtools_foo/nomad/examples</code> and the plugin package is called <code>pynxtools_foo</code>:</p> pyproject.toml<pre><code>[project.entry-points.'nomad.plugin']\npynxtools_foo_example = \"pynxtools_foo.nomad.entrypoints:pynxtools_foo_example_entrypoint\"\n</code></pre> src/pynxtools_foo/nomad/nomad_example_entrypoint.py<pre><code>from nomad.config.models.plugins import ExampleUploadEntryPoint\n\npynxtools_foo_example_entrypoint = ExampleUploadEntryPoint(\n    title=\"My example upload\",\n    description=\"This is an example upload for the pynxtools-FOO package.\",\n    plugin_package=\"pynxtools_foo\",\n    resources=[\"nomad/examples/*\"],\n)\n</code></pre> <p>A test for the <code>pynxtools_foo_example_entrypoint</code> could look like this:</p> test_nomad_examples.py<pre><code>import nomad\n\nfrom pynxtools.testing.nomad_example import (\n    get_file_parameter,\n    parse_nomad_examples,\n    example_upload_entry_point_valid,\n)\n\nfrom pynxtools_foo.nomad.entrypoints import pynxtools_foo_example_entrypoint\n\nEXAMPLE_PATH = os.path.join(\n    os.path.dirname(__file__),\n    \"..\",\n    \"src\",\n    \"pynxtools_foo\",\n    \"nomad\",\n    \"examples\",\n)\n\n@pytest.mark.parametrize(\n    \"mainfile\",\n    get_file_parameter(EXAMPLE_PATH),\n)\ndef test_parse_nomad_examples(mainfile):\n    \"\"\"Test if NOMAD examples work.\"\"\"\n    archive_dict = parse_nomad_examples(mainfile)\n    # Here, you can also implement more logic if you know the contents of the `archive_dict`.\n\n\n@pytest.mark.parametrize(\n    (\"entrypoint\", \"example_path\"),\n    [\n        pytest.param(\n            pynxtools_foo_example_entrypoint,\n            EXAMPLE_PATH,\n            id=\"pynxtools_foo_example\",\n        ),\n    ],\n)\ndef test_example_upload_entry_point_valid(entrypoint, example_path):\n    \"\"\"Test if NOMAD ExampleUploadEntryPoint works.\"\"\"\n    example_upload_entry_point_valid(\n        entrypoint=entrypoint,\n        example_path=example_path,\n    )\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html","title":"Validation of NeXus files using external software","text":"<p>This is a how-to guide for using different tools to validate NeXus files. If you want to learn more about how validation is done in <code>pynxtools</code>, please visit the explanation or how-to pages.</p> This part of the documentation is talking about external tools (i.e., not tools not maintained by FAIRmat) that are subject to change. If these tools do change, you may find outdated information here. We do not take any responsibility for these software tools and for any issues arising from installation/usage. <p>In this how-to guide, we will learn how to use different software tools to validate existing NeXus files. Specifically, we want to use tools to validate NeXus files against a given set of NeXus definitions. This can be the official version of the NeXus definitions or a different version used for local development. Here, we will work with two different versions of the definitions.</p> <ol> <li> <p>Definitions standardized by the NeXus International Advisory Committee (NIAC)</p> </li> <li> <p>FAIRmat NeXus proposal</p> </li> </ol> <p>Dataset</p> <p>You can download the dataset used in this how-to guide here:</p> <p>201805_WSe2_arpes.nxs</p> <p>This is an angular-resolved photoelectron spectroscopy (ARPES) dataset that is formatted according to the <code>NXarpes</code> application definition.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#software-tools","title":"Software tools","text":"<p>Aside from the tools we develop within FAIRmat, the official NeXus website lists additional programs for the validation of NeXus files:</p> <ol> <li><code>cnxvalidate</code>: NeXus validation tool written in C</li> <li><code>punx</code>: Python Utilities for NeXus HDF5 files</li> <li><code>nexpy/nxvalidate</code>: A Python API for validating NeXus file</li> </ol> <p>In case you are interested in testing these tools, we encourage you to follow these links to understand the details of these programs.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#cnxvalidate","title":"<code>cnxvalidate</code>","text":"<p><code>cnxvalidate</code> is the validation tool that the NeXus International Advisory Committee (NIAC) has been developing and recommending to external users.</p> <ul> <li>Github Repository</li> </ul>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#installation","title":"Installation","text":"A note on operating systems <p>Note that installation on Windows can be tricky because cmake can sometimes not find the libxml2 library. Though, if you solve this, this may work on Windows. Therefore, we recommend to use Linux.</p> <p>The tool <code>cnxvalidate</code> is written in C and has to be built from source (e.g., by using <code>cmake</code>). You can find instructions in the README of the GitHub repository.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#usage","title":"Usage","text":"<p>After installation, you can invoke the help call for the executable (called <code>nxvalidate</code>) from the command line:</p> SourceResult <pre><code>nxvalidate --help\n</code></pre> <pre><code>Usage:\n    nxvvalidate -a appdef -l appdefdir -p pathtovalidate -o -b -u -d -t -r datafile\n-e Neaten output with more whitespace\n-t Produce all output possible\n-d Produce debug output tracing what nxvalidate does\n-b Warn about additional elements in the data file found in a base class\n-u Warn about undefined additional elements in the data file\n-o Warn about optional elements which are not present in the datafile\n-r Process the root group\n-x Check the depends_on chain for every dataset with the depends_on attribute\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#validation-in-cnxvalidate","title":"Validation in <code>cnxvalidate</code>","text":"<p>Now you can use <code>cnxvalidate</code> with the executable called <code>nxvalidate</code> to validate the NeXus file called <code>FILE</code> (using the set of NeXus definitions in <code>DEFINITIONS</code>):</p> <pre><code>nxvalidate -l DEFINITIONS FILE\n</code></pre> <p>You can now invoke the validation on the test file:</p> SourceResult <pre><code>./nxvalidate -l definitions 201805_WSe2_arpes.nxs\n</code></pre> <pre><code>definition=NXarpes.nxdl.xml message=\"Required units attribute missing\" nxdlPath=/NXentry/NXinstrument/NXdetector/entrance_slit_setting sev=error dataPath=/entry/instrument/analyser/entrance_slit_setting dataFile=201805_WSe2_arpes.nxs\n1 errors and 57 warnings found when validating 201805_WSe2_arpes.nxs\n</code></pre> <p>The output messages tell you now which groups/fields/attributes (message: \"Required group/field/attribute missing\") or units are missing (message: \"Required units attribute missing), and so on.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#punx-python-utilities-for-nexus-hdf5-files","title":"<code>punx</code> - Python Utilities for NeXus HDF5 files","text":"<p>Next up, we are testing <code>punx</code>, a Python package for working with NeXus HDF5 files.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#installation_1","title":"Installation","text":"<p>The package can be installed via any Python package manager:</p> uvpip <pre><code>uv pip install punx\n</code></pre> <pre><code>pip install punx\n</code></pre> <p>You then need to setup the software. This requires installing the NeXus definitions into the local cache and downloading some demonstration files:</p> SourceResult <pre><code>punx install\n</code></pre> <pre><code>!!! WARNING: this program is not ready for distribution.\n\n[INFO 2025-08-21 14:03:52.011 punx.main:253] cache_manager.download_file_set('main', '/home/user/.config/punx', force=False)\nDownloading file set: main to /home/user/.config/punx/main ...\nRequesting download from https://github.com/nexusformat/definitions/archive/main.zip\n1 Extracted: definitions-main/applications/NXapm.nxdl.xml\n2 Extracted: definitions-main/applications/NXarchive.nxdl.xml\n3 Extracted: definitions-main/applications/NXarpes.nxdl.xml\n4 Extracted: definitions-main/applications/NXcanSAS.nxdl.xml\n5 Extracted: definitions-main/applications/NXdirecttof.nxdl.xml\n6 Extracted: definitions-main/applications/NXellipsometry.nxdl.xml\n7 Extracted: definitions-main/applications/NXfluo.nxdl.xml\n8 Extracted: definitions-main/applications/NXindirecttof.nxdl.xml\n9 Extracted: definitions-main/applications/NXiqproc.nxdl.xml\n10 Extracted: definitions-main/applications/NXlauetof.nxdl.xml\n11 Extracted: definitions-main/applications/NXmonopd.nxdl.xml\n12 Extracted: definitions-main/applications/NXmpes.nxdl.xml\n13 Extracted: definitions-main/applications/NXmpes_arpes.nxdl.xml\n14 Extracted: definitions-main/applications/NXmx.nxdl.xml\n15 Extracted: definitions-main/applications/NXoptical_spectroscopy.nxdl.xml\n16 Extracted: definitions-main/applications/NXraman.nxdl.xml\n17 Extracted: definitions-main/applications/NXrefscan.nxdl.xml\n18 Extracted: definitions-main/applications/NXreftof.nxdl.xml\n19 Extracted: definitions-main/applications/NXsas.nxdl.xml\n20 Extracted: definitions-main/applications/NXsastof.nxdl.xml\n21 Extracted: definitions-main/applications/NXscan.nxdl.xml\n22 Extracted: definitions-main/applications/NXspe.nxdl.xml\n23 Extracted: definitions-main/applications/NXsqom.nxdl.xml\n24 Extracted: definitions-main/applications/NXstxm.nxdl.xml\n25 Extracted: definitions-main/applications/NXtas.nxdl.xml\n26 Extracted: definitions-main/applications/NXtofnpd.nxdl.xml\n27 Extracted: definitions-main/applications/NXtofraw.nxdl.xml\n28 Extracted: definitions-main/applications/NXtofsingle.nxdl.xml\n29 Extracted: definitions-main/applications/NXtomo.nxdl.xml\n30 Extracted: definitions-main/applications/NXtomophase.nxdl.xml\n31 Extracted: definitions-main/applications/NXtomoproc.nxdl.xml\n32 Extracted: definitions-main/applications/NXxas.nxdl.xml\n33 Extracted: definitions-main/applications/NXxasproc.nxdl.xml\n34 Extracted: definitions-main/applications/NXxbase.nxdl.xml\n35 Extracted: definitions-main/applications/NXxeuler.nxdl.xml\n36 Extracted: definitions-main/applications/NXxkappa.nxdl.xml\n37 Extracted: definitions-main/applications/NXxlaue.nxdl.xml\n38 Extracted: definitions-main/applications/NXxlaueplate.nxdl.xml\n39 Extracted: definitions-main/applications/NXxnb.nxdl.xml\n40 Extracted: definitions-main/applications/NXxps.nxdl.xml\n41 Extracted: definitions-main/applications/NXxrot.nxdl.xml\n42 Extracted: definitions-main/applications/nxdlformat.xsl\n43 Extracted: definitions-main/base_classes/NXactivity.nxdl.xml\n44 Extracted: definitions-main/base_classes/NXactuator.nxdl.xml\n45 Extracted: definitions-main/base_classes/NXaperture.nxdl.xml\n46 Extracted: definitions-main/base_classes/NXapm_charge_state_analysis.nxdl.xml\n47 Extracted: definitions-main/base_classes/NXapm_measurement.nxdl.xml\n48 Extracted: definitions-main/base_classes/NXapm_ranging.nxdl.xml\n49 Extracted: definitions-main/base_classes/NXapm_reconstruction.nxdl.xml\n50 Extracted: definitions-main/base_classes/NXapm_simulation.nxdl.xml\n51 Extracted: definitions-main/base_classes/NXatom.nxdl.xml\n52 Extracted: definitions-main/base_classes/NXattenuator.nxdl.xml\n53 Extracted: definitions-main/base_classes/NXbeam.nxdl.xml\n54 Extracted: definitions-main/base_classes/NXbeam_stop.nxdl.xml\n55 Extracted: definitions-main/base_classes/NXbeam_transfer_matrix_table.nxdl.xml\n56 Extracted: definitions-main/base_classes/NXbending_magnet.nxdl.xml\n57 Extracted: definitions-main/base_classes/NXcalibration.nxdl.xml\n58 Extracted: definitions-main/base_classes/NXcapillary.nxdl.xml\n59 Extracted: definitions-main/base_classes/NXcg_alpha_complex.nxdl.xml\n60 Extracted: definitions-main/base_classes/NXcg_cylinder.nxdl.xml\n61 Extracted: definitions-main/base_classes/NXcg_ellipsoid.nxdl.xml\n62 Extracted: definitions-main/base_classes/NXcg_face_list_data_structure.nxdl.xml\n63 Extracted: definitions-main/base_classes/NXcg_grid.nxdl.xml\n64 Extracted: definitions-main/base_classes/NXcg_half_edge_data_structure.nxdl.xml\n65 Extracted: definitions-main/base_classes/NXcg_hexahedron.nxdl.xml\n66 Extracted: definitions-main/base_classes/NXcg_parallelogram.nxdl.xml\n67 Extracted: definitions-main/base_classes/NXcg_point.nxdl.xml\n68 Extracted: definitions-main/base_classes/NXcg_polygon.nxdl.xml\n69 Extracted: definitions-main/base_classes/NXcg_polyhedron.nxdl.xml\n70 Extracted: definitions-main/base_classes/NXcg_polyline.nxdl.xml\n71 Extracted: definitions-main/base_classes/NXcg_primitive.nxdl.xml\n72 Extracted: definitions-main/base_classes/NXcg_roi.nxdl.xml\n73 Extracted: definitions-main/base_classes/NXcg_tetrahedron.nxdl.xml\n74 Extracted: definitions-main/base_classes/NXcg_triangle.nxdl.xml\n75 Extracted: definitions-main/base_classes/NXcg_unit_normal.nxdl.xml\n76 Extracted: definitions-main/base_classes/NXchemical_composition.nxdl.xml\n77 Extracted: definitions-main/base_classes/NXcircuit.nxdl.xml\n78 Extracted: definitions-main/base_classes/NXcite.nxdl.xml\n79 Extracted: definitions-main/base_classes/NXcollection.nxdl.xml\n80 Extracted: definitions-main/base_classes/NXcollectioncolumn.nxdl.xml\n81 Extracted: definitions-main/base_classes/NXcollimator.nxdl.xml\n82 Extracted: definitions-main/base_classes/NXcomponent.nxdl.xml\n83 Extracted: definitions-main/base_classes/NXcoordinate_system.nxdl.xml\n84 Extracted: definitions-main/base_classes/NXcrystal.nxdl.xml\n85 Extracted: definitions-main/base_classes/NXcs_computer.nxdl.xml\n86 Extracted: definitions-main/base_classes/NXcs_filter_boolean_mask.nxdl.xml\n87 Extracted: definitions-main/base_classes/NXcs_memory.nxdl.xml\n88 Extracted: definitions-main/base_classes/NXcs_prng.nxdl.xml\n89 Extracted: definitions-main/base_classes/NXcs_processor.nxdl.xml\n90 Extracted: definitions-main/base_classes/NXcs_profiling.nxdl.xml\n91 Extracted: definitions-main/base_classes/NXcs_profiling_event.nxdl.xml\n92 Extracted: definitions-main/base_classes/NXcs_storage.nxdl.xml\n93 Extracted: definitions-main/base_classes/NXcylindrical_geometry.nxdl.xml\n94 Extracted: definitions-main/base_classes/NXdata.nxdl.xml\n95 Extracted: definitions-main/base_classes/NXdeflector.nxdl.xml\n96 Extracted: definitions-main/base_classes/NXdetector.nxdl.xml\n97 Extracted: definitions-main/base_classes/NXdetector_channel.nxdl.xml\n98 Extracted: definitions-main/base_classes/NXdetector_group.nxdl.xml\n99 Extracted: definitions-main/base_classes/NXdetector_module.nxdl.xml\n100 Extracted: definitions-main/base_classes/NXdisk_chopper.nxdl.xml\n101 Extracted: definitions-main/base_classes/NXdistortion.nxdl.xml\n102 Extracted: definitions-main/base_classes/NXelectron_detector.nxdl.xml\n103 Extracted: definitions-main/base_classes/NXelectronanalyzer.nxdl.xml\n104 Extracted: definitions-main/base_classes/NXenergydispersion.nxdl.xml\n105 Extracted: definitions-main/base_classes/NXentry.nxdl.xml\n106 Extracted: definitions-main/base_classes/NXenvironment.nxdl.xml\n107 Extracted: definitions-main/base_classes/NXevent_data.nxdl.xml\n108 Extracted: definitions-main/base_classes/NXevent_data_apm.nxdl.xml\n109 Extracted: definitions-main/base_classes/NXfabrication.nxdl.xml\n110 Extracted: definitions-main/base_classes/NXfermi_chopper.nxdl.xml\n111 Extracted: definitions-main/base_classes/NXfilter.nxdl.xml\n112 Extracted: definitions-main/base_classes/NXfit.nxdl.xml\n113 Extracted: definitions-main/base_classes/NXfit_function.nxdl.xml\n114 Extracted: definitions-main/base_classes/NXflipper.nxdl.xml\n115 Extracted: definitions-main/base_classes/NXfresnel_zone_plate.nxdl.xml\n116 Extracted: definitions-main/base_classes/NXgeometry.nxdl.xml\n117 Extracted: definitions-main/base_classes/NXgrating.nxdl.xml\n118 Extracted: definitions-main/base_classes/NXguide.nxdl.xml\n119 Extracted: definitions-main/base_classes/NXhistory.nxdl.xml\n120 Extracted: definitions-main/base_classes/NXimage.nxdl.xml\n121 Extracted: definitions-main/base_classes/NXinsertion_device.nxdl.xml\n122 Extracted: definitions-main/base_classes/NXinstrument.nxdl.xml\n123 Extracted: definitions-main/base_classes/NXinstrument_apm.nxdl.xml\n124 Extracted: definitions-main/base_classes/NXlens_em.nxdl.xml\n125 Extracted: definitions-main/base_classes/NXlog.nxdl.xml\n126 Extracted: definitions-main/base_classes/NXmanipulator.nxdl.xml\n127 Extracted: definitions-main/base_classes/NXmirror.nxdl.xml\n128 Extracted: definitions-main/base_classes/NXmoderator.nxdl.xml\n129 Extracted: definitions-main/base_classes/NXmonitor.nxdl.xml\n130 Extracted: definitions-main/base_classes/NXmonochromator.nxdl.xml\n131 Extracted: definitions-main/base_classes/NXnote.nxdl.xml\n132 Extracted: definitions-main/base_classes/NXobject.nxdl.xml\n133 Extracted: definitions-main/base_classes/NXoff_geometry.nxdl.xml\n134 Extracted: definitions-main/base_classes/NXoptical_lens.nxdl.xml\n135 Extracted: definitions-main/base_classes/NXoptical_window.nxdl.xml\n136 Extracted: definitions-main/base_classes/NXorientation.nxdl.xml\n137 Extracted: definitions-main/base_classes/NXparameters.nxdl.xml\n138 Extracted: definitions-main/base_classes/NXpdb.nxdl.xml\n139 Extracted: definitions-main/base_classes/NXpeak.nxdl.xml\n140 Extracted: definitions-main/base_classes/NXpid_controller.nxdl.xml\n141 Extracted: definitions-main/base_classes/NXpinhole.nxdl.xml\n142 Extracted: definitions-main/base_classes/NXpolarizer.nxdl.xml\n143 Extracted: definitions-main/base_classes/NXpositioner.nxdl.xml\n144 Extracted: definitions-main/base_classes/NXprocess.nxdl.xml\n145 Extracted: definitions-main/base_classes/NXprogram.nxdl.xml\n146 Extracted: definitions-main/base_classes/NXpump.nxdl.xml\n147 Extracted: definitions-main/base_classes/NXreflections.nxdl.xml\n148 Extracted: definitions-main/base_classes/NXregistration.nxdl.xml\n149 Extracted: definitions-main/base_classes/NXresolution.nxdl.xml\n150 Extracted: definitions-main/base_classes/NXroi_process.nxdl.xml\n151 Extracted: definitions-main/base_classes/NXroot.nxdl.xml\n152 Extracted: definitions-main/base_classes/NXsample.nxdl.xml\n153 Extracted: definitions-main/base_classes/NXsample_component.nxdl.xml\n154 Extracted: definitions-main/base_classes/NXsensor.nxdl.xml\n155 Extracted: definitions-main/base_classes/NXshape.nxdl.xml\n156 Extracted: definitions-main/base_classes/NXslit.nxdl.xml\n157 Extracted: definitions-main/base_classes/NXsource.nxdl.xml\n158 Extracted: definitions-main/base_classes/NXspectrum.nxdl.xml\n159 Extracted: definitions-main/base_classes/NXspindispersion.nxdl.xml\n160 Extracted: definitions-main/base_classes/NXsubentry.nxdl.xml\n161 Extracted: definitions-main/base_classes/NXtransformations.nxdl.xml\n162 Extracted: definitions-main/base_classes/NXtranslation.nxdl.xml\n163 Extracted: definitions-main/base_classes/NXunit_cell.nxdl.xml\n164 Extracted: definitions-main/base_classes/NXuser.nxdl.xml\n165 Extracted: definitions-main/base_classes/NXvelocity_selector.nxdl.xml\n166 Extracted: definitions-main/base_classes/NXwaveplate.nxdl.xml\n167 Extracted: definitions-main/base_classes/NXxraylens.nxdl.xml\n168 Extracted: definitions-main/base_classes/nxdlformat.xsl\n169 Extracted: definitions-main/contributed_definitions/NXaberration.nxdl.xml\n170 Extracted: definitions-main/contributed_definitions/NXaberration_model.nxdl.xml\n171 Extracted: definitions-main/contributed_definitions/NXaberration_model_ceos.nxdl.xml\n172 Extracted: definitions-main/contributed_definitions/NXaberration_model_nion.nxdl.xml\n173 Extracted: definitions-main/contributed_definitions/NXadc.nxdl.xml\n174 Extracted: definitions-main/contributed_definitions/NXaperture_em.nxdl.xml\n175 Extracted: definitions-main/contributed_definitions/NXapm_composition_space_results.nxdl.xml\n176 Extracted: definitions-main/contributed_definitions/NXapm_input_ranging.nxdl.xml\n177 Extracted: definitions-main/contributed_definitions/NXapm_input_reconstruction.nxdl.xml\n178 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_clusterer.nxdl.xml\n179 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_distancer.nxdl.xml\n180 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_intersector.nxdl.xml\n181 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_nanochem.nxdl.xml\n182 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_ranger.nxdl.xml\n183 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_selector.nxdl.xml\n184 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_spatstat.nxdl.xml\n185 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_surfacer.nxdl.xml\n186 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_tessellator.nxdl.xml\n187 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_config_transcoder.nxdl.xml\n188 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_clusterer.nxdl.xml\n189 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_distancer.nxdl.xml\n190 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_intersector.nxdl.xml\n191 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_nanochem.nxdl.xml\n192 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_ranger.nxdl.xml\n193 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_selector.nxdl.xml\n194 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_spatstat.nxdl.xml\n195 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_surfacer.nxdl.xml\n196 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_tessellator.nxdl.xml\n197 Extracted: definitions-main/contributed_definitions/NXapm_paraprobe_results_transcoder.nxdl.xml\n198 Extracted: definitions-main/contributed_definitions/NXbeam_splitter.nxdl.xml\n199 Extracted: definitions-main/contributed_definitions/NXcircuit_board.nxdl.xml\n200 Extracted: definitions-main/contributed_definitions/NXclustering.nxdl.xml\n201 Extracted: definitions-main/contributed_definitions/NXcontainer.nxdl.xml\n202 Extracted: definitions-main/contributed_definitions/NXcoordinate_system_set.nxdl.xml\n203 Extracted: definitions-main/contributed_definitions/NXcorrector_cs.nxdl.xml\n204 Extracted: definitions-main/contributed_definitions/NXcs_cpu.nxdl.xml\n205 Extracted: definitions-main/contributed_definitions/NXcs_gpu.nxdl.xml\n206 Extracted: definitions-main/contributed_definitions/NXcs_io_obj.nxdl.xml\n207 Extracted: definitions-main/contributed_definitions/NXcs_io_sys.nxdl.xml\n208 Extracted: definitions-main/contributed_definitions/NXcs_mm_sys.nxdl.xml\n209 Extracted: definitions-main/contributed_definitions/NXcsg.nxdl.xml\n210 Extracted: definitions-main/contributed_definitions/NXcxi_ptycho.nxdl.xml\n211 Extracted: definitions-main/contributed_definitions/NXdac.nxdl.xml\n212 Extracted: definitions-main/contributed_definitions/NXdelocalization.nxdl.xml\n213 Extracted: definitions-main/contributed_definitions/NXdispersion.nxdl.xml\n214 Extracted: definitions-main/contributed_definitions/NXdispersion_function.nxdl.xml\n215 Extracted: definitions-main/contributed_definitions/NXdispersion_repeated_parameter.nxdl.xml\n216 Extracted: definitions-main/contributed_definitions/NXdispersion_single_parameter.nxdl.xml\n217 Extracted: definitions-main/contributed_definitions/NXdispersion_table.nxdl.xml\n218 Extracted: definitions-main/contributed_definitions/NXdispersive_material.nxdl.xml\n219 Extracted: definitions-main/contributed_definitions/NXebeam_column.nxdl.xml\n220 Extracted: definitions-main/contributed_definitions/NXelectrostatic_kicker.nxdl.xml\n221 Extracted: definitions-main/contributed_definitions/NXem.nxdl.xml\n222 Extracted: definitions-main/contributed_definitions/NXem_ebsd.nxdl.xml\n223 Extracted: definitions-main/contributed_definitions/NXem_ebsd_conventions.nxdl.xml\n224 Extracted: definitions-main/contributed_definitions/NXem_ebsd_crystal_structure_model.nxdl.xml\n225 Extracted: definitions-main/contributed_definitions/NXevent_data_em.nxdl.xml\n226 Extracted: definitions-main/contributed_definitions/NXevent_data_em_set.nxdl.xml\n227 Extracted: definitions-main/contributed_definitions/NXfiber.nxdl.xml\n228 Extracted: definitions-main/contributed_definitions/NXgraph_edge_set.nxdl.xml\n229 Extracted: definitions-main/contributed_definitions/NXgraph_node_set.nxdl.xml\n230 Extracted: definitions-main/contributed_definitions/NXgraph_root.nxdl.xml\n231 Extracted: definitions-main/contributed_definitions/NXibeam_column.nxdl.xml\n232 Extracted: definitions-main/contributed_definitions/NXimage_set_em_adf.nxdl.xml\n233 Extracted: definitions-main/contributed_definitions/NXimage_set_em_kikuchi.nxdl.xml\n234 Extracted: definitions-main/contributed_definitions/NXinteraction_vol_em.nxdl.xml\n235 Extracted: definitions-main/contributed_definitions/NXion.nxdl.xml\n236 Extracted: definitions-main/contributed_definitions/NXisocontour.nxdl.xml\n237 Extracted: definitions-main/contributed_definitions/NXiv_temp.nxdl.xml\n238 Extracted: definitions-main/contributed_definitions/NXlab_electro_chemo_mechanical_preparation.nxdl.xml\n239 Extracted: definitions-main/contributed_definitions/NXlab_sample_mounting.nxdl.xml\n240 Extracted: definitions-main/contributed_definitions/NXmagnetic_kicker.nxdl.xml\n241 Extracted: definitions-main/contributed_definitions/NXmatch_filter.nxdl.xml\n242 Extracted: definitions-main/contributed_definitions/NXms.nxdl.xml\n243 Extracted: definitions-main/contributed_definitions/NXms_feature_set.nxdl.xml\n244 Extracted: definitions-main/contributed_definitions/NXms_score_config.nxdl.xml\n245 Extracted: definitions-main/contributed_definitions/NXms_score_results.nxdl.xml\n246 Extracted: definitions-main/contributed_definitions/NXms_snapshot.nxdl.xml\n247 Extracted: definitions-main/contributed_definitions/NXms_snapshot_set.nxdl.xml\n248 Extracted: definitions-main/contributed_definitions/NXoptical_system_em.nxdl.xml\n249 Extracted: definitions-main/contributed_definitions/NXorientation_set.nxdl.xml\n250 Extracted: definitions-main/contributed_definitions/NXpolarizer_opt.nxdl.xml\n251 Extracted: definitions-main/contributed_definitions/NXquadric.nxdl.xml\n252 Extracted: definitions-main/contributed_definitions/NXquadrupole_magnet.nxdl.xml\n253 Extracted: definitions-main/contributed_definitions/NXregion.nxdl.xml\n254 Extracted: definitions-main/contributed_definitions/NXscanbox_em.nxdl.xml\n255 Extracted: definitions-main/contributed_definitions/NXsensor_scan.nxdl.xml\n256 Extracted: definitions-main/contributed_definitions/NXseparator.nxdl.xml\n257 Extracted: definitions-main/contributed_definitions/NXsimilarity_grouping.nxdl.xml\n258 Extracted: definitions-main/contributed_definitions/NXslip_system_set.nxdl.xml\n259 Extracted: definitions-main/contributed_definitions/NXsnsevent.nxdl.xml\n260 Extracted: definitions-main/contributed_definitions/NXsnshisto.nxdl.xml\n261 Extracted: definitions-main/contributed_definitions/NXsolenoid_magnet.nxdl.xml\n262 Extracted: definitions-main/contributed_definitions/NXsolid_geometry.nxdl.xml\n263 Extracted: definitions-main/contributed_definitions/NXspatial_filter.nxdl.xml\n264 Extracted: definitions-main/contributed_definitions/NXspectrum_set.nxdl.xml\n265 Extracted: definitions-main/contributed_definitions/NXspectrum_set_em_eels.nxdl.xml\n266 Extracted: definitions-main/contributed_definitions/NXspectrum_set_em_xray.nxdl.xml\n267 Extracted: definitions-main/contributed_definitions/NXspin_rotator.nxdl.xml\n268 Extracted: definitions-main/contributed_definitions/NXsubsampling_filter.nxdl.xml\n269 Extracted: definitions-main/contributed_definitions/NXsubstance.nxdl.xml\n270 Extracted: definitions-main/contributed_definitions/NXtransmission.nxdl.xml\n271 Extracted: definitions-main/contributed_definitions/NXxpcs.nxdl.xml\n272 Extracted: definitions-main/contributed_definitions/nxdlformat.xsl\n273 Extracted: definitions-main/nxdl.xsd\n274 Extracted: definitions-main/nxdlTypes.xsd\nCreated: /home/user/.config/punx/definitions-main/__github_info__.json\nInstalled in directory: /home/user/.config/punx/main\n============= ====== =================== ======= =============================================================================================\nNXDL file set cache  date &amp; time         commit  path                                                 \n============= ====== =================== ======= =============================================================================================\na4fd52d       source 2016-11-19 01:07:45 a4fd52d /home/user/fairmat/nomad-distro-dev/.venv/lib/python3.12/site-packages/punx/cache/a4fd52d\nv3.3          source 2017-07-12 10:41:12 9285af9 /home/user/fairmat/nomad-distro-dev/.venv/lib/python3.12/site-packages/punx/cache/v3.3\nv2018.5       source 2018-05-15 16:34:19 a3045fd /home/user/fairmat/nomad-distro-dev/.venv/lib/python3.12/site-packages/punx/cache/v2018.5\nmain          user   2025-08-14 04:24:42 7ac3f9c /home/user/.config/punx/main                     \n============= ====== =================== ======= =============================================================================================\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#usage_1","title":"Usage","text":"<p>After installation, you can invoke the help call from the command line:</p> SourceResult <pre><code>punx --help\n</code></pre> <pre><code>usage: punx [-h] [-v] {configuration,demonstrate,install,tree,validate} ...\n\nPython Utilities for NeXus HDF5 files version: 0.3.5 URL: https://prjemian.github.io/punx\n\noptions:\n  -h, --help    show this help message and exit\n  -v, --version show program's version number and exit\n\nsubcommand:\n  valid subcommands\n\n{configuration,demonstrate,install,tree,validate}\n  configuration  show configuration details of punx\n  demonstrate    demonstrate HDF5 file validation\n  install        install NeXus definitions into the local cache\n  tree           show tree structure of HDF5 or NXDL file\n  validate       validate a NeXus file\n\nNote: It is only necessary to use the first two (or more) characters of any subcommand, enough that the abbreviation is unique. Such as: demonstrate can be abbreviated to demo or even de.\n</code></pre> <p>NeXus definitions in <code>punx</code></p> <p>The program selects the NeXus definitions (set of nxdl.xml files) by itself. As of July 2025, only the official definitions from the NIAC repository are available.</p> <p>You may update the repository for the latest version via:</p> <pre><code>punx install\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#validation-in-punx","title":"Validation in <code>punx</code>","text":"<ul> <li><code>punx</code> validation docs</li> </ul> <p>You can start the <code>punx</code> validation by running</p> SourceResult <pre><code>punx validate src/pynxtools/data/201805_WSe2_arpes.nxs\n</code></pre> <pre><code>!!! WARNING: this program is not ready for distribution.\n\ndata file: src/pynxtools/data/201805_WSe2_arpes.nxs\nNeXus definitions: main, dated 2025-08-14 04:24:42, sha=7ac3f9c2376bbe8c9c9c942652f0c9c3bfb065fe\n\nfindings\n======================================================= ======== ==================================== ===========================================================================================\naddress                                                 status   test                                 comments                                                                                   \n======================================================= ======== ==================================== ===========================================================================================\n/                                                       TODO     NeXus base class                     NXroot: more validations needed                                                            \n/                                                       OK       known NXDL                           NXroot: recognized NXDL specification                                                      \n/                                                       OK       NeXus base class                     NXroot: known NeXus base class                                                             \n/                                                       OK       NXDL group in data file              found:  in //entry                                                                         \n/                                                       OK       NeXus default plot                   found by v3: /entry/data/data                                                              \n/@HDF5_Version                                          TODO     attribute value                      implement                                                                                  \n/@HDF5_Version                                          TODO     value of @HDF5_Version               TODO: need to validate: @HDF5_Version = 1.10.5                                             \n/@HDF5_Version                                          OK       validItemName                        relaxed pattern: [a-zA-Z0-9_]([a-zA-Z0-9_.]*[a-zA-Z0-9_])?                                 \n/@HDF5_Version                                          OK       known attribute                      known: NXroot@HDF5_Version                                                                 \n/@file_name                                             TODO     attribute value                      implement                                                                                  \n/@file_name                                             TODO     value of @file_name                  TODO: need to validate: @file_name = /home/tommaso/Desktop/NeXus/Test/201805_WSe2_arpes.nxs\n/@file_name                                             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/@file_name                                             OK       known attribute                      known: NXroot@file_name                                                                    \n/@file_time                                             TODO     attribute value                      implement                                                                                  \n/@file_time                                             TODO     value of @file_time                  TODO: need to validate: @file_time = 2020-06-04T19:19:48.464472                            \n/@file_time                                             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/@file_time                                             OK       known attribute                      known: NXroot@file_time                                                                    \n/@h5py_version                                          TODO     attribute value                      implement                                                                                  \n/@h5py_version                                          TODO     value of @h5py_version               TODO: need to validate: @h5py_version = 2.10.0                                             \n/@h5py_version                                          OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/@h5py_version                                          OK       known attribute                      known: NXroot@h5py_version                                                                 \n/@nexusformat_version                                   TODO     attribute value                      implement                                                                                  \n/@nexusformat_version                                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/@nexusformat_version                                   OK       known attribute                      unknown: NXroot@nexusformat_version                                                        \n/entry                                                  TODO     NeXus base class                     NXentry: more validations needed                                                           \n/entry                                                  TODO     NeXus application definition         NXarpes: more validations needed                                                           \n/entry                                                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry                                                  OK       group in base class                  defined: NXroot/entry                                                                      \n/entry                                                  OK       known NXDL                           NXentry: recognized NXDL specification                                                     \n/entry                                                  OK       NeXus base class                     NXentry: known NeXus base class                                                            \n/entry                                                  OK       NXDL field in data file              found: /entry/collection_time                                                              \n/entry                                                  OK       NXDL field in data file              found: /entry/definition                                                                   \n/entry                                                  OK       NXDL field in data file              found: /entry/duration                                                                     \n/entry                                                  OK       NXDL field in data file              found: /entry/end_time                                                                     \n/entry                                                  OK       NXDL field in data file              found: /entry/entry_identifier                                                             \n/entry                                                  OK       NXDL field in data file              found: /entry/experiment_identifier                                                        \n/entry                                                  OK       NXDL field in data file              found: /entry/run_cycle                                                                    \n/entry                                                  OK       NXDL field in data file              found: /entry/start_time                                                                   \n/entry                                                  OK       NXDL field in data file              found: /entry/title                                                                        \n/entry                                                  OK       NXDL group in data file              found:  in /entry/data                                                                     \n/entry                                                  OK       NXDL group in data file              found:  in /entry/instrument                                                               \n/entry                                                  OK       NXDL group in data file              found:  in /entry/sample                                                                   \n/entry                                                  OK       known NXDL                           NXarpes: recognized NXDL specification                                                     \n/entry                                                  OK       NeXus application definition         NXarpes: known NeXus application definition                                                \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/collection_description                                                   \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/collection_identifier                                                    \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/definition_local                                                         \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/entry_identifier_uuid                                                    \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/experiment_description                                                   \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/features                                                                 \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/pre_sample_flightpath                                                    \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/program_name                                                             \n/entry                                                  OPTIONAL NXDL field in data file              not found: /entry/revision                                                                 \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/collection                                                           \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/experiment_documentation                                             \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/monitor                                                              \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/notes                                                                \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/parameters                                                           \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/process                                                              \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/subentry                                                             \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/thumbnail                                                            \n/entry                                                  OPTIONAL NXDL group in data file              not found:  in /entry/user                                                                 \n/entry@NX_class                                         OK       validItemName                        pattern: NX.+                                                                              \n/entry@NX_class                                         OK       attribute value                      recognized NXDL base class: NXentry                                                        \n/entry@NX_class                                         OK       known attribute                      known: NXentry@NX_class                                                                    \n/entry/collection_time                                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/collection_time                                  OK       field in base class                  defined: NXentry/collection_time                                                           \n/entry/collection_time@units                            TODO     attribute value                      implement                                                                                  \n/entry/collection_time@units                            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data                                             TODO     NeXus base class                     NXdata: more validations needed                                                            \n/entry/data                                             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data                                             OK       group in base class                  defined: NXentry/data                                                                      \n/entry/data                                             OK       known NXDL                           NXdata: recognized NXDL specification                                                      \n/entry/data                                             OK       NeXus base class                     NXdata: known NeXus base class                                                             \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/AXISNAME                                                            \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/DATA                                                                \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/FIELDNAME_errors                                                    \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/FIELDNAME_offset                                                    \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/FIELDNAME_scaling_factor                                            \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/errors                                                              \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/offset                                                              \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/scaling_factor                                                      \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/title                                                               \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/x                                                                   \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/y                                                                   \n/entry/data                                             OPTIONAL NXDL field in data file              not found: /entry/data/z                                                                   \n/entry/data@NX_class                                    OK       validItemName                        pattern: NX.+                                                                              \n/entry/data@NX_class                                    OK       attribute value                      recognized NXDL base class: NXdata                                                         \n/entry/data@NX_class                                    OK       known attribute                      known: NXdata@NX_class                                                                     \n/entry/data@axes                                        TODO     attribute value                      implement                                                                                  \n/entry/data@axes                                        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data@axes                                        OK       valid name @axes['angles']           strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data@axes                                        OK       axes['angles'] exists                found field for named axis                                                                 \n/entry/data@axes                                        OK       valid name @axes['energies']         strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data@axes                                        OK       axes['energies'] exists              found field for named axis                                                                 \n/entry/data@axes                                        OK       valid name @axes['delays']           strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data@axes                                        OK       axes['delays'] exists                found field for named axis                                                                 \n/entry/data@axes                                        OK       known attribute                      known: NXdata@axes                                                                         \n/entry/data@signal                                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data@signal                                      OK       valid name @signal=data              strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data@signal                                      OK       attribute value                      found: @signal=data                                                                        \n/entry/data@signal                                      OK       known attribute                      known: NXdata@signal                                                                       \n/entry/data@signal                                      OK       value of @signal                     found: /entry/data/data                                                                    \n/entry/data@signal                                      OK       NeXus default plot v3, NXdata@signal correct default plot setup in /NXentry/NXdata                                              \n/entry/data/angles                                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data/angles                                      OK       field in base class                  not defined: NXdata/angles                                                                 \n/entry/data/angles@target                               OK       attribute value                      found: @target=/entry/instrument/analyser/angles                                           \n/entry/data/angles@units                                TODO     attribute value                      implement                                                                                  \n/entry/data/data                                        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data/data                                        OK       field in base class                  not defined: NXdata/data                                                                   \n/entry/data/data@target                                 OK       attribute value                      found: @target=/entry/instrument/analyser/data                                             \n/entry/data/data@units                                  TODO     attribute value                      implement                                                                                  \n/entry/data/delays                                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data/delays                                      OK       field in base class                  not defined: NXdata/delays                                                                 \n/entry/data/delays@target                               OK       attribute value                      found: @target=/entry/instrument/analyser/delays                                           \n/entry/data/delays@units                                TODO     attribute value                      implement                                                                                  \n/entry/data/energies                                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/data/energies                                    OK       field in base class                  not defined: NXdata/energies                                                               \n/entry/data/energies@target                             OK       attribute value                      found: @target=/entry/instrument/analyser/energies                                         \n/entry/data/energies@units                              TODO     attribute value                      implement                                                                                  \n/entry/definition                                       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/definition                                       OK       field in base class                  defined: NXentry/definition                                                                \n/entry/definition                                       OK       NXDL field                           NXarpes:definition found                                                                   \n/entry/definition                                       OK       NXDL field enumerations              NXarpes:definition (required) has expected value: NXarpes                                  \n/entry/duration                                         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/duration                                         OK       field in base class                  defined: NXentry/duration                                                                  \n/entry/duration@units                                   TODO     attribute value                      implement                                                                                  \n/entry/duration@units                                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/end_time                                         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/end_time                                         OK       field in base class                  defined: NXentry/end_time                                                                  \n/entry/entry_identifier                                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/entry_identifier                                 OK       field in base class                  defined: NXentry/entry_identifier                                                          \n/entry/experiment_identifier                            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/experiment_identifier                            OK       field in base class                  defined: NXentry/experiment_identifier                                                     \n/entry/instrument                                       TODO     NeXus base class                     NXinstrument: more validations needed                                                      \n/entry/instrument                                       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument                                       OK       group in base class                  defined: NXentry/instrument                                                                \n/entry/instrument                                       OK       known NXDL                           NXinstrument: recognized NXDL specification                                                \n/entry/instrument                                       OK       NeXus base class                     NXinstrument: known NeXus base class                                                       \n/entry/instrument                                       OK       NXDL field in data file              found: /entry/instrument/name                                                              \n/entry/instrument                                       OK       NXDL group in data file              found:  in /entry/instrument/monochromator                                                 \n/entry/instrument                                       OK       NXDL group in data file              found:  in /entry/instrument/source                                                        \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/DIFFRACTOMETER                                            \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/actuator                                                  \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/aperture                                                  \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/attenuator                                                \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/beam                                                      \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/beam_stop                                                 \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/bending_magnet                                            \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/capillary                                                 \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/collection                                                \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/collimator                                                \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/crystal                                                   \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/detector                                                  \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/detector_group                                            \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/disk_chopper                                              \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/event_data                                                \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/fabrication                                               \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/fermi_chopper                                             \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/filter                                                    \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/flipper                                                   \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/guide                                                     \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/history                                                   \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/insertion_device                                          \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/mirror                                                    \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/moderator                                                 \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/polarizer                                                 \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/positioner                                                \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/sensor                                                    \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/velocity_selector                                         \n/entry/instrument                                       OPTIONAL NXDL group in data file              not found:  in /entry/instrument/xraylens                                                  \n/entry/instrument@NX_class                              OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument@NX_class                              OK       attribute value                      recognized NXDL base class: NXinstrument                                                   \n/entry/instrument@NX_class                              OK       known attribute                      known: NXinstrument@NX_class                                                               \n/entry/instrument/analyser                              TODO     NeXus base class                     NXdetector: more validations needed                                                        \n/entry/instrument/analyser                              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser                              OK       group in base class                  not defined: NXinstrument/analyser                                                         \n/entry/instrument/analyser                              OK       known NXDL                           NXdetector: recognized NXDL specification                                                  \n/entry/instrument/analyser                              OK       NeXus base class                     NXdetector: known NeXus base class                                                         \n/entry/instrument/analyser                              OK       NXDL field in data file              found: /entry/instrument/analyser/acquisition_mode                                         \n/entry/instrument/analyser                              OK       NXDL field in data file              found: /entry/instrument/analyser/data                                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/angular_calibration                                  \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/angular_calibration_applied                          \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/azimuthal_angle                                      \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/beam_center_x                                        \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/beam_center_y                                        \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/bit_depth_readout                                    \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/calibration_date                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/count_time                                           \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/countrate_correction_applied                         \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/countrate_correction_lookup_table                    \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/crate                                                \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/data_errors                                          \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/dead_time                                            \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/depends_on                                           \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/description                                          \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/detection_gas_path                                   \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/detector_number                                      \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/detector_readout_time                                \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/diameter                                             \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/distance                                             \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/flatfield                                            \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/flatfield_applied                                    \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/flatfield_errors                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/frame_start_number                                   \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/frame_time                                           \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/gain_setting                                         \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/gas_pressure                                         \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/image_key                                            \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/input                                                \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/layout                                               \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/local_name                                           \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/number_of_cycles                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/pixel_mask                                           \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/pixel_mask_applied                                   \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/polar_angle                                          \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/raw_time_of_flight                                   \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/real_time                                            \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/saturation_value                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/sensor_material                                      \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/sensor_thickness                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/sequence_number                                      \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/serial_number                                        \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/slot                                                 \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/solid_angle                                          \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/start_time                                           \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/stop_time                                            \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/threshold_energy                                     \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/time_of_flight                                       \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/trigger_dead_time                                    \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/trigger_delay_time                                   \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/trigger_delay_time_set                               \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/trigger_internal_delay_time                          \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/type                                                 \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/underload_value                                      \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/virtual_pixel_interpolation_applied                  \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/x_pixel_offset                                       \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/x_pixel_size                                         \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/y_pixel_offset                                       \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/y_pixel_size                                         \n/entry/instrument/analyser                              OPTIONAL NXDL field in data file              not found: /entry/instrument/analyser/z_pixel_offset                                       \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/CHANNELNAME_channel                              \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/calibration_method                               \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/collection                                       \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/data_file                                        \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/detector_module                                  \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/efficiency                                       \n/entry/instrument/analyser                              OPTIONAL NXDL group in data file              not found:  in /entry/instrument/analyser/geometry                                         \n/entry/instrument/analyser@NX_class                     OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/analyser@NX_class                     OK       attribute value                      recognized NXDL base class: NXdetector                                                     \n/entry/instrument/analyser@NX_class                     OK       known attribute                      known: NXdetector@NX_class                                                                 \n/entry/instrument/analyser/acquisition_mode             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/acquisition_mode             OK       field in base class                  defined: NXdetector/acquisition_mode                                                       \n/entry/instrument/analyser/amplifier_type               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/amplifier_type               OK       field in base class                  not defined: NXdetector/amplifier_type                                                     \n/entry/instrument/analyser/angles                       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/angles                       OK       field in base class                  not defined: NXdetector/angles                                                             \n/entry/instrument/analyser/angles@target                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/angles@target                OK       attribute value                      found: @target=/entry/instrument/analyser/angles                                           \n/entry/instrument/analyser/angles@units                 TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/angles@units                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/contrast_aperture            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/contrast_aperture            OK       field in base class                  not defined: NXdetector/contrast_aperture                                                  \n/entry/instrument/analyser/data                         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/data                         OK       field in base class                  defined: NXdetector/data                                                                   \n/entry/instrument/analyser/data@target                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/data@target                  OK       attribute value                      found: @target=/entry/instrument/analyser/data                                             \n/entry/instrument/analyser/data@units                   TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/data@units                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/delays                       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/delays                       OK       field in base class                  not defined: NXdetector/delays                                                             \n/entry/instrument/analyser/delays@target                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/delays@target                OK       attribute value                      found: @target=/entry/instrument/analyser/delays                                           \n/entry/instrument/analyser/delays@units                 TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/delays@units                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/detector_type                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/detector_type                OK       field in base class                  not defined: NXdetector/detector_type                                                      \n/entry/instrument/analyser/dispersion_scheme            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/dispersion_scheme            OK       field in base class                  not defined: NXdetector/dispersion_scheme                                                  \n/entry/instrument/analyser/energies                     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/energies                     OK       field in base class                  not defined: NXdetector/energies                                                           \n/entry/instrument/analyser/energies@target              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/energies@target              OK       attribute value                      found: @target=/entry/instrument/analyser/energies                                         \n/entry/instrument/analyser/energies@units               TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/energies@units               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/entrance_slit_setting        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/entrance_slit_setting        OK       field in base class                  not defined: NXdetector/entrance_slit_setting                                              \n/entry/instrument/analyser/entrance_slit_shape          OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/entrance_slit_shape          OK       field in base class                  not defined: NXdetector/entrance_slit_shape                                                \n/entry/instrument/analyser/entrance_slit_size           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/entrance_slit_size           OK       field in base class                  not defined: NXdetector/entrance_slit_size                                                 \n/entry/instrument/analyser/entrance_slit_size@units     TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/entrance_slit_size@units     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/extractor_voltage            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/extractor_voltage            OK       field in base class                  not defined: NXdetector/extractor_voltage                                                  \n/entry/instrument/analyser/extractor_voltage@units      TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/extractor_voltage@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/field_aperture_x             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/field_aperture_x             OK       field in base class                  not defined: NXdetector/field_aperture_x                                                   \n/entry/instrument/analyser/field_aperture_x@units       TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/field_aperture_x@units       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/field_aperture_y             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/field_aperture_y             OK       field in base class                  not defined: NXdetector/field_aperture_y                                                   \n/entry/instrument/analyser/field_aperture_y@units       TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/field_aperture_y@units       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/lens_mode                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/lens_mode                    OK       field in base class                  not defined: NXdetector/lens_mode                                                          \n/entry/instrument/analyser/magnification                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/magnification                OK       field in base class                  not defined: NXdetector/magnification                                                      \n/entry/instrument/analyser/pass_energy                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/pass_energy                  OK       field in base class                  not defined: NXdetector/pass_energy                                                        \n/entry/instrument/analyser/pass_energy@units            TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/pass_energy@units            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/projection                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/projection                   OK       field in base class                  not defined: NXdetector/projection                                                         \n/entry/instrument/analyser/region_origin                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/region_origin                OK       field in base class                  not defined: NXdetector/region_origin                                                      \n/entry/instrument/analyser/region_size                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/region_size                  OK       field in base class                  not defined: NXdetector/region_size                                                        \n/entry/instrument/analyser/sensor_count                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/sensor_count                 OK       field in base class                  not defined: NXdetector/sensor_count                                                       \n/entry/instrument/analyser/sensor_size                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/sensor_size                  OK       field in base class                  not defined: NXdetector/sensor_size                                                        \n/entry/instrument/analyser/time_per_channel             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/time_per_channel             OK       field in base class                  not defined: NXdetector/time_per_channel                                                   \n/entry/instrument/analyser/time_per_channel@units       TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/time_per_channel@units       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/working_distance             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/analyser/working_distance             OK       field in base class                  not defined: NXdetector/working_distance                                                   \n/entry/instrument/analyser/working_distance@units       TODO     attribute value                      implement                                                                                  \n/entry/instrument/analyser/working_distance@units       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0                          TODO     NeXus base class                     NXbeam: more validations needed                                                            \n/entry/instrument/beam_probe_0                          OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0                          OK       group in base class                  not defined: NXinstrument/beam_probe_0                                                     \n/entry/instrument/beam_probe_0                          OK       known NXDL                           NXbeam: recognized NXDL specification                                                      \n/entry/instrument/beam_probe_0                          OK       NeXus base class                     NXbeam: known NeXus base class                                                             \n/entry/instrument/beam_probe_0                          OK       NXDL field in data file              found: /entry/instrument/beam_probe_0/distance                                             \n/entry/instrument/beam_probe_0                          OK       NXDL field in data file              found: /entry/instrument/beam_probe_0/pulse_duration                                       \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/average_power                                    \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/chirp_GDD                                        \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/chirp_type                                       \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/depends_on                                       \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/energy_transfer                                  \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/extent                                           \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/final_beam_divergence                            \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/final_energy                                     \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/final_polarization                               \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/final_polarization_stokes                        \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/final_wavelength                                 \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/final_wavelength_spread                          \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/fluence                                          \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/flux                                             \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/frog_delays                                      \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/frog_frequencies                                 \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/frog_trace                                       \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_beam_divergence                         \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_energy                                  \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_energy_spread                           \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_energy_weights                          \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_polarization                            \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_polarization_stokes                     \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_wavelength                              \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_wavelength_spread                       \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/incident_wavelength_weights                      \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/pulse_delay                                      \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_probe_0/pulse_energy                                     \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL group in data file              not found:  in /entry/instrument/beam_probe_0/data                                         \n/entry/instrument/beam_probe_0                          OPTIONAL NXDL group in data file              not found:  in /entry/instrument/beam_probe_0/transformations                              \n/entry/instrument/beam_probe_0@NX_class                 OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/beam_probe_0@NX_class                 OK       attribute value                      recognized NXDL base class: NXbeam                                                         \n/entry/instrument/beam_probe_0@NX_class                 OK       known attribute                      known: NXbeam@NX_class                                                                     \n/entry/instrument/beam_probe_0/distance                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/distance                 OK       field in base class                  defined: NXbeam/distance                                                                   \n/entry/instrument/beam_probe_0/distance@units           TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_probe_0/distance@units           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/photon_energy            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/photon_energy            OK       field in base class                  not defined: NXbeam/photon_energy                                                          \n/entry/instrument/beam_probe_0/photon_energy@units      TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_probe_0/photon_energy@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/polarization_angle       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/polarization_angle       OK       field in base class                  not defined: NXbeam/polarization_angle                                                     \n/entry/instrument/beam_probe_0/polarization_angle@units TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_probe_0/polarization_angle@units OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/polarization_ellipticity OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/polarization_ellipticity OK       field in base class                  not defined: NXbeam/polarization_ellipticity                                               \n/entry/instrument/beam_probe_0/pulse_duration           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/pulse_duration           OK       field in base class                  defined: NXbeam/pulse_duration                                                             \n/entry/instrument/beam_probe_0/pulse_duration@units     TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_probe_0/pulse_duration@units     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/size_x                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/size_x                   OK       field in base class                  not defined: NXbeam/size_x                                                                 \n/entry/instrument/beam_probe_0/size_x@units             TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_probe_0/size_x@units             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/size_y                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_probe_0/size_y                   OK       field in base class                  not defined: NXbeam/size_y                                                                 \n/entry/instrument/beam_probe_0/size_y@units             TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_probe_0/size_y@units             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0                           TODO     NeXus base class                     NXbeam: more validations needed                                                            \n/entry/instrument/beam_pump_0                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0                           OK       group in base class                  not defined: NXinstrument/beam_pump_0                                                      \n/entry/instrument/beam_pump_0                           OK       known NXDL                           NXbeam: recognized NXDL specification                                                      \n/entry/instrument/beam_pump_0                           OK       NeXus base class                     NXbeam: known NeXus base class                                                             \n/entry/instrument/beam_pump_0                           OK       NXDL field in data file              found: /entry/instrument/beam_pump_0/average_power                                         \n/entry/instrument/beam_pump_0                           OK       NXDL field in data file              found: /entry/instrument/beam_pump_0/distance                                              \n/entry/instrument/beam_pump_0                           OK       NXDL field in data file              found: /entry/instrument/beam_pump_0/fluence                                               \n/entry/instrument/beam_pump_0                           OK       NXDL field in data file              found: /entry/instrument/beam_pump_0/pulse_duration                                        \n/entry/instrument/beam_pump_0                           OK       NXDL field in data file              found: /entry/instrument/beam_pump_0/pulse_energy                                          \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/chirp_GDD                                         \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/chirp_type                                        \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/depends_on                                        \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/energy_transfer                                   \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/extent                                            \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/final_beam_divergence                             \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/final_energy                                      \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/final_polarization                                \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/final_polarization_stokes                         \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/final_wavelength                                  \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/final_wavelength_spread                           \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/flux                                              \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/frog_delays                                       \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/frog_frequencies                                  \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/frog_trace                                        \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_beam_divergence                          \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_energy                                   \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_energy_spread                            \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_energy_weights                           \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_polarization                             \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_polarization_stokes                      \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_wavelength                               \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_wavelength_spread                        \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/incident_wavelength_weights                       \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL field in data file              not found: /entry/instrument/beam_pump_0/pulse_delay                                       \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/beam_pump_0/data                                          \n/entry/instrument/beam_pump_0                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/beam_pump_0/transformations                               \n/entry/instrument/beam_pump_0@NX_class                  OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/beam_pump_0@NX_class                  OK       attribute value                      recognized NXDL base class: NXbeam                                                         \n/entry/instrument/beam_pump_0@NX_class                  OK       known attribute                      known: NXbeam@NX_class                                                                     \n/entry/instrument/beam_pump_0/average_power             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/average_power             OK       field in base class                  defined: NXbeam/average_power                                                              \n/entry/instrument/beam_pump_0/average_power@units       TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/average_power@units       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/center_wavelength         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/center_wavelength         OK       field in base class                  not defined: NXbeam/center_wavelength                                                      \n/entry/instrument/beam_pump_0/center_wavelength@units   TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/center_wavelength@units   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/distance                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/distance                  OK       field in base class                  defined: NXbeam/distance                                                                   \n/entry/instrument/beam_pump_0/distance@units            TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/distance@units            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/fluence                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/fluence                   OK       field in base class                  defined: NXbeam/fluence                                                                    \n/entry/instrument/beam_pump_0/fluence@units             TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/fluence@units             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/photon_energy             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/photon_energy             OK       field in base class                  not defined: NXbeam/photon_energy                                                          \n/entry/instrument/beam_pump_0/photon_energy@units       TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/photon_energy@units       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/polarization_angle        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/polarization_angle        OK       field in base class                  not defined: NXbeam/polarization_angle                                                     \n/entry/instrument/beam_pump_0/polarization_angle@units  TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/polarization_angle@units  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/polarization_ellipticity  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/polarization_ellipticity  OK       field in base class                  not defined: NXbeam/polarization_ellipticity                                               \n/entry/instrument/beam_pump_0/pulse_duration            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/pulse_duration            OK       field in base class                  defined: NXbeam/pulse_duration                                                             \n/entry/instrument/beam_pump_0/pulse_duration@units      TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/pulse_duration@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/pulse_energy              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/pulse_energy              OK       field in base class                  defined: NXbeam/pulse_energy                                                               \n/entry/instrument/beam_pump_0/pulse_energy@units        TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/pulse_energy@units        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/size_x                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/size_x                    OK       field in base class                  not defined: NXbeam/size_x                                                                 \n/entry/instrument/beam_pump_0/size_x@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/size_x@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/size_y                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/beam_pump_0/size_y                    OK       field in base class                  not defined: NXbeam/size_y                                                                 \n/entry/instrument/beam_pump_0/size_y@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/beam_pump_0/size_y@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/energy_resolution                     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/energy_resolution                     OK       field in base class                  not defined: NXinstrument/energy_resolution                                                \n/entry/instrument/energy_resolution@units               TODO     attribute value                      implement                                                                                  \n/entry/instrument/energy_resolution@units               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator                           TODO     NeXus base class                     NXpositioner: more validations needed                                                      \n/entry/instrument/manipulator                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator                           OK       group in base class                  not defined: NXinstrument/manipulator                                                      \n/entry/instrument/manipulator                           OK       known NXDL                           NXpositioner: recognized NXDL specification                                                \n/entry/instrument/manipulator                           OK       NeXus base class                     NXpositioner: known NeXus base class                                                       \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/acceleration_time                                 \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/controller_record                                 \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/depends_on                                        \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/description                                       \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/name                                              \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/raw_value                                         \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/soft_limit_max                                    \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/soft_limit_min                                    \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/target_value                                      \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/tolerance                                         \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/value                                             \n/entry/instrument/manipulator                           OPTIONAL NXDL field in data file              not found: /entry/instrument/manipulator/velocity                                          \n/entry/instrument/manipulator@NX_class                  OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/manipulator@NX_class                  OK       attribute value                      recognized NXDL base class: NXpositioner                                                   \n/entry/instrument/manipulator@NX_class                  OK       known attribute                      known: NXpositioner@NX_class                                                               \n/entry/instrument/manipulator/pos_x1                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_x1                    OK       field in base class                  not defined: NXpositioner/pos_x1                                                           \n/entry/instrument/manipulator/pos_x1@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/pos_x1@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_x2                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_x2                    OK       field in base class                  not defined: NXpositioner/pos_x2                                                           \n/entry/instrument/manipulator/pos_x2@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/pos_x2@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_y                     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_y                     OK       field in base class                  not defined: NXpositioner/pos_y                                                            \n/entry/instrument/manipulator/pos_y@units               TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/pos_y@units               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_z1                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_z1                    OK       field in base class                  not defined: NXpositioner/pos_z1                                                           \n/entry/instrument/manipulator/pos_z1@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/pos_z1@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_z2                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_z2                    OK       field in base class                  not defined: NXpositioner/pos_z2                                                           \n/entry/instrument/manipulator/pos_z2@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/pos_z2@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_z3                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/pos_z3                    OK       field in base class                  not defined: NXpositioner/pos_z3                                                           \n/entry/instrument/manipulator/pos_z3@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/pos_z3@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/sample_bias               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/sample_bias               OK       field in base class                  not defined: NXpositioner/sample_bias                                                      \n/entry/instrument/manipulator/sample_bias@target        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/sample_bias@target        OK       attribute value                      found: @target=/entry/instrument/manipulator/sample_bias                                   \n/entry/instrument/manipulator/sample_bias@units         TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/sample_bias@units         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/sample_temperature        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/sample_temperature        OK       field in base class                  not defined: NXpositioner/sample_temperature                                               \n/entry/instrument/manipulator/sample_temperature@target OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/sample_temperature@target OK       attribute value                      found: @target=/entry/instrument/manipulator/sample_temperature                            \n/entry/instrument/manipulator/sample_temperature@units  TODO     attribute value                      implement                                                                                  \n/entry/instrument/manipulator/sample_temperature@units  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/type                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/manipulator/type                      OK       field in base class                  not defined: NXpositioner/type                                                             \n/entry/instrument/monochromator                         TODO     NeXus base class                     NXmonochromator: more validations needed                                                   \n/entry/instrument/monochromator                         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator                         OK       group in base class                  defined: NXinstrument/monochromator                                                        \n/entry/instrument/monochromator                         OK       known NXDL                           NXmonochromator: recognized NXDL specification                                             \n/entry/instrument/monochromator                         OK       NeXus base class                     NXmonochromator: known NeXus base class                                                    \n/entry/instrument/monochromator                         OK       NXDL field in data file              found: /entry/instrument/monochromator/energy                                              \n/entry/instrument/monochromator                         OK       NXDL field in data file              found: /entry/instrument/monochromator/energy_error                                        \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/depends_on                                      \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/energy_dispersion                               \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/energy_errors                                   \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/wavelength                                      \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/wavelength_dispersion                           \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/wavelength_error                                \n/entry/instrument/monochromator                         OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/wavelength_errors                               \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/crystal                                     \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/distribution                                \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/entrance_slit                               \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/exit_slit                                   \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/geometry                                    \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/grating                                     \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/off_geometry                                \n/entry/instrument/monochromator                         OPTIONAL NXDL group in data file              not found:  in /entry/instrument/monochromator/velocity_selector                           \n/entry/instrument/monochromator@NX_class                OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/monochromator@NX_class                OK       attribute value                      recognized NXDL base class: NXmonochromator                                                \n/entry/instrument/monochromator@NX_class                OK       known attribute                      known: NXmonochromator@NX_class                                                            \n/entry/instrument/monochromator/energy                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator/energy                  OK       field in base class                  defined: NXmonochromator/energy                                                            \n/entry/instrument/monochromator/energy@units            TODO     attribute value                      implement                                                                                  \n/entry/instrument/monochromator/energy@units            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator/energy_error            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator/energy_error            OK       field in base class                  defined: NXmonochromator/energy_error                                                      \n/entry/instrument/monochromator/energy_error@units      TODO     attribute value                      implement                                                                                  \n/entry/instrument/monochromator/energy_error@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator/slit                    TODO     NeXus base class                     NXslit: more validations needed                                                            \n/entry/instrument/monochromator/slit                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator/slit                    OK       group in base class                  not defined: NXmonochromator/slit                                                          \n/entry/instrument/monochromator/slit                    OK       known NXDL                           NXslit: recognized NXDL specification                                                      \n/entry/instrument/monochromator/slit                    OK       NeXus base class                     NXslit: known NeXus base class                                                             \n/entry/instrument/monochromator/slit                    OK       NXDL field in data file              found: /entry/instrument/monochromator/slit/y_gap                                          \n/entry/instrument/monochromator/slit                    OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/slit/depends_on                                 \n/entry/instrument/monochromator/slit                    OPTIONAL NXDL field in data file              not found: /entry/instrument/monochromator/slit/x_gap                                      \n/entry/instrument/monochromator/slit@NX_class           OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/monochromator/slit@NX_class           OK       attribute value                      recognized NXDL base class: NXslit                                                         \n/entry/instrument/monochromator/slit@NX_class           OK       known attribute                      known: NXslit@NX_class                                                                     \n/entry/instrument/monochromator/slit/y_gap              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/monochromator/slit/y_gap              OK       field in base class                  defined: NXslit/y_gap                                                                      \n/entry/instrument/monochromator/slit/y_gap@units        TODO     attribute value                      implement                                                                                  \n/entry/instrument/monochromator/slit/y_gap@units        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/name                                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/name                                  OK       field in base class                  defined: NXinstrument/name                                                                 \n/entry/instrument/source                                TODO     NeXus base class                     NXsource: more validations needed                                                          \n/entry/instrument/source                                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source                                OK       group in base class                  defined: NXinstrument/source                                                               \n/entry/instrument/source                                OK       known NXDL                           NXsource: recognized NXDL specification                                                    \n/entry/instrument/source                                OK       NeXus base class                     NXsource: known NeXus base class                                                           \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/bunch_distance                                             \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/bunch_length                                               \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/current                                                    \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/energy                                                     \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/frequency                                                  \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/mode                                                       \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/name                                                       \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/number_of_bunches                                          \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/probe                                                      \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/top_up                                                     \n/entry/instrument/source                                OK       NXDL field in data file              found: /entry/instrument/source/type                                                       \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/anode_material                                         \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/depends_on                                             \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/distance                                               \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/emission_current                                       \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/emittance_x                                            \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/emittance_y                                            \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/filament_current                                       \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/flux                                                   \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/gas_pressure                                           \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/last_fill                                              \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/peak_power                                             \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/period                                                 \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/power                                                  \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/previous_source                                        \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/pulse_energy                                           \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/pulse_width                                            \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/sigma_x                                                \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/sigma_y                                                \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/target_material                                        \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/voltage                                                \n/entry/instrument/source                                OPTIONAL NXDL field in data file              not found: /entry/instrument/source/wavelength                                             \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/aperture                                           \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/bunch_pattern                                      \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/deflector                                          \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/distribution                                       \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/fabrication                                        \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/geometry                                           \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/lens_em                                            \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/notes                                              \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/off_geometry                                       \n/entry/instrument/source                                OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source/pulse_shape                                        \n/entry/instrument/source@NX_class                       OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/source@NX_class                       OK       attribute value                      recognized NXDL base class: NXsource                                                       \n/entry/instrument/source@NX_class                       OK       known attribute                      known: NXsource@NX_class                                                                   \n/entry/instrument/source/bunch_distance                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/bunch_distance                 OK       field in base class                  defined: NXsource/bunch_distance                                                           \n/entry/instrument/source/bunch_distance@units           TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/bunch_distance@units           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/bunch_length                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/bunch_length                   OK       field in base class                  defined: NXsource/bunch_length                                                             \n/entry/instrument/source/bunch_length@units             TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/bunch_length@units             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_distance                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_distance                 OK       field in base class                  not defined: NXsource/burst_distance                                                       \n/entry/instrument/source/burst_distance@units           TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/burst_distance@units           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_length                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_length                   OK       field in base class                  not defined: NXsource/burst_length                                                         \n/entry/instrument/source/burst_length@units             TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/burst_length@units             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_number_end               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_number_end               OK       field in base class                  not defined: NXsource/burst_number_end                                                     \n/entry/instrument/source/burst_number_start             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/burst_number_start             OK       field in base class                  not defined: NXsource/burst_number_start                                                   \n/entry/instrument/source/current                        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/current                        OK       field in base class                  defined: NXsource/current                                                                  \n/entry/instrument/source/current@units                  TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/current@units                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/energy                         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/energy                         OK       field in base class                  defined: NXsource/energy                                                                   \n/entry/instrument/source/energy@units                   TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/energy@units                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/frequency                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/frequency                      OK       field in base class                  defined: NXsource/frequency                                                                \n/entry/instrument/source/frequency@units                TODO     attribute value                      implement                                                                                  \n/entry/instrument/source/frequency@units                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/mode                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/mode                           OK       field in base class                  defined: NXsource/mode                                                                     \n/entry/instrument/source/name                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/name                           OK       field in base class                  defined: NXsource/name                                                                     \n/entry/instrument/source/number_of_bunches              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/number_of_bunches              OK       field in base class                  defined: NXsource/number_of_bunches                                                        \n/entry/instrument/source/number_of_bursts               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/number_of_bursts               OK       field in base class                  not defined: NXsource/number_of_bursts                                                     \n/entry/instrument/source/probe                          OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/probe                          OK       field in base class                  defined: NXsource/probe                                                                    \n/entry/instrument/source/top_up                         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/top_up                         OK       field in base class                  defined: NXsource/top_up                                                                   \n/entry/instrument/source/type                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source/type                           OK       field in base class                  defined: NXsource/type                                                                     \n/entry/instrument/source_pump                           TODO     NeXus base class                     NXsource: more validations needed                                                          \n/entry/instrument/source_pump                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump                           OK       group in base class                  not defined: NXinstrument/source_pump                                                      \n/entry/instrument/source_pump                           OK       known NXDL                           NXsource: recognized NXDL specification                                                    \n/entry/instrument/source_pump                           OK       NeXus base class                     NXsource: known NeXus base class                                                           \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/bunch_distance                                        \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/bunch_length                                          \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/frequency                                             \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/mode                                                  \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/name                                                  \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/number_of_bunches                                     \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/probe                                                 \n/entry/instrument/source_pump                           OK       NXDL field in data file              found: /entry/instrument/source_pump/type                                                  \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/anode_material                                    \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/current                                           \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/depends_on                                        \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/distance                                          \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/emission_current                                  \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/emittance_x                                       \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/emittance_y                                       \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/energy                                            \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/filament_current                                  \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/flux                                              \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/gas_pressure                                      \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/last_fill                                         \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/peak_power                                        \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/period                                            \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/power                                             \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/previous_source                                   \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/pulse_energy                                      \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/pulse_width                                       \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/sigma_x                                           \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/sigma_y                                           \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/target_material                                   \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/top_up                                            \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/voltage                                           \n/entry/instrument/source_pump                           OPTIONAL NXDL field in data file              not found: /entry/instrument/source_pump/wavelength                                        \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/aperture                                      \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/bunch_pattern                                 \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/deflector                                     \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/distribution                                  \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/fabrication                                   \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/geometry                                      \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/lens_em                                       \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/notes                                         \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/off_geometry                                  \n/entry/instrument/source_pump                           OPTIONAL NXDL group in data file              not found:  in /entry/instrument/source_pump/pulse_shape                                   \n/entry/instrument/source_pump@NX_class                  OK       validItemName                        pattern: NX.+                                                                              \n/entry/instrument/source_pump@NX_class                  OK       attribute value                      recognized NXDL base class: NXsource                                                       \n/entry/instrument/source_pump@NX_class                  OK       known attribute                      known: NXsource@NX_class                                                                   \n/entry/instrument/source_pump/bunch_distance            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/bunch_distance            OK       field in base class                  defined: NXsource/bunch_distance                                                           \n/entry/instrument/source_pump/bunch_distance@units      TODO     attribute value                      implement                                                                                  \n/entry/instrument/source_pump/bunch_distance@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/bunch_length              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/bunch_length              OK       field in base class                  defined: NXsource/bunch_length                                                             \n/entry/instrument/source_pump/bunch_length@units        TODO     attribute value                      implement                                                                                  \n/entry/instrument/source_pump/bunch_length@units        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/burst_distance            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/burst_distance            OK       field in base class                  not defined: NXsource/burst_distance                                                       \n/entry/instrument/source_pump/burst_distance@units      TODO     attribute value                      implement                                                                                  \n/entry/instrument/source_pump/burst_distance@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/burst_length              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/burst_length              OK       field in base class                  not defined: NXsource/burst_length                                                         \n/entry/instrument/source_pump/burst_length@units        TODO     attribute value                      implement                                                                                  \n/entry/instrument/source_pump/burst_length@units        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/frequency                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/frequency                 OK       field in base class                  defined: NXsource/frequency                                                                \n/entry/instrument/source_pump/frequency@units           TODO     attribute value                      implement                                                                                  \n/entry/instrument/source_pump/frequency@units           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/mode                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/mode                      OK       field in base class                  defined: NXsource/mode                                                                     \n/entry/instrument/source_pump/name                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/name                      OK       field in base class                  defined: NXsource/name                                                                     \n/entry/instrument/source_pump/number_of_bunches         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/number_of_bunches         OK       field in base class                  defined: NXsource/number_of_bunches                                                        \n/entry/instrument/source_pump/number_of_bursts          OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/number_of_bursts          OK       field in base class                  not defined: NXsource/number_of_bursts                                                     \n/entry/instrument/source_pump/probe                     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/probe                     OK       field in base class                  defined: NXsource/probe                                                                    \n/entry/instrument/source_pump/rms_jitter                OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/rms_jitter                OK       field in base class                  not defined: NXsource/rms_jitter                                                           \n/entry/instrument/source_pump/rms_jitter@units          TODO     attribute value                      implement                                                                                  \n/entry/instrument/source_pump/rms_jitter@units          OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/type                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/source_pump/type                      OK       field in base class                  defined: NXsource/type                                                                     \n/entry/instrument/spatial_resolution                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/spatial_resolution                    OK       field in base class                  not defined: NXinstrument/spatial_resolution                                               \n/entry/instrument/spatial_resolution@units              TODO     attribute value                      implement                                                                                  \n/entry/instrument/spatial_resolution@units              OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/temporal_resolution                   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/instrument/temporal_resolution                   OK       field in base class                  not defined: NXinstrument/temporal_resolution                                              \n/entry/instrument/temporal_resolution@units             TODO     attribute value                      implement                                                                                  \n/entry/instrument/temporal_resolution@units             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/run_cycle                                        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/run_cycle                                        OK       field in base class                  defined: NXentry/run_cycle                                                                 \n/entry/sample                                           TODO     NeXus base class                     NXsample: more validations needed                                                          \n/entry/sample                                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample                                           OK       group in base class                  defined: NXentry/sample                                                                    \n/entry/sample                                           OK       known NXDL                           NXsample: recognized NXDL specification                                                    \n/entry/sample                                           OK       NeXus base class                     NXsample: known NeXus base class                                                           \n/entry/sample                                           OK       NXDL field in data file              found: /entry/sample/name                                                                  \n/entry/sample                                           OK       NXDL field in data file              found: /entry/sample/pressure                                                              \n/entry/sample                                           OK       NXDL field in data file              found: /entry/sample/temperature                                                           \n/entry/sample                                           OK       NXDL field in data file              found: /entry/sample/thickness                                                             \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/changer_position                                                  \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/chemical_formula                                                  \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/component                                                         \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/concentration                                                     \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/density                                                           \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/description                                                       \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/distance                                                          \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/electric_field                                                    \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/external_DAC                                                      \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/magnetic_field1                                                   \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/mass                                                              \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/orientation_matrix                                                \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/path_length                                                       \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/path_length_window                                                \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/physical_form                                                     \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/point_group                                                       \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/preparation_date                                                  \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/relative_molecular_mass                                           \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/rotation_angle                                                    \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/sample_component1                                                 \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/sample_orientation                                                \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/scattering_length_density                                         \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/short_title                                                       \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/situation                                                         \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/space_group                                                       \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/stress_field                                                      \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/type                                                              \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/ub_matrix                                                         \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/unit_cell                                                         \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/unit_cell_abc                                                     \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/unit_cell_alphabetagamma                                          \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/unit_cell_class                                                   \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/unit_cell_volume                                                  \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/volume_fraction                                                   \n/entry/sample                                           OPTIONAL NXDL field in data file              not found: /entry/sample/x_translation                                                     \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/beam                                                          \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/environment                                                   \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/external_ADC                                                  \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/geometry                                                      \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/history                                                       \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/magnetic_field                                                \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/magnetic_field_env                                            \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/magnetic_field_log                                            \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/off_geometry                                                  \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/positioner                                                    \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/sample_component                                              \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/temperature_env                                               \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/temperature_log                                               \n/entry/sample                                           OPTIONAL NXDL group in data file              not found:  in /entry/sample/transmission                                                  \n/entry/sample@NX_class                                  OK       validItemName                        pattern: NX.+                                                                              \n/entry/sample@NX_class                                  OK       attribute value                      recognized NXDL base class: NXsample                                                       \n/entry/sample@NX_class                                  OK       known attribute                      known: NXsample@NX_class                                                                   \n/entry/sample/bias                                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/bias                                      OK       field in base class                  not defined: NXsample/bias                                                                 \n/entry/sample/bias@target                               OK       attribute value                      found: @target=/entry/instrument/manipulator/sample_bias                                   \n/entry/sample/bias@units                                TODO     attribute value                      implement                                                                                  \n/entry/sample/chem_id_cas                               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/chem_id_cas                               OK       field in base class                  not defined: NXsample/chem_id_cas                                                          \n/entry/sample/chemical_name                             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/chemical_name                             OK       field in base class                  not defined: NXsample/chemical_name                                                        \n/entry/sample/growth_method                             OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/growth_method                             OK       field in base class                  not defined: NXsample/growth_method                                                        \n/entry/sample/layer                                     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/layer                                     OK       field in base class                  not defined: NXsample/layer                                                                \n/entry/sample/name                                      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/name                                      OK       field in base class                  defined: NXsample/name                                                                     \n/entry/sample/preparation_method                        OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/preparation_method                        OK       field in base class                  not defined: NXsample/preparation_method                                                   \n/entry/sample/pressure                                  OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/pressure                                  OK       field in base class                  defined: NXsample/pressure                                                                 \n/entry/sample/pressure@units                            TODO     attribute value                      implement                                                                                  \n/entry/sample/pressure@units                            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/purity                                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/purity                                    OK       field in base class                  not defined: NXsample/purity                                                               \n/entry/sample/state                                     OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/state                                     OK       field in base class                  not defined: NXsample/state                                                                \n/entry/sample/surface_orientation                       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/surface_orientation                       OK       field in base class                  not defined: NXsample/surface_orientation                                                  \n/entry/sample/temperature                               OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/temperature                               OK       field in base class                  defined: NXsample/temperature                                                              \n/entry/sample/temperature@target                        OK       attribute value                      found: @target=/entry/instrument/manipulator/sample_temperature                            \n/entry/sample/temperature@units                         TODO     attribute value                      implement                                                                                  \n/entry/sample/thickness                                 OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/thickness                                 OK       field in base class                  defined: NXsample/thickness                                                                \n/entry/sample/thickness@units                           TODO     attribute value                      implement                                                                                  \n/entry/sample/thickness@units                           OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/vendor                                    OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/sample/vendor                                    OK       field in base class                  not defined: NXsample/vendor                                                               \n/entry/start_time                                       OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/start_time                                       OK       field in base class                  defined: NXentry/start_time                                                                \n/entry/start_time                                       OK       NXDL field                           NXarpes:start_time found                                                                   \n/entry/title                                            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*                                                           \n/entry/title                                            OK       field in base class                  defined: NXentry/title                                                                     \n/entry/title                                            OK       NXDL field                           NXarpes:title found                                                                        \n======================================================= ======== ==================================== ===========================================================================================\n\n\nsummary statistics\n======== ===== =========================================================== =========\nstatus   count description                                                 (value)  \n======== ===== =========================================================== =========\nOK       472   meets NeXus specification                                   100      \nNOTE     0     does not meet NeXus specification, but acceptable           75       \nWARN     0     does not meet NeXus specification, not generally acceptable 25       \nERROR    0     violates NeXus specification                                -10000000\nTODO     88    validation not implemented yet                              0        \nUNUSED   0     optional NeXus item not used in data file                   0        \nCOMMENT  0     comment from the punx source code                           0        \nOPTIONAL 326   allowed by NeXus specification, not identified              99       \n        --                                                                         \nTOTAL    886                                                                        \n======== ===== =========================================================== =========\n\n&lt;finding&gt;=99.591479 of 798 items reviewed\nNeXus definitions version: main\n</code></pre> <p>The output tables \"findings\" and \"summary statistics\" can be used to find error present in the NeXus file. As you can see, while the output is verbose and comprehensive, <code>punx</code> does not actually pick up on the issues that the <code>pynxtools</code> validator finds.</p> <p>You can just pass one of the logging levels to the <code>--report</code> flag to select for a subset of the report:</p> SourceResult <pre><code>punx validate --report ERROR src/pynxtools/data/201805_WSe2_arpes.nxs\n</code></pre> <pre><code>!!! WARNING: this program is not ready for distribution.\n\ndata file: src/pynxtools/data/201805_WSe2_arpes.nxs\nNeXus definitions: main, dated 2025-08-14 04:24:42, sha=7ac3f9c2376bbe8c9c9c942652f0c9c3bfb065fe\n\nfindings\n======= ====== ==== ========\naddress status test comments\n======= ====== ==== ========\n======= ====== ==== ========\n\n\nsummary statistics\n======== ===== =========================================================== =========\nstatus   count description                                                 (value)\n======== ===== =========================================================== =========\nOK       472   meets NeXus specification                                   100\nNOTE     0     does not meet NeXus specification, but acceptable           75\nWARN     0     does not meet NeXus specification, not generally acceptable 25\nERROR    0     violates NeXus specification                                -10000000\nTODO     88    validation not implemented yet                              0\nUNUSED   0     optional NeXus item not used in data file                   0\nCOMMENT  0     comment from the punx source code                           0\nOPTIONAL 326   allowed by NeXus specification, not identified              99\n        --\nTOTAL    886\n======== ===== =========================================================== =========\n\n&lt;finding&gt;=99.591479 of 798 items reviewed\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#demo-of-punx","title":"Demo of <code>punx</code>","text":"<p>You can also invoke the help call for the validation API:</p> SourceResult <pre><code>punx validate --help\n</code></pre> <pre><code>!!! WARNING: this program is not ready for distribution.\n\nusage: punx validate [-h] [-f FILE_SET_NAME] [--report REPORT] infile\n\npositional arguments:\n  infile                HDF5 or NXDL file name\n\noptions:\n  -h, --help            show this help message and exit\n  -f FILE_SET_NAME, --file_set_name FILE_SET_NAME\n                        NeXus NXDL file set (definitions) name for validation -- default=main\n  --report REPORT       select which validation findings to report, choices:\n                        COMMENT,ERROR,NOTE,OK,OPTIONAL,TODO,UNUSED,WARN (separate with comma if more\n                        than one, do not use white space)\n</code></pre> <p>You can get a demonstration of <code>punx</code> by running:</p> SourceResult <pre><code>punx demo\n</code></pre> <pre><code>console&gt; punx validate C:\\Users\\USER\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\punx\\data\\writer_1_3.hdf5\ndata file: C:\\Users\\USER\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\punx\\data\\writer_1_3.hdf5\nNeXus definitions: main, dated 2024-01-02 03:04:05, sha=xxxx21fxcef02xfbaa6x04e182e3d67dace7ef1b\n\nfindings\n============================ ======== ==================================== ==========================================================\naddress                      status   test                                 comments\n============================ ======== ==================================== ==========================================================\n/                            TODO     NeXus base class                     NXroot: more validations needed\n/                            OK       known NXDL                           NXroot: recognized NXDL specification\n/                            OK       NeXus base class                     NXroot: known NeXus base class\n/                            OK       NeXus default plot                   found by v3: /Scan/data/counts\n/                            OPTIONAL NXDL group in data file              not found:  in //entry\n/Scan                        TODO     NeXus base class                     NXentry: more validations needed\n/Scan                        OK       group in base class                  not defined: NXroot/Scan\n/Scan                        OK       known NXDL                           NXentry: recognized NXDL specification\n/Scan                        OK       NeXus base class                     NXentry: known NeXus base class\n/Scan                        OK       NXDL group in data file              found:  in /Scan/data\n/Scan                        NOTE     validItemName                        relaxed pattern: [a-zA-Z0-9_]([a-zA-Z0-9_.]*[a-zA-Z0-9_])?\n/Scan                        OPTIONAL NXDL field in data file              not found: /Scan/collection_description\n/Scan                        OPTIONAL NXDL field in data file              not found: /Scan/collection_identifier\n/Scan                        OPTIONAL NXDL field in data file              not found: /Scan/collection_time\n/Scan                        OPTIONAL NXDL field in data file              not found: /Scan/definition\n/Scan                        OPTIONAL NXDL field in data file              not found: /Scan/definition_local\n...\n...\n...\n/Scan/data@signal            OK       known attribute                      known: NXdata@signal\n/Scan/data@signal            OK       value of @signal                     found: /Scan/data/counts\n/Scan/data@signal            OK       NeXus default plot v3, NXdata@signal correct default plot setup in /NXentry/NXdata\n/Scan/data@two_theta_indices TODO     attribute value                      implement\n/Scan/data@two_theta_indices OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*\n/Scan/data@two_theta_indices OK       known attribute                      unknown: NXdata@two_theta_indices\n/Scan/data/counts            OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*\n/Scan/data/counts            OK       field in base class                  not defined: NXdata/counts\n/Scan/data/counts@units      TODO     attribute value                      implement\n/Scan/data/counts@units      OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*\n/Scan/data/two_theta         OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*\n/Scan/data/two_theta         OK       field in base class                  not defined: NXdata/two_theta\n/Scan/data/two_theta@units   TODO     attribute value                      implement\n/Scan/data/two_theta@units   OK       validItemName                        strict pattern: [a-z_][a-z0-9_]*\n============================ ======== ==================================== ==========================================================\n\n\nsummary statistics\n======== ===== =========================================================== =========\nstatus   count description                                                 (value)\n======== ===== =========================================================== =========\nOK       35    meets NeXus specification                                   100\nNOTE     1     does not meet NeXus specification, but acceptable           75\nWARN     0     does not meet NeXus specification, not generally acceptable 25\nERROR    0     violates NeXus specification                                -10000000\nTODO     7     validation not implemented yet                              0\nUNUSED   0     optional NeXus item not used in data file                   0\nCOMMENT  0     comment from the punx source code                           0\nOPTIONAL 40    allowed by NeXus specification, not identified              99\n        --\nTOTAL    83\n======== ===== =========================================================== =========\n\n&lt;finding&gt;=99.144737 of 76 items reviewed\nNeXus definitions version: main\n\nconsole&gt; punx tree C:\\Users\\rh83hixu\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\punx\\data\\writer_1_3.hdf5\nC:\\Users\\rh83hixu\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\punx\\data\\writer_1_3.hdf5 : NeXus data file\n  Scan:NXentry\n    @NX_class = \"NXentry\"\n    data:NXdata\n      @NX_class = \"NXdata\"\n      @axes = \"two_theta\"\n      @signal = \"counts\"\n      @two_theta_indices = [0]\n      counts:NX_INT32[31] = [1037, 1318, 1704, '...', 1321]\n        @units = \"counts\"\n      two_theta:NX_FLOAT64[31] = [17.92608, 17.92591, 17.92575, '...', 17.92108]\n        @units = \"degrees\"\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#further-notes","title":"Further notes","text":"<ol> <li>More installation details</li> <li>Other punx commands</li> <li>Github project</li> </ol>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#nexpynxvalidate-a-python-api-for-validating-nexus-file","title":"<code>nexpy/nxvalidate</code>: A python API for validating NeXus file","text":"<p>This is a validation tool developed by the <code>NeXpy</code> project.</p> <ul> <li>GitHub repository</li> </ul>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#installation_2","title":"Installation","text":"<p>The package can be installed via any Python package manager:</p> uvpip <pre><code>uv pip install nxvalidate\n</code></pre> <pre><code>pip install nxvalidate\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#usage_2","title":"Usage","text":"<p>After installation, you can invoke the help call from the command line:</p> SourceResult <pre><code>nxinspect --help\n</code></pre> <pre><code>usage: nxinspect [-h] [-f FILENAME] [-p PATH] [-a [APPLICATION]] [-b BASECLASS] [-d DEFINITIONS]\n             [-i] [-w] [-e] [-v]\n\nInspects and validates NeXus files.\n\noptions:\n  -h, --help            show this help message and exit\n  -f FILENAME, --filename FILENAME\n                        name of the NeXus file to be validated\n  -p PATH, --path PATH  path to group to be validated in the NeXus file\n  -a [APPLICATION], --application [APPLICATION]\n                        validate the NeXus file against its application definition\n  -b BASECLASS, --baseclass BASECLASS\n                        name of the base class to be listed\n  -d DEFINITIONS, --definitions DEFINITIONS\n                        path to the directory containing NeXus definitions\n  -i, --info            output info messages in addition to warnings and errors\n  -w, --warning         output warning and error messages (default)\n  -e, --error           output errors\n  -v, --version         show program's version number and exit\n</code></pre> <p>NeXus definitions in <code>nxvalidate</code></p> <p>The <code>nxvalidate</code> package comes with a pre-defined set of NeXus definitions by itself. As of July 2025, only the official definitions from the NIAC repository are available (from release v2024.02).</p> <p>If you want to run the validation against a different set of NeXus definitions, you can specify their path using the <code>-d</code> flag in the validation.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#validation-in-nxvalidate","title":"Validation in <code>nxvalidate</code>","text":"<p>You can start the validation by running</p> SourceResult <pre><code>nxinspect -f 201805_WSe2_arpes.nxs\n</code></pre> <pre><code>NXValidate\n----------\nFilename: /home/user/fairmat/nomad-distro-dev/packages/pynxtools/src/pynxtools/data/201805_\nPath: /\nDefinitions: /home/user/fairmat/nomad-distro-dev/.venv/lib/python3.12/site-packages/nxvalid\nNXroot: /\n    \"@nexusformat_version\" is not defined as an attribute in NXroot\n    NXentry: /entry\n        Field: /entry/collection_time\n            The field value is not a valid NX_FLOAT\n        NXinstrument: /entry/instrument\n            NXdetector: /entry/instrument/analyser\n                Field: /entry/instrument/analyser/acquisition_mode\n                    The field value is not a member of the enumerated list\n                Field: /entry/instrument/analyser/amplifier_type\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/angles\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/contrast_aperture\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/data\n                    The field has rank 3, should be 4\n                    The field rank is 3, but the dimension index of \"tof\" = 4\n                Field: /entry/instrument/analyser/delays\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/detector_type\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/dispersion_scheme\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/energies\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/entrance_slit_setting\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/entrance_slit_shape\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/entrance_slit_size\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/extractor_voltage\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/field_aperture_x\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/field_aperture_y\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/lens_mode\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/magnification\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/pass_energy\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/projection\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/region_origin\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/region_size\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/sensor_count\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/sensor_size\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/time_per_channel\n                    This field is not defined in NXdetector\n                Field: /entry/instrument/analyser/working_distance\n                    This field is not defined in NXdetector\n            NXbeam: /entry/instrument/beam_probe_0\n                Field: /entry/instrument/beam_probe_0/distance\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/beam_probe_0/photon_energy\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_probe_0/polarization_angle\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_probe_0/polarization_ellipticity\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_probe_0/pulse_duration\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_probe_0/size_x\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_probe_0/size_y\n                    This field is not defined in NXbeam\n            NXbeam: /entry/instrument/beam_pump_0\n                Field: /entry/instrument/beam_pump_0/average_power\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/center_wavelength\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/distance\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/beam_pump_0/fluence\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/photon_energy\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/polarization_angle\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/polarization_ellipticity\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/pulse_duration\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/pulse_energy\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/size_x\n                    This field is not defined in NXbeam\n                Field: /entry/instrument/beam_pump_0/size_y\n                    This field is not defined in NXbeam\n            Field: /entry/instrument/energy_resolution\n                This field is not defined in NXinstrument\n            NXpositioner: /entry/instrument/manipulator\n                Field: /entry/instrument/manipulator/pos_x1\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/pos_x2\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/pos_y\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/pos_z1\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/pos_z2\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/pos_z3\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/sample_bias\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/sample_temperature\n                    This field is not defined in NXpositioner\n                Field: /entry/instrument/manipulator/type\n                    This field is not defined in NXpositioner\n            NXmonochromator: /entry/instrument/monochromator\n                Field: /entry/instrument/monochromator/energy_error\n                    This field is now deprecated. see https://github.com/nexus\n                NXslit: /entry/instrument/monochromator/slit\n                    NXslit is an invalid class in NXmonochromator\n            NXsource: /entry/instrument/source\n                Field: /entry/instrument/source/bunch_distance\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source/bunch_length\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source/burst_distance\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source/burst_length\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source/burst_number_end\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source/burst_number_start\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source/current\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source/energy\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source/frequency\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source/mode\n                    The field value is not a member of the enumerated list\n                Field: /entry/instrument/source/number_of_bursts\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source/type\n                    The field value is not a member of the enumerated list\n            NXsource: /entry/instrument/source_pump\n                Field: /entry/instrument/source_pump/bunch_distance\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source_pump/bunch_length\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source_pump/burst_distance\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source_pump/burst_length\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source_pump/frequency\n                    The field value is not a valid NX_FLOAT\n                Field: /entry/instrument/source_pump/mode\n                    The field value is not a member of the enumerated list\n                Field: /entry/instrument/source_pump/number_of_bursts\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source_pump/probe\n                    The field value is not a member of the enumerated list\n                Field: /entry/instrument/source_pump/rms_jitter\n                    This field is not defined in NXsource\n                Field: /entry/instrument/source_pump/type\n                    The field value is not a member of the enumerated list\n            Field: /entry/instrument/spatial_resolution\n                This field is not defined in NXinstrument\n            Field: /entry/instrument/temporal_resolution\n                This field is not defined in NXinstrument\n        NXsample: /entry/sample\n            Link: /entry/sample/bias\n                This field is not defined in NXsample\n            Field: /entry/sample/chem_id_cas\n                This field is not defined in NXsample\n            Field: /entry/sample/chemical_name\n                This field is not defined in NXsample\n            Field: /entry/sample/growth_method\n                This field is not defined in NXsample\n            Field: /entry/sample/layer\n                This field is not defined in NXsample\n            Field: /entry/sample/preparation_method\n                This field is not defined in NXsample\n            Field: /entry/sample/pressure\n                The field rank is 0, but the dimension index of \"n_pField\" = 1\n            Field: /entry/sample/purity\n                This field is not defined in NXsample\n            Field: /entry/sample/state\n                This field is not defined in NXsample\n            Field: /entry/sample/surface_orientation\n                This field is not defined in NXsample\n            Link: /entry/sample/temperature\n                The field value is not a valid NX_FLOAT\n            Field: /entry/sample/vendor\n                This field is not defined in NXsample\n\nTotal number of warnings: 87\nTotal number of errors: 7\n</code></pre> <p>Again, the output log is rather verbose. <code>nxvalidate</code> correctly picks up on undocumented concepts (\"this field is not defined in ...\") as well as values not matching enumerated items. Additionally, the wrong use of dimensions is documented.</p> <p><code>nxvalidate</code> also comes with a selection between a validator for application definitions and one for base classes. By default, the validator checks against concepts defined in the given application definitions and also against those in the used base classes. By using the <code>-a</code> flag, the file is only validated against concepts defined directly in the application definition.</p> SourceResult <pre><code>nxinspect -a -f 201805_WSe2_arpes.nxs\n</code></pre> <pre><code>nxinspect -f src/pynxtools/data/201805_WSe2_arpes.nxs -a\n\nNXValidate\n----------\nFilename: /home/user/fairmat/nomad-distro-dev/packages/pynxtools/src/pynxtools/data/201805_\nEntry: /entry\nApplication Definition: NXarpes\nNXDL File: /home/user/fairmat/nomad-distro-dev/.venv/lib/python3.12/site-packages/nxvalidat\n        Group: NXsource\n        Field: /entry/instrument/source_pump/probe\n            The field value is not a member of the enumerated list\n    Group: analyser: NXdetector\n        Field: /entry/instrument/analyser/entrance_slit_setting\n            Units of NX_ANY not specified\n        Field: /entry/instrument/analyser/sensor_size\n            The field has size (2,), should be 2\n        Field: /entry/instrument/analyser/region_origin\n            The field has size (2,), should be 2\n        Field: /entry/instrument/analyser/region_size\n            The field has size (2,), should be 2\n\nTotal number of warnings: 4\nTotal number of errors: 1\n</code></pre> <p>If you want to see the contents of a given base class, the <code>-b</code> option can be used:</p> SourceResult <pre><code>nxinspect -f src/pynxtools/data/201805_WSe2_arpes.nxs -b NXsample\n</code></pre> <pre><code>NXValidate\n----------\nValid components of the NXsample base class\nNXDL File: /home/user/fairmat/nomad-distro-dev/.venv/lib/python3.12/site-packages/nxvalidat\nAllowed Attributes\n    @default\nAllowed Groups\n    geometry: {'@type': 'NXgeometry', '@deprecated': 'Use the field `depends_on` and :ref:`NXtr\n    NXbeam: {}\n    NXsample_component: {}\n    transmission: {'@type': 'NXdata'}\n    temperature_log: {'@type': 'NXlog', '@deprecated': 'use ``temperature``, see: https://githu\n    temperature_env: {'@type': 'NXenvironment'}\n    magnetic_field: {'@type': 'NXlog'}\n    magnetic_field_log: {'@type': 'NXlog', '@deprecated': 'use ``magnetic_field``, see: https:/\n    magnetic_field_env: {'@type': 'NXenvironment'}\n    external_ADC: {'@type': 'NXlog'}\n    NXpositioner: {}\n    NXoff_geometry: {'@minOccurs': '0'}\n    NXtransformations: {}\n    NXcollection: {}\n    NXdata: {}\n    NXgeometry: {}\n    NXlog: {}\n    NXnote: {}\n    NXparameters: {}\n    GROUPNAME_log[NXlog]: {'@nameType': 'partial'}\nAllowed Fields\n    name: {}\n    chemical_formula: {}\n    temperature: {'@type': 'NX_FLOAT', '@units': 'NX_TEMPERATURE'}\n        dimensions: {'rank': 'anyRank', 'dim': {1: 'n_Temp'}}\n    electric_field: {'@type': 'NX_FLOAT', '@units': 'NX_VOLTAGE'}\n        dimensions: {'dim': {1: 'n_eField'}}\n        attribute: {'direction': {'enumeration': ['x', 'y', 'z']}}\n    magnetic_field: {'@type': 'NX_FLOAT', '@units': 'NX_ANY'}\n        dimensions: {'dim': {1: 'n_mField'}}\n        attribute: {'direction': {'enumeration': ['x', 'y', 'z']}}\n    stress_field: {'@type': 'NX_FLOAT', '@units': 'NX_ANY'}\n        dimensions: {'dim': {1: 'n_sField'}}\n        attribute: {'direction': {'enumeration': ['x', 'y', 'z']}}\n    pressure: {'@type': 'NX_FLOAT', '@units': 'NX_PRESSURE'}\n        dimensions: {'dim': {1: 'n_pField'}}\n    changer_position: {'@type': 'NX_INT', '@units': 'NX_UNITLESS'}\n    unit_cell_abc: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n        dimensions: {'dim': {1: '3'}}\n    unit_cell_alphabetagamma: {'@type': 'NX_FLOAT', '@units': 'NX_ANGLE'}\n        dimensions: {'dim': {1: '3'}}\n    unit_cell: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n        dimensions: {'rank': '2', 'dim': {1: 'n_comp', 2: '6'}}\n    unit_cell_volume: {'@type': 'NX_FLOAT', '@units': 'NX_VOLUME'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    sample_orientation: {'@type': 'NX_FLOAT', '@units': 'NX_ANGLE'}\n        dimensions: {'rank': '1', 'dim': {1: '3'}}\n    orientation_matrix: {'@type': 'NX_FLOAT'}\n        dimensions: {'rank': '3', 'dim': {1: 'n_comp', 2: '3', 3: '3'}}\n    ub_matrix: {'@type': 'NX_FLOAT'}\n        dimensions: {'rank': '3', 'dim': {1: 'n_comp', 2: '3', 3: '3'}}\n    mass: {'@type': 'NX_FLOAT', '@units': 'NX_MASS'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    density: {'@type': 'NX_FLOAT', '@units': 'NX_MASS_DENSITY'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    relative_molecular_mass: {'@type': 'NX_FLOAT', '@units': 'NX_MASS'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    type: {}\n        enumeration: ['sample', 'sample+can', 'can', 'sample+buffer', 'buffer', 'calibration sa\n    situation: {}\n        enumeration: ['air', 'vacuum', 'inert atmosphere', 'oxidising atmosphere', 'reducing at\n    description: {}\n    preparation_date: {'@type': 'NX_DATE_TIME'}\n    component: {}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    sample_component: {}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n        enumeration: ['sample', 'can', 'atmosphere', 'kit']\n    concentration: {'@type': 'NX_FLOAT', '@units': 'NX_MASS_DENSITY'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    volume_fraction: {'@type': 'NX_FLOAT'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    scattering_length_density: {'@type': 'NX_FLOAT', '@units': 'NX_SCATTERING_LENGTH_DENSITY'}\n        dimensions: {'rank': '1', 'dim': {1: 'n_comp'}}\n    unit_cell_class: {}\n        enumeration: ['triclinic', 'monoclinic', 'orthorhombic', 'tetragonal', 'rhombohedral',\n    space_group: {}\n        dimensions: {'dim': {1: 'n_comp'}}\n    point_group: {}\n        dimensions: {'dim': {1: 'n_comp'}}\n    path_length: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n    path_length_window: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n    thickness: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n    external_DAC: {'@type': 'NX_FLOAT', '@units': 'NX_ANY'}\n    short_title: {}\n    rotation_angle: {'@type': 'NX_FLOAT', '@units': 'NX_ANGLE'}\n    x_translation: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n    distance: {'@type': 'NX_FLOAT', '@units': 'NX_LENGTH'}\n    depends_on: {'@type': 'NX_CHAR'}\n    FIELDNAME_set: {'@type': 'NX_NUMBER', '@nameType': 'partial'}\n    FIELDNAME_errors: {'@type': 'NX_NUMBER', '@nameType': 'partial'}\n    FIELDNAME_weights: {'@type': 'NX_NUMBER', '@nameType': 'partial'}\n    FIELDNAME_mask: {'@type': 'NX_BOOLEAN', '@nameType': 'partial'}\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files-other-tools.html#recommendations","title":"Recommendations","text":"<p>We strongly recommend to use the <code>validate_nexus</code> tool that is shipped with our <code>pynxtools</code> software, as it is likely to be the most complete and up-to-date solution around. However, if you want to use another tool to cross-check, the <code>nxvalidate</code> tool seems to be a good solution, as it picks up on all the issues that <code>validate_nexus</code> detects as well.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files.html","title":"Validation of NeXus files","text":"<p>This is a how-to guide for using different tools to validate NeXus files. If you want to learn more about how validation is done in <code>pynxtools</code>, please visit the explanation page.</p> <p>In this how-to guide, we will learn how to use <code>pynxtools</code> to validate existing NeXus files. As outlined in other parts of the documentation, <code>pynxtools</code> can act as a framework for creating FAIR NeXus-compliant files from experimental data.</p> <p>In order to validate NeXus data, <code>pynxtools</code> comes with its own set of validation tools:</p> <ul> <li> <p>As part of the dataconverter: During data conversion within <code>pynxtools</code>, before writing the HDF5 file, the data is first checked against the provided application definition.</p> </li> <li> <p><code>read_nexus</code>: CLI tool to validate existing NeXus/HDF5 files.</p> </li> <li> <p><code>validate_nexus</code>: Annotator and debugger CLI tool for NeXus/HDF5 files.</p> </li> </ul> <p>In this how-to, we will learn how to use the <code>validate_nexus</code> and <code>read_nexus</code> command line tools.</p> <p>Dataset</p> <p>You can download the dataset for following this how-to here:</p> <p>201805_WSe2_arpes.nxs</p> <p>This is an angular-resolved photoelectron spectroscopy (ARPES) dataset that is formatted according to the <code>NXarpes</code> application definition.</p> <p>Note that you will need to have <code>pynxtools</code> installed in a Python environment. Learn more about the installation procedure in the installation tutorial.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files.html#validate_nexus","title":"<code>validate_nexus</code>","text":"<p>After installation, you can invoke the help call of the <code>validate_nexus</code> tool from the command line:</p> <pre><code>validate_nexus --help\n</code></pre> <pre><code>Usage: validate_nexus [OPTIONS] FILE\n\n  Validates a NeXus HDF5 file.\n\n  FILE: The path to the NeXus file to validate.\n\nOptions:\n  --ignore-undocumented  Ignore all undocumented concepts during validation.\n  --help                 Show this message and exit.\n</code></pre> <p>To see the results on the test file, run:</p> <pre><code>validate_nexus --ignore-undocumented src/pynxtools/data/201805_WSe2_arpes.nxs\n</code></pre> <pre><code>WARNING: The unit '1/\u00c5' at /entry/instrument/analyser/angles/@units does not match with the unit category NX_ANGLE of 'angles'.\nWARNING: Reserved suffix '_end' was used in /entry/instrument/source/burst_number_end, but there is no associated field burst_number.\nWARNING: The value 'Burst' at /entry/instrument/source/mode does not match with the enumerated items from the open enumeration: ['Single Bunch', 'Multi Bunch']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: The value 'Free Electron Laser' at /entry/instrument/source/type does not match with the enumerated items from the open enumeration: ['Spallation Neutron Source', 'Pulsed Reactor Neutron Source', 'Reactor Neutron Source', 'Synchrotron X-ray Source', 'Pulsed Muon Source', 'Rotating Anode X-ray', 'Fixed Tube X-ray', 'UV Laser', 'Free-Electron Laser', 'Optical Laser', 'Ion Source', 'UV Plasma Source', 'Metal Jet X-ray', 'Laser', 'Dye Laser', 'Broadband Tunable Light Source', 'Halogen Lamp', 'LED', 'Mercury Cadmium Telluride Lamp', 'Deuterium Lamp', 'Xenon Lamp', 'Globar']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: The value 'Burst' at /entry/instrument/source_pump/mode does not match with the enumerated items from the open enumeration: ['Single Bunch', 'Multi Bunch']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: The value 'NIR' at /entry/instrument/source_pump/probe should be one of the following: ['x-ray'].\nWARNING: The value 'OPCPA' at /entry/instrument/source_pump/type does not match with the enumerated items from the open enumeration: ['Spallation Neutron Source', 'Pulsed Reactor Neutron Source', 'Reactor Neutron Source', 'Synchrotron X-ray Source', 'Pulsed Muon Source', 'Rotating Anode X-ray', 'Fixed Tube X-ray', 'UV Laser', 'Free-Electron Laser', 'Optical Laser', 'Ion Source', 'UV Plasma Source', 'Metal Jet X-ray', 'Laser', 'Dye Laser', 'Broadband Tunable Light Source', 'Halogen Lamp', 'LED', 'Mercury Cadmium Telluride Lamp', 'Deuterium Lamp', 'Xenon Lamp', 'Globar']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: Invalid: The entry `entry` in file `src/pynxtools/data/201805_WSe2_arpes.nxs` is NOT valid according to the `NXarpes` application definition.\n</code></pre> <p>As you can see, the test file has a number of issues that are picked up during validation:</p> <ul> <li>Some of the units do not match those specified for the NeXus concepts.</li> <li>Reserved suffixes are used without corresponding fields.</li> <li>The values of some fields do not match with those given in the enumeration in the NeXus application definition.</li> </ul> <p>Therefore, we consider the <code>NXentry</code> instance in this file invalid. If you were writing such files, this would be the starting point to make some changes in the file creation routine to make your NeXus file compliant with <code>NXarpes</code>.</p> <p>Note that here we are passing the <code>--ignore-undocumented</code> flag to the validation tool to ignore all additional content in the file which is not defined in the application definitions. We encourage you to test out the same call without the <code>--ignore-undocumented</code> flag to see the difference.</p> Show output including undocumented concepts <pre><code>validate_nexus src/pynxtools/data/201805_WSe2_arpes.nxs\n</code></pre> <pre><code>The unit /entry/data/data/@units = counts has no documentation.\nThe unit /entry/data/angles/@units = 1/\u00c5 has no documentation.\nThe unit /entry/data/energies/@units = eV has no documentation.\nThe unit /entry/data/delays/@units = fs has no documentation.\nWARNING: Field /entry/instrument/analyser/amplifier_type has no documentation.\nWARNING: The unit '1/\u00c5' at /entry/instrument/analyser/angles/@units does not match with the unit category NX_ANGLE of 'angles'.\nWARNING: Field /entry/instrument/analyser/contrast_aperture has no documentation.\nWARNING: Field /entry/instrument/analyser/delays has no documentation.\nWARNING: Field /entry/instrument/analyser/detector_type has no documentation.\nWARNING: Field /entry/instrument/analyser/dispersion_scheme has no documentation.\nWARNING: Field /entry/instrument/analyser/extractor_voltage has no documentation.\nWARNING: Field /entry/instrument/analyser/field_aperture_x has no documentation.\nWARNING: Field /entry/instrument/analyser/field_aperture_y has no documentation.\nWARNING: Field /entry/instrument/analyser/magnification has no documentation.\nWARNING: Field /entry/instrument/analyser/projection has no documentation.\nWARNING: Field /entry/instrument/analyser/sensor_count has no documentation.\nWARNING: Field /entry/instrument/analyser/working_distance has no documentation.\nWARNING: Field /entry/instrument/beam_probe_0/photon_energy has no documentation.\nWARNING: Field /entry/instrument/beam_probe_0/polarization_angle has no documentation.\nWARNING: Field /entry/instrument/beam_probe_0/polarization_ellipticity has no documentation.\nWARNING: Field /entry/instrument/beam_probe_0/size_x has no documentation.\nWARNING: Field /entry/instrument/beam_probe_0/size_y has no documentation.\nWARNING: Field /entry/instrument/beam_pump_0/center_wavelength has no documentation.\nWARNING: Field /entry/instrument/beam_pump_0/photon_energy has no documentation.\nWARNING: Field /entry/instrument/beam_pump_0/polarization_angle has no documentation.\nWARNING: Field /entry/instrument/beam_pump_0/polarization_ellipticity has no documentation.\nWARNING: Field /entry/instrument/beam_pump_0/size_x has no documentation.\nWARNING: Field /entry/instrument/beam_pump_0/size_y has no documentation.\nWARNING: Field /entry/instrument/energy_resolution has no documentation.\nWARNING: Field /entry/instrument/manipulator/pos_x1 has no documentation.\nWARNING: Field /entry/instrument/manipulator/pos_x2 has no documentation.\nWARNING: Field /entry/instrument/manipulator/pos_y has no documentation.\nWARNING: Field /entry/instrument/manipulator/pos_z1 has no documentation.\nWARNING: Field /entry/instrument/manipulator/pos_z2 has no documentation.\nWARNING: Field /entry/instrument/manipulator/pos_z3 has no documentation.\nWARNING: Field /entry/instrument/manipulator/sample_bias has no documentation.\nWARNING: Field /entry/instrument/manipulator/sample_temperature has no documentation.\nWARNING: Field /entry/instrument/manipulator/type has no documentation.\nWARNING: Field /entry/instrument/monochromator/slit has no documentation.\nWARNING: Field /entry/instrument/monochromator/slit/y_gap has no documentation.\nWARNING: Field /entry/instrument/source/burst_distance has no documentation.\nWARNING: Field /entry/instrument/source/burst_length has no documentation.\nWARNING: Field /entry/instrument/source/burst_number_end has no documentation.\nWARNING: Reserved suffix '_end' was used in /entry/instrument/source/burst_number_end, but there is no associated field burst_number.\nWARNING: Field /entry/instrument/source/burst_number_start has no documentation.\nWARNING: The value 'Burst' at /entry/instrument/source/mode does not match with the enumerated items from the open enumeration: ['Single Bunch', 'Multi Bunch']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: Field /entry/instrument/source/number_of_bursts has no documentation.\nWARNING: The value 'Free Electron Laser' at /entry/instrument/source/type does not match with the enumerated items from the open enumeration: ['Spallation Neutron Source', 'Pulsed Reactor Neutron Source', 'Reactor Neutron Source', 'Synchrotron X-ray Source', 'Pulsed Muon Source', 'Rotating Anode X-ray', 'Fixed Tube X-ray', 'UV Laser', 'Free-Electron Laser', 'Optical Laser', 'Ion Source', 'UV Plasma Source', 'Metal Jet X-ray', 'Laser', 'Dye Laser', 'Broadband Tunable Light Source', 'Halogen Lamp', 'LED', 'Mercury Cadmium Telluride Lamp', 'Deuterium Lamp', 'Xenon Lamp', 'Globar']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: Field /entry/instrument/source_pump/burst_distance has no documentation.\nWARNING: Field /entry/instrument/source_pump/burst_length has no documentation.\nWARNING: The value 'Burst' at /entry/instrument/source_pump/mode does not match with the enumerated items from the open enumeration: ['Single Bunch', 'Multi Bunch']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: Field /entry/instrument/source_pump/number_of_bursts has no documentation.\nWARNING: The value 'NIR' at /entry/instrument/source_pump/probe should be one of the following: ['x-ray'].\nWARNING: Field /entry/instrument/source_pump/rms_jitter has no documentation.\nWARNING: The value 'OPCPA' at /entry/instrument/source_pump/type does not match with the enumerated items from the open enumeration: ['Spallation Neutron Source', 'Pulsed Reactor Neutron Source', 'Reactor Neutron Source', 'Synchrotron X-ray Source', 'Pulsed Muon Source', 'Rotating Anode X-ray', 'Fixed Tube X-ray', 'UV Laser', 'Free-Electron Laser', 'Optical Laser', 'Ion Source', 'UV Plasma Source', 'Metal Jet X-ray', 'Laser', 'Dye Laser', 'Broadband Tunable Light Source', 'Halogen Lamp', 'LED', 'Mercury Cadmium Telluride Lamp', 'Deuterium Lamp', 'Xenon Lamp', 'Globar']. When a different value is used, a boolean 'custom=True' attribute must be added.\nWARNING: Field /entry/instrument/spatial_resolution has no documentation.\nWARNING: Field /entry/instrument/temporal_resolution has no documentation.\nWARNING: Field /entry/sample/bias has no documentation.\nWARNING: Field /entry/sample/chem_id_cas has no documentation.\nWARNING: Field /entry/sample/chemical_name has no documentation.\nWARNING: Field /entry/sample/growth_method has no documentation.\nWARNING: Field /entry/sample/layer has no documentation.\nWARNING: Field /entry/sample/preparation_method has no documentation.\nWARNING: Field /entry/sample/purity has no documentation.\nWARNING: Field /entry/sample/state has no documentation.\nWARNING: Field /entry/sample/surface_orientation has no documentation.\nWARNING: Field /entry/sample/vendor has no documentation.\nWARNING: Invalid: The entry `entry` in file `src/pynxtools/data/201805_WSe2_arpes.nxs` is NOT valid according to the `NXarpes` application definition.\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files.html#read_nexus","title":"<code>read_nexus</code>","text":"<p>While <code>validate_nexus</code> is used as a tool for validating a NeXus file, <code>read_nexus</code> is an annotator tools. It outputs a debug log for a given NeXus file by annotating the data and metadata entries with the definitions from the respective NeXus base classes and application definitions to which the file refers to. This can be helpful to extract documentation and understand the concept defined in the NeXus application definition.</p> <p>You can invoke the help call of the <code>read_nexus</code> tool from the command line:</p> <pre><code>read_nexus --help\n</code></pre> <pre><code>Usage: read_nexus [OPTIONS]\n\n  Functionality to extract documentation and concept definition information\n  about the individual parts of a NeXus/HDF5 file.\n\nOptions:\n  -f, --nexus-file TEXT     NeXus file with extension .nxs.\n  -d, --documentation TEXT  Definition path in nexus output (.nxs) file.\n                            Returns debug log relevant with that definition\n                            path. Example input: /entry/data/delays\n  -c, --concept TEXT        Concept path from application definition file\n                            (.nxdl.xml). Finds out all the available concept\n                            definition (IS-A relation) for a given concept\n                            path. Example input:\n                            /NXarpes/ENTRY/INSTRUMENT/analyser\n  --help                    Show this message and exit.\n</code></pre> A note to Windows users <p>If you run <code>read_nexus</code> from <code>git bash</code>, you need to set the environmental variable <code>MSYS_NO_PATHCONV</code> to avoid the path translation in Windows Git MSys. The easiest way is to prefix the <code>read_nexus</code> call with <code>MSYS_NO_PATHCONV=1</code>:</p> <pre><code>MSYS_NO_PATHCONV=1 read_nexus -c /NXarpes/ENTRY/INSTRUMENT/analyzer\n</code></pre> <p>This workaround was tested with Windows 11, but should very likely also work with Windows 10 and lower.</p> <p>To see the results on the test file, run:</p> <pre><code>read_nexus -f src/pynxtools/data/201805_WSe2_arpes.nxs \n</code></pre> Show full output <pre><code>read_nexus -f src/pynxtools/data/201805_WSe2_arpes.nxs\n</code></pre> <pre><code>===== GROUP (// [NO NXentry found::]): &lt;HDF5 file \"201805_WSe2_arpes.nxs\" (mode r)&gt;\nDEBUG: ===== GROUP (// [NO NXentry found::]): &lt;HDF5 file \"201805_WSe2_arpes.nxs\" (mode r)&gt;\nclasspath: None\nDEBUG: classpath: None\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//@HDF5_Version)\nDEBUG: ===== ATTRS (//@HDF5_Version)\nvalue: 1.10.5 \nDEBUG: value: 1.10.5 \nclasspath: None\nDEBUG: classpath: None\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//@file_name)\nDEBUG: ===== ATTRS (//@file_name)\nvalue: /home/tommaso/Desktop/NeXus/Test/201805_WSe2_arpes.nxs \nDEBUG: value: /home/tommaso/Desktop/NeXus/Test/201805_WSe2_arpes.nxs \nclasspath: None\nDEBUG: classpath: None\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//@file_time)\nDEBUG: ===== ATTRS (//@file_time)\nvalue: 2020-06-04T19:19:48.464472 \nDEBUG: value: 2020-06-04T19:19:48.464472 \nclasspath: None\nDEBUG: classpath: None\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//@h5py_version)\nDEBUG: ===== ATTRS (//@h5py_version)\nvalue: 2.10.0 \nDEBUG: value: 2.10.0 \nclasspath: None\nDEBUG: classpath: None\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//@nexusformat_version)\nDEBUG: ===== ATTRS (//@nexusformat_version)\nvalue: 0.5.2 \nDEBUG: value: 0.5.2 \nclasspath: None\nDEBUG: classpath: None\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== GROUP (//entry [NXarpes::/NXentry]): &lt;HDF5 group \"/entry\" (12 members)&gt;\nDEBUG: ===== GROUP (//entry [NXarpes::/NXentry]): &lt;HDF5 group \"/entry\" (12 members)&gt;\nclasspath: ['NXentry']\nDEBUG: classpath: ['NXentry']\nclasses:\nNXarpes.nxdl.xml:/ENTRY\nNXentry.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY\nNXentry.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY):\n\nDEBUG: \ndocumentation (NXentry.nxdl.xml:):\nDEBUG: documentation (NXentry.nxdl.xml:):\n\n        (**required**) :ref:`NXentry` describes the measurement.\n\n        The top-level NeXus group which contains all the data and associated\n        information that comprise a single measurement.\n        It is mandatory that there is at least one\n        group of this type in the NeXus file.   \nDEBUG: \n        (**required**) :ref:`NXentry` describes the measurement.\n\n        The top-level NeXus group which contains all the data and associated\n        information that comprise a single measurement.\n        It is mandatory that there is at least one\n        group of this type in the NeXus file.   \ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry@NX_class)\nDEBUG: ===== ATTRS (//entry@NX_class)\nvalue: NXentry \nDEBUG: value: NXentry \nclasspath: ['NXentry']\nDEBUG: classpath: ['NXentry']\nclasses:\nNXarpes.nxdl.xml:/ENTRY\nNXentry.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY\nNXentry.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/collection_time): &lt;HDF5 dataset \"collection_time\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/collection_time): &lt;HDF5 dataset \"collection_time\": shape (), type \"&lt;i8\"&gt;\nvalue: 7200 \nDEBUG: value: 7200 \nclasspath: ['NXentry', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NX_FLOAT']\nclasses:\nNXentry.nxdl.xml:/collection_time\nDEBUG: classes:\nNXentry.nxdl.xml:/collection_time\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXentry.nxdl.xml:/collection_time):\nDEBUG: documentation (NXentry.nxdl.xml:/collection_time):\n\n            Time transpired actually collecting data i.e. taking out time when collection was\n            suspended due to e.g. temperature out of range\n\nDEBUG: \n            Time transpired actually collecting data i.e. taking out time when collection was\n            suspended due to e.g. temperature out of range\n\n===== ATTRS (//entry/collection_time@units)\nDEBUG: ===== ATTRS (//entry/collection_time@units)\nvalue: s \nDEBUG: value: s \nclasspath: ['NXentry', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NX_FLOAT']\nclasses:\nNXentry.nxdl.xml:/collection_time\nDEBUG: classes:\nNXentry.nxdl.xml:/collection_time\nNXentry.nxdl.xml:/collection_time@units [NX_TIME]\nDEBUG: NXentry.nxdl.xml:/collection_time@units [NX_TIME]\n===== GROUP (//entry/data [NXarpes::/NXentry/NXdata]): &lt;HDF5 group \"/entry/data\" (4 members)&gt;\nDEBUG: ===== GROUP (//entry/data [NXarpes::/NXentry/NXdata]): &lt;HDF5 group \"/entry/data\" (4 members)&gt;\nclasspath: ['NXentry', 'NXdata']\nDEBUG: classpath: ['NXentry', 'NXdata']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/DATA):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/DATA):\n\nDEBUG: \ndocumentation (NXentry.nxdl.xml:/DATA):\nDEBUG: documentation (NXentry.nxdl.xml:/DATA):\n\n            The data group\n\n            .. note:: Before the NIAC2016 meeting [#]_, at least one\n               :ref:`NXdata` group was required in each :ref:`NXentry` group.\n               At the NIAC2016 meeting, it was decided to make :ref:`NXdata`\n               an optional group in :ref:`NXentry` groups for data files that\n               do not use an application definition.\n               It is recommended strongly that all NeXus data files provide\n               a NXdata group.\n               It is permissible to omit the NXdata group only when\n               defining the default plot is not practical or possible\n               from the available data.\n\n               For example, neutron event data may not have anything that\n               makes a useful plot without extensive processing.\n\n               Certain application definitions override this decision and\n               require an :ref:`NXdata` group\n               in the :ref:`NXentry` group.  The ``minOccurs=0`` attribute\n               in the application definition will indicate the\n               :ref:`NXdata` group\n               is optional, otherwise, it is required.\n\n               .. [#] NIAC2016:\n                  https://www.nexusformat.org/NIAC2016.html,\n                  https://github.com/nexusformat/NIAC/issues/16\n\n\nDEBUG: \n            The data group\n\n            .. note:: Before the NIAC2016 meeting [#]_, at least one\n               :ref:`NXdata` group was required in each :ref:`NXentry` group.\n               At the NIAC2016 meeting, it was decided to make :ref:`NXdata`\n               an optional group in :ref:`NXentry` groups for data files that\n               do not use an application definition.\n               It is recommended strongly that all NeXus data files provide\n               a NXdata group.\n               It is permissible to omit the NXdata group only when\n               defining the default plot is not practical or possible\n               from the available data.\n\n               For example, neutron event data may not have anything that\n               makes a useful plot without extensive processing.\n\n               Certain application definitions override this decision and\n               require an :ref:`NXdata` group\n               in the :ref:`NXentry` group.  The ``minOccurs=0`` attribute\n               in the application definition will indicate the\n               :ref:`NXdata` group\n               is optional, otherwise, it is required.\n\n               .. [#] NIAC2016:\n                  https://www.nexusformat.org/NIAC2016.html,\n                  https://github.com/nexusformat/NIAC/issues/16\n\n\ndocumentation (NXobject.nxdl.xml:/DATA):\nDEBUG: documentation (NXobject.nxdl.xml:/DATA):\n\nDEBUG: \ndocumentation (NXdata.nxdl.xml:):\nDEBUG: documentation (NXdata.nxdl.xml:):\n\n        The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.\n        NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their\n        associated axis coordinates (also referred to as *axes* or *independent variables*).\n\n        The actual names of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` and :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields\n        can be chosen :ref:`freely &lt;validItemName&gt;`, as indicated by the upper case (this is a common convention in all NeXus classes).\n\n        .. note:: ``NXdata`` provides data and coordinates to be plotted but\n            does not describe how the data is to be plotted or even the dimensionality of the plot.\n            https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute\n\n        .. include:: data/index.rst\n           :start-line: 1\n\n        .. admonition:: Example of a simple curve plot\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data\"\n                  @axes = [\"x\"]\n                  data: float[100]\n                  x: float[100]\n\n        More complex cases are supported\n\n        * histogram data: ``x`` has one more value than ``data``.\n        * alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.\n        * signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.\n        * axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a\n          unique ``(x, y)`` coordinate for each ``data`` point.\n\n        **Signals:**\n\n        .. index:: plotting\n\n        .. admonition:: Defined by\n\n            * :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields\n            * the :ref:`signal &lt;/NXdata@signal-attribute&gt;` attribute\n            * the :ref:`auxiliary_signals&lt;/NXdata@auxiliary_signals-attribute&gt;` attribute\n\n        The :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields contain the signal values to be plotted. The name of the field\n        to be used as the *default plot signal* is provided by the :ref:`signal &lt;/NXdata@signal-attribute&gt;` attribute.\n        The names of the fields to be used as *secondary plot signals* are provided by the\n        :ref:`auxiliary_signals&lt;/NXdata@auxiliary_signals-attribute&gt;` attribute.\n\n        .. admonition:: An example with three signals, one of which being the default\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data1\"\n                  @auxiliary_signals = [\"data2\", \"data3\"]\n                  data1: float[10,20,30]  # the default signal\n                  data2: float[10,20,30]\n                  data3: float[10,20,30]\n\n        **Axes:**\n\n        .. index:: axes (attribute)\n        .. index:: coordinates\n\n        .. admonition:: Defined by\n\n            * :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields\n            * the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute\n            * :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes\n\n        The fields and attributes are defined as follows\n\n        1. The :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields contain the axis coordinates associated with the signal values.\n\n        2. The :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute provides the names of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`\n           fields to be used as the `default axis` for each dimension of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields.\n\n        3. The :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes describe the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n           dimensions spanned by the corresponding :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields.\n\n        The fields and attributes have the following constraints\n\n        1. The length of the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute must be equal to the rank of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n           fields. When a particular dimension has no default axis, the string \u201c.\u201d is used in that position.\n\n        2. The number of values in :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` must be equal to the rank of the corresponding\n           :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field.\n\n        3. When :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` is missing for a given\n           :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field, the positions of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`\n           field name in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute are used.\n\n        4. When :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` is the same as the indices of \"AXISNAME\" in the\n           :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute, there is no need to provide\n           :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;`.\n\n        5. The indices of \"AXISNAME\" in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute must be a subset of\n           :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;`.\n\n        6. The shape of an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field must correspond to the shape of the\n           :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``\n           spanned by axis field :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`, the number of axis values ``AXISNAME.shape[i]``\n           along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``\n           or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the\n           :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field contains histogram bin edges along dimension ``i``.\n\n        Highlight consequences of these constraints\n\n        1. An :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field can have more than one dimension and can therefore span\n           more than one :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension. Conversely, one :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension\n           can be spanned by more than one :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field. The default axis name (if any)\n           of each dimension can be found in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute.\n\n        2. A list of all available axes is not provided directly. All strings in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute\n           (excluding the \u201c.\u201d string) are axis field names. In addition the prefix of an attribute ending with the string \"_indices\" is also\n           an axis field name.\n\n        .. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data\"\n                  @axes = [\"x_set\", \"y_set\", \".\"]  # default axes for all three dimensions\n                  @x_encoder_indices = [0, 1]\n                  @y_encoder_indices = 1           # or [1]\n                  data: float[10,7,1024]\n                  x_encoder: float[11,7]           # coordinates along the first and second dimensions\n                  y_encoder: float[7]              # coordinates along the second dimension\n                  x_set: float[10]                 # default coordinates along the first dimension\n                  y_set: float[7]                  # default coordinates along the second dimension\n\n        **Uncertainties:**\n\n        .. admonition:: Defined by\n\n            * :ref:`FIELDNAME_errors &lt;/NXdata/FIELDNAME_errors-field&gt;` fields\n\n        Standard deviations on data values as well as coordinates can be provided by\n        :ref:`FIELDNAME_errors &lt;/NXdata/FIELDNAME_errors-field&gt;` fields where ``FIELDNAME`` is the name of a\n        :ref:`DATA &lt;/NXdata/DATA-field&gt;` field or an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field.\n\n        .. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data1\"\n                  @auxiliary_signals = [\"data2\", \"data3\"]\n                  @axes = [\"x\", \".\", \"z\"]\n                  data1: float[10,20,30]\n                  data2: float[10,20,30]\n                  data3: float[10,20,30]\n                  x: float[10]\n                  z: float[30]\n                  data1_errors: float[10,20,30]\n                  data2_errors: float[10,20,30]\n                  data3_errors: float[10,20,30]\n                  x_errors: float[10]\n                  z_errors: float[30]\n\n\nDEBUG: \n        The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.\n        NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their\n        associated axis coordinates (also referred to as *axes* or *independent variables*).\n\n        The actual names of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` and :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields\n        can be chosen :ref:`freely &lt;validItemName&gt;`, as indicated by the upper case (this is a common convention in all NeXus classes).\n\n        .. note:: ``NXdata`` provides data and coordinates to be plotted but\n            does not describe how the data is to be plotted or even the dimensionality of the plot.\n            https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute\n\n        .. include:: data/index.rst\n           :start-line: 1\n\n        .. admonition:: Example of a simple curve plot\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data\"\n                  @axes = [\"x\"]\n                  data: float[100]\n                  x: float[100]\n\n        More complex cases are supported\n\n        * histogram data: ``x`` has one more value than ``data``.\n        * alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.\n        * signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.\n        * axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a\n          unique ``(x, y)`` coordinate for each ``data`` point.\n\n        **Signals:**\n\n        .. index:: plotting\n\n        .. admonition:: Defined by\n\n            * :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields\n            * the :ref:`signal &lt;/NXdata@signal-attribute&gt;` attribute\n            * the :ref:`auxiliary_signals&lt;/NXdata@auxiliary_signals-attribute&gt;` attribute\n\n        The :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields contain the signal values to be plotted. The name of the field\n        to be used as the *default plot signal* is provided by the :ref:`signal &lt;/NXdata@signal-attribute&gt;` attribute.\n        The names of the fields to be used as *secondary plot signals* are provided by the\n        :ref:`auxiliary_signals&lt;/NXdata@auxiliary_signals-attribute&gt;` attribute.\n\n        .. admonition:: An example with three signals, one of which being the default\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data1\"\n                  @auxiliary_signals = [\"data2\", \"data3\"]\n                  data1: float[10,20,30]  # the default signal\n                  data2: float[10,20,30]\n                  data3: float[10,20,30]\n\n        **Axes:**\n\n        .. index:: axes (attribute)\n        .. index:: coordinates\n\n        .. admonition:: Defined by\n\n            * :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields\n            * the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute\n            * :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes\n\n        The fields and attributes are defined as follows\n\n        1. The :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields contain the axis coordinates associated with the signal values.\n\n        2. The :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute provides the names of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`\n           fields to be used as the `default axis` for each dimension of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields.\n\n        3. The :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes describe the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n           dimensions spanned by the corresponding :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields.\n\n        The fields and attributes have the following constraints\n\n        1. The length of the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute must be equal to the rank of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n           fields. When a particular dimension has no default axis, the string \u201c.\u201d is used in that position.\n\n        2. The number of values in :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` must be equal to the rank of the corresponding\n           :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field.\n\n        3. When :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` is missing for a given\n           :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field, the positions of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`\n           field name in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute are used.\n\n        4. When :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` is the same as the indices of \"AXISNAME\" in the\n           :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute, there is no need to provide\n           :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;`.\n\n        5. The indices of \"AXISNAME\" in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute must be a subset of\n           :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;`.\n\n        6. The shape of an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field must correspond to the shape of the\n           :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``\n           spanned by axis field :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`, the number of axis values ``AXISNAME.shape[i]``\n           along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``\n           or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the\n           :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field contains histogram bin edges along dimension ``i``.\n\n        Highlight consequences of these constraints\n\n        1. An :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field can have more than one dimension and can therefore span\n           more than one :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension. Conversely, one :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension\n           can be spanned by more than one :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field. The default axis name (if any)\n           of each dimension can be found in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute.\n\n        2. A list of all available axes is not provided directly. All strings in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute\n           (excluding the \u201c.\u201d string) are axis field names. In addition the prefix of an attribute ending with the string \"_indices\" is also\n           an axis field name.\n\n        .. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data\"\n                  @axes = [\"x_set\", \"y_set\", \".\"]  # default axes for all three dimensions\n                  @x_encoder_indices = [0, 1]\n                  @y_encoder_indices = 1           # or [1]\n                  data: float[10,7,1024]\n                  x_encoder: float[11,7]           # coordinates along the first and second dimensions\n                  y_encoder: float[7]              # coordinates along the second dimension\n                  x_set: float[10]                 # default coordinates along the first dimension\n                  y_set: float[7]                  # default coordinates along the second dimension\n\n        **Uncertainties:**\n\n        .. admonition:: Defined by\n\n            * :ref:`FIELDNAME_errors &lt;/NXdata/FIELDNAME_errors-field&gt;` fields\n\n        Standard deviations on data values as well as coordinates can be provided by\n        :ref:`FIELDNAME_errors &lt;/NXdata/FIELDNAME_errors-field&gt;` fields where ``FIELDNAME`` is the name of a\n        :ref:`DATA &lt;/NXdata/DATA-field&gt;` field or an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field.\n\n        .. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates\n\n            .. code-block::\n\n                data:NXdata\n                  @signal = \"data1\"\n                  @auxiliary_signals = [\"data2\", \"data3\"]\n                  @axes = [\"x\", \".\", \"z\"]\n                  data1: float[10,20,30]\n                  data2: float[10,20,30]\n                  data3: float[10,20,30]\n                  x: float[10]\n                  z: float[30]\n                  data1_errors: float[10,20,30]\n                  data2_errors: float[10,20,30]\n                  data3_errors: float[10,20,30]\n                  x_errors: float[10]\n                  z_errors: float[30]\n\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/data@NX_class)\nDEBUG: ===== ATTRS (//entry/data@NX_class)\nvalue: NXdata \nDEBUG: value: NXdata \nclasspath: ['NXentry', 'NXdata']\nDEBUG: classpath: ['NXentry', 'NXdata']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== ATTRS (//entry/data@axes)\nDEBUG: ===== ATTRS (//entry/data@axes)\nvalue: ['angles' 'energies' 'delays'] \nDEBUG: value: ['angles' 'energies' 'delays'] \nclasspath: ['NXentry', 'NXdata']\nDEBUG: classpath: ['NXentry', 'NXdata']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\nNXdata.nxdl.xml:@axes - [NX_CHAR]\nDEBUG: NXdata.nxdl.xml:@axes - [NX_CHAR]\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXdata.nxdl.xml:/axes):\nDEBUG: documentation (NXdata.nxdl.xml:/axes):\n\n            .. index:: plotting\n\n            The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields\n            to be used as the default axis along every :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension. As a result the length must\n            be equal to the rank of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields. The string \".\" can be used for\n            dimensions without a default axis.\n\n            .. note::  When ``axes`` contains multiple strings, it must be saved as an actual array\n                of strings and not a single comma separated string.\n\nDEBUG: \n            .. index:: plotting\n\n            The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields\n            to be used as the default axis along every :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension. As a result the length must\n            be equal to the rank of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields. The string \".\" can be used for\n            dimensions without a default axis.\n\n            .. note::  When ``axes`` contains multiple strings, it must be saved as an actual array\n                of strings and not a single comma separated string.\n\n===== ATTRS (//entry/data@signal)\nDEBUG: ===== ATTRS (//entry/data@signal)\nvalue: data \nDEBUG: value: data \nclasspath: ['NXentry', 'NXdata']\nDEBUG: classpath: ['NXentry', 'NXdata']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/DATA\nNXentry.nxdl.xml:/DATA\nNXobject.nxdl.xml:/DATA\nNXdata.nxdl.xml:\nNXobject.nxdl.xml:\nNXdata.nxdl.xml:@signal - [NX_CHAR]\nDEBUG: NXdata.nxdl.xml:@signal - [NX_CHAR]\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXdata.nxdl.xml:/signal):\nDEBUG: documentation (NXdata.nxdl.xml:/signal):\n\n            .. index:: find the default plottable data\n            .. index:: plotting\n            .. index:: signal attribute value\n\n            The value is the :ref:`name &lt;validItemName&gt;` of the signal that contains\n            the default plottable data. This field or link *must* exist and be a direct child\n            of this NXdata group.\n\n            It is recommended (as of NIAC2014) to use this attribute\n            rather than adding a signal attribute to the field.\n            See https://www.nexusformat.org/2014_How_to_find_default_data.html\n            for a summary of the discussion.\n\nDEBUG: \n            .. index:: find the default plottable data\n            .. index:: plotting\n            .. index:: signal attribute value\n\n            The value is the :ref:`name &lt;validItemName&gt;` of the signal that contains\n            the default plottable data. This field or link *must* exist and be a direct child\n            of this NXdata group.\n\n            It is recommended (as of NIAC2014) to use this attribute\n            rather than adding a signal attribute to the field.\n            See https://www.nexusformat.org/2014_How_to_find_default_data.html\n            for a summary of the discussion.\n\n===== FIELD (//entry/data/angles): &lt;HDF5 dataset \"angles\": shape (80,), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/data/angles): &lt;HDF5 dataset \"angles\": shape (80,), type \"&lt;f8\"&gt;\nvalue: [-1.96735314 -1.91500657 -1.86266001 -1.81031344 -1.75796688 -1.70562031 ...\nDEBUG: value: [-1.96735314 -1.91500657 -1.86266001 -1.81031344 -1.75796688 -1.70562031 ...\nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDataset referenced as NXdata AXIS #0\nDEBUG: Dataset referenced as NXdata AXIS #0\ndocumentation (NXdata.nxdl.xml:/AXISNAME):\nDEBUG: documentation (NXdata.nxdl.xml:/AXISNAME):\n\n            Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions.\n\n            The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n            dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points\n            ``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the\n            number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.\n\n            As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.\n\n            Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,\n            an array of NX_CHAR can be provided.\n\nDEBUG: \n            Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions.\n\n            The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n            dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points\n            ``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the\n            number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.\n\n            As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.\n\n            Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,\n            an array of NX_CHAR can be provided.\n\n===== ATTRS (//entry/data/angles@target)\nDEBUG: ===== ATTRS (//entry/data/angles@target)\nvalue: /entry/instrument/analyser/angles \nDEBUG: value: /entry/instrument/analyser/angles \nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/data/angles@units)\nDEBUG: ===== ATTRS (//entry/data/angles@units)\nvalue: 1/\u00c5 \nDEBUG: value: 1/\u00c5 \nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\nNXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]\nDEBUG: NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]\nDataset referenced as NXdata AXIS #0\nDEBUG: Dataset referenced as NXdata AXIS #0\ndocumentation (NXdata.nxdl.xml:/AXISNAME/units):\nDEBUG: documentation (NXdata.nxdl.xml:/AXISNAME/units):\n\n                Unit in which the coordinate values are expressed.\n                See the section :ref:`Design-Units` for more information.\n\nDEBUG: \n                Unit in which the coordinate values are expressed.\n                See the section :ref:`Design-Units` for more information.\n\n===== FIELD (//entry/data/data): &lt;HDF5 dataset \"data\": shape (80, 146, 195), type \"&lt;f4\"&gt;\nDEBUG: ===== FIELD (//entry/data/data): &lt;HDF5 dataset \"data\": shape (80, 146, 195), type \"&lt;f4\"&gt;\nvalue: [[0. 0. 0. ... 0. 0. 0.] ...\nDEBUG: value: [[0. 0. 0. ... 0. 0. 0.] ...\nclasspath: ['NXentry', 'NXdata', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_NUMBER']\nclasses:\nNXdata.nxdl.xml:/DATA\nDEBUG: classes:\nNXdata.nxdl.xml:/DATA\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDataset referenced as NXdata SIGNAL\nDEBUG: Dataset referenced as NXdata SIGNAL\ndocumentation (NXdata.nxdl.xml:/DATA):\nDEBUG: documentation (NXdata.nxdl.xml:/DATA):\n\n            .. index:: plotting\n\n            Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``\n            indicates, the names of the ``DATA`` fields can be chosen :ref:`freely &lt;validItemName&gt;`. The :ref:`signal attribute &lt;/NXdata@signal-attribute&gt;`\n            and :ref:`auxiliary_signals attribute&lt;/NXdata@auxiliary_signals-attribute&gt;` can be used to find all datasets in the ``NXdata``\n            that contain data values.\n\n            The maximum rank is ``32`` for compatibility with backend file formats.\n\nDEBUG: \n            .. index:: plotting\n\n            Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``\n            indicates, the names of the ``DATA`` fields can be chosen :ref:`freely &lt;validItemName&gt;`. The :ref:`signal attribute &lt;/NXdata@signal-attribute&gt;`\n            and :ref:`auxiliary_signals attribute&lt;/NXdata@auxiliary_signals-attribute&gt;` can be used to find all datasets in the ``NXdata``\n            that contain data values.\n\n            The maximum rank is ``32`` for compatibility with backend file formats.\n\n===== ATTRS (//entry/data/data@target)\nDEBUG: ===== ATTRS (//entry/data/data@target)\nvalue: /entry/instrument/analyser/data \nDEBUG: value: /entry/instrument/analyser/data \nclasspath: ['NXentry', 'NXdata', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_NUMBER']\nclasses:\nNXdata.nxdl.xml:/DATA\nDEBUG: classes:\nNXdata.nxdl.xml:/DATA\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/data/data@units)\nDEBUG: ===== ATTRS (//entry/data/data@units)\nvalue: counts \nDEBUG: value: counts \nclasspath: ['NXentry', 'NXdata', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_NUMBER']\nclasses:\nNXdata.nxdl.xml:/DATA\nDEBUG: classes:\nNXdata.nxdl.xml:/DATA\nNXdata.nxdl.xml:/DATA@units - REQUIRED, but undefined unit category\nDEBUG: NXdata.nxdl.xml:/DATA@units - REQUIRED, but undefined unit category\n===== FIELD (//entry/data/delays): &lt;HDF5 dataset \"delays\": shape (195,), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/data/delays): &lt;HDF5 dataset \"delays\": shape (195,), type \"&lt;f8\"&gt;\nvalue: [-1.1        -1.08041237 -1.06082474 -1.04123711 -1.02164948 -1.00206186 ...\nDEBUG: value: [-1.1        -1.08041237 -1.06082474 -1.04123711 -1.02164948 -1.00206186 ...\nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDataset referenced as NXdata AXIS #2\nDEBUG: Dataset referenced as NXdata AXIS #2\ndocumentation (NXdata.nxdl.xml:/AXISNAME):\nDEBUG: documentation (NXdata.nxdl.xml:/AXISNAME):\n\n            Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions.\n\n            The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n            dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points\n            ``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the\n            number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.\n\n            As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.\n\n            Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,\n            an array of NX_CHAR can be provided.\n\nDEBUG: \n            Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions.\n\n            The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n            dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points\n            ``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the\n            number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.\n\n            As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.\n\n            Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,\n            an array of NX_CHAR can be provided.\n\n===== ATTRS (//entry/data/delays@target)\nDEBUG: ===== ATTRS (//entry/data/delays@target)\nvalue: /entry/instrument/analyser/delays \nDEBUG: value: /entry/instrument/analyser/delays \nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/data/delays@units)\nDEBUG: ===== ATTRS (//entry/data/delays@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\nNXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]\nDEBUG: NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]\nDataset referenced as NXdata AXIS #2\nDEBUG: Dataset referenced as NXdata AXIS #2\ndocumentation (NXdata.nxdl.xml:/AXISNAME/units):\nDEBUG: documentation (NXdata.nxdl.xml:/AXISNAME/units):\n\n                Unit in which the coordinate values are expressed.\n                See the section :ref:`Design-Units` for more information.\n\nDEBUG: \n                Unit in which the coordinate values are expressed.\n                See the section :ref:`Design-Units` for more information.\n\n===== FIELD (//entry/data/energies): &lt;HDF5 dataset \"energies\": shape (146,), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/data/energies): &lt;HDF5 dataset \"energies\": shape (146,), type \"&lt;f8\"&gt;\nvalue: [ 2.5         2.46917808  2.43835616  2.40753425  2.37671233  2.34589041 ...\nDEBUG: value: [ 2.5         2.46917808  2.43835616  2.40753425  2.37671233  2.34589041 ...\nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDataset referenced as NXdata AXIS #1\nDEBUG: Dataset referenced as NXdata AXIS #1\ndocumentation (NXdata.nxdl.xml:/AXISNAME):\nDEBUG: documentation (NXdata.nxdl.xml:/AXISNAME):\n\n            Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions.\n\n            The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n            dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points\n            ``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the\n            number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.\n\n            As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.\n\n            Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,\n            an array of NX_CHAR can be provided.\n\nDEBUG: \n            Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions.\n\n            The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`\n            dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points\n            ``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the\n            number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.\n\n            As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.\n\n            Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,\n            an array of NX_CHAR can be provided.\n\n===== ATTRS (//entry/data/energies@target)\nDEBUG: ===== ATTRS (//entry/data/energies@target)\nvalue: /entry/instrument/analyser/energies \nDEBUG: value: /entry/instrument/analyser/energies \nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/data/energies@units)\nDEBUG: ===== ATTRS (//entry/data/energies@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']\nclasses:\nNXdata.nxdl.xml:/AXISNAME\nDEBUG: classes:\nNXdata.nxdl.xml:/AXISNAME\nNXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]\nDEBUG: NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]\nDataset referenced as NXdata AXIS #1\nDEBUG: Dataset referenced as NXdata AXIS #1\ndocumentation (NXdata.nxdl.xml:/AXISNAME/units):\nDEBUG: documentation (NXdata.nxdl.xml:/AXISNAME/units):\n\n                Unit in which the coordinate values are expressed.\n                See the section :ref:`Design-Units` for more information.\n\nDEBUG: \n                Unit in which the coordinate values are expressed.\n                See the section :ref:`Design-Units` for more information.\n\n===== FIELD (//entry/definition): &lt;HDF5 dataset \"definition\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/definition): &lt;HDF5 dataset \"definition\": shape (), type \"|O\"&gt;\nvalue: NXarpes \nDEBUG: value: NXarpes \nclasspath: ['NXentry', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/definition\nNXentry.nxdl.xml:/definition\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/definition\nNXentry.nxdl.xml:/definition\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXarpes.nxdl.xml:/ENTRY/definition):\nDEBUG: enumeration (NXarpes.nxdl.xml:/ENTRY/definition):\n-&gt; NXarpes\nDEBUG: -&gt; NXarpes\ndocumentation (NXarpes.nxdl.xml:/ENTRY/definition):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/definition):\nOfficial NeXus NXDL schema to which this file conforms.\nDEBUG: Official NeXus NXDL schema to which this file conforms.\ndocumentation (NXentry.nxdl.xml:/definition):\nDEBUG: documentation (NXentry.nxdl.xml:/definition):\n\n            (alternate use: see same field in :ref:`NXsubentry` for preferred)\n\n            Official NeXus NXDL schema to which this entry conforms which must be\n            the name of the NXDL file (case sensitive without the file extension)\n            that the NXDL schema is defined in. \n\n            For example the ``definition`` field for a file that conformed to the \n            *NXarpes.nxdl.xml* definition must contain the string **NXarpes**.\n\n            This field is provided so that :ref:`NXentry` can be the overlay position\n            in a NeXus data file for an application definition and its\n            set of groups, fields, and attributes.\n\n            *It is advised* to use :ref:`NXsubentry`, instead, as the overlay position.\n\nDEBUG: \n            (alternate use: see same field in :ref:`NXsubentry` for preferred)\n\n            Official NeXus NXDL schema to which this entry conforms which must be\n            the name of the NXDL file (case sensitive without the file extension)\n            that the NXDL schema is defined in. \n\n            For example the ``definition`` field for a file that conformed to the \n            *NXarpes.nxdl.xml* definition must contain the string **NXarpes**.\n\n            This field is provided so that :ref:`NXentry` can be the overlay position\n            in a NeXus data file for an application definition and its\n            set of groups, fields, and attributes.\n\n            *It is advised* to use :ref:`NXsubentry`, instead, as the overlay position.\n\n===== FIELD (//entry/duration): &lt;HDF5 dataset \"duration\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/duration): &lt;HDF5 dataset \"duration\": shape (), type \"&lt;i8\"&gt;\nvalue: 7200 \nDEBUG: value: 7200 \nclasspath: ['NXentry', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NX_INT']\nclasses:\nNXentry.nxdl.xml:/duration\nDEBUG: classes:\nNXentry.nxdl.xml:/duration\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXentry.nxdl.xml:/duration):\nDEBUG: documentation (NXentry.nxdl.xml:/duration):\nDuration of measurement\nDEBUG: Duration of measurement\n===== ATTRS (//entry/duration@units)\nDEBUG: ===== ATTRS (//entry/duration@units)\nvalue: s \nDEBUG: value: s \nclasspath: ['NXentry', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NX_INT']\nclasses:\nNXentry.nxdl.xml:/duration\nDEBUG: classes:\nNXentry.nxdl.xml:/duration\nNXentry.nxdl.xml:/duration@units [NX_TIME]\nDEBUG: NXentry.nxdl.xml:/duration@units [NX_TIME]\n===== FIELD (//entry/end_time): &lt;HDF5 dataset \"end_time\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/end_time): &lt;HDF5 dataset \"end_time\": shape (), type \"|O\"&gt;\nvalue: 2018-05-01T09:22:00+02:00 \nDEBUG: value: 2018-05-01T09:22:00+02:00 \nclasspath: ['NXentry', 'NX_DATE_TIME']\nDEBUG: classpath: ['NXentry', 'NX_DATE_TIME']\nclasses:\nNXentry.nxdl.xml:/end_time\nDEBUG: classes:\nNXentry.nxdl.xml:/end_time\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXentry.nxdl.xml:/end_time):\nDEBUG: documentation (NXentry.nxdl.xml:/end_time):\nEnding time of measurement\nDEBUG: Ending time of measurement\n===== FIELD (//entry/entry_identifier): &lt;HDF5 dataset \"entry_identifier\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/entry_identifier): &lt;HDF5 dataset \"entry_identifier\": shape (), type \"|O\"&gt;\nvalue: Run 22118 \nDEBUG: value: Run 22118 \nclasspath: ['NXentry', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NX_CHAR']\nclasses:\nNXentry.nxdl.xml:/entry_identifier\nDEBUG: classes:\nNXentry.nxdl.xml:/entry_identifier\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDEPRECATED - Use the field :ref:`identifier_entry &lt;/NXentry/identifier_entry-field&gt;` instead.\nDEBUG: DEPRECATED - Use the field :ref:`identifier_entry &lt;/NXentry/identifier_entry-field&gt;` instead.\ndocumentation (NXentry.nxdl.xml:/entry_identifier):\nDEBUG: documentation (NXentry.nxdl.xml:/entry_identifier):\nUnique identifier for the measurement, defined by the facility.\nDEBUG: Unique identifier for the measurement, defined by the facility.\n===== FIELD (//entry/experiment_identifier): &lt;HDF5 dataset \"experiment_identifier\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/experiment_identifier): &lt;HDF5 dataset \"experiment_identifier\": shape (), type \"|O\"&gt;\nvalue: F-20170538 \nDEBUG: value: F-20170538 \nclasspath: ['NXentry', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NX_CHAR']\nclasses:\nNXentry.nxdl.xml:/experiment_identifier\nDEBUG: classes:\nNXentry.nxdl.xml:/experiment_identifier\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDEPRECATED - Use the field :ref:`identifier_experiment &lt;/NXentry/identifier_experiment-field&gt;` instead.\nDEBUG: DEPRECATED - Use the field :ref:`identifier_experiment &lt;/NXentry/identifier_experiment-field&gt;` instead.\ndocumentation (NXentry.nxdl.xml:/experiment_identifier):\nDEBUG: documentation (NXentry.nxdl.xml:/experiment_identifier):\n\n            Unique identifier for the experiment,\n            defined by the facility,\n            possibly linked to the proposals\n\nDEBUG: \n            Unique identifier for the experiment,\n            defined by the facility,\n            possibly linked to the proposals\n\n===== GROUP (//entry/instrument [NXarpes::/NXentry/NXinstrument]): &lt;HDF5 group \"/entry/instrument\" (11 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument [NXarpes::/NXentry/NXinstrument]): &lt;HDF5 group \"/entry/instrument\" (11 members)&gt;\nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT\nNXentry.nxdl.xml:/INSTRUMENT\nNXinstrument.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT\nNXentry.nxdl.xml:/INSTRUMENT\nNXinstrument.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT):\n\nDEBUG: \ndocumentation (NXentry.nxdl.xml:/INSTRUMENT):\nDEBUG: documentation (NXentry.nxdl.xml:/INSTRUMENT):\n\nDEBUG: \ndocumentation (NXinstrument.nxdl.xml:):\nDEBUG: documentation (NXinstrument.nxdl.xml:):\n\n        Collection of the components of the instrument or beamline.\n\n        Template of instrument descriptions comprising various beamline components. \n        Each component will also be a NeXus group defined by its distance from the \n        sample. Negative distances represent beamline components that are before the \n        sample while positive distances represent components that are after the sample. \n        This device allows the unique identification of beamline components in a way \n        that is valid for both reactor and pulsed instrumentation.\n\nDEBUG: \n        Collection of the components of the instrument or beamline.\n\n        Template of instrument descriptions comprising various beamline components. \n        Each component will also be a NeXus group defined by its distance from the \n        sample. Negative distances represent beamline components that are before the \n        sample while positive distances represent components that are after the sample. \n        This device allows the unique identification of beamline components in a way \n        that is valid for both reactor and pulsed instrumentation.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument@NX_class)\nvalue: NXinstrument \nDEBUG: value: NXinstrument \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT\nNXentry.nxdl.xml:/INSTRUMENT\nNXinstrument.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT\nNXentry.nxdl.xml:/INSTRUMENT\nNXinstrument.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== GROUP (//entry/instrument/analyser [NXarpes::/NXentry/NXinstrument/NXdetector]): &lt;HDF5 group \"/entry/instrument/analyser\" (25 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/analyser [NXarpes::/NXentry/NXinstrument/NXdetector]): &lt;HDF5 group \"/entry/instrument/analyser\" (25 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser):\n\nDEBUG: \ndocumentation (NXinstrument.nxdl.xml:/DETECTOR):\nDEBUG: documentation (NXinstrument.nxdl.xml:/DETECTOR):\n\nDEBUG: \ndocumentation (NXdetector.nxdl.xml:):\nDEBUG: documentation (NXdetector.nxdl.xml:):\n\n    A detector, detector bank, or multidetector.\n\nDEBUG: \n    A detector, detector bank, or multidetector.\n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/analyser@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/analyser@NX_class)\nvalue: NXdetector \nDEBUG: value: NXdetector \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/acquisition_mode): &lt;HDF5 dataset \"acquisition_mode\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/acquisition_mode): &lt;HDF5 dataset \"acquisition_mode\": shape (), type \"|O\"&gt;\nvalue: fixed \nDEBUG: value: fixed \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/acquisition_mode\nNXdetector.nxdl.xml:/acquisition_mode\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/acquisition_mode\nNXdetector.nxdl.xml:/acquisition_mode\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/acquisition_mode):\nDEBUG: enumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/acquisition_mode):\n-&gt; swept\nDEBUG: -&gt; swept\n-&gt; fixed\nDEBUG: -&gt; fixed\nenumeration (NXdetector.nxdl.xml:/acquisition_mode):\nDEBUG: enumeration (NXdetector.nxdl.xml:/acquisition_mode):\n-&gt; gated\nDEBUG: -&gt; gated\n-&gt; triggered\nDEBUG: -&gt; triggered\n-&gt; summed\nDEBUG: -&gt; summed\n-&gt; event\nDEBUG: -&gt; event\n-&gt; histogrammed\nDEBUG: -&gt; histogrammed\n-&gt; decimated\nDEBUG: -&gt; decimated\n-&gt; pulse counting\nDEBUG: -&gt; pulse counting\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/acquisition_mode):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/acquisition_mode):\n\nDEBUG: \ndocumentation (NXdetector.nxdl.xml:/acquisition_mode):\nDEBUG: documentation (NXdetector.nxdl.xml:/acquisition_mode):\nThe acquisition mode of the detector.\nDEBUG: The acquisition mode of the detector.\n===== FIELD (//entry/instrument/analyser/amplifier_type): &lt;HDF5 dataset \"amplifier_type\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/amplifier_type): &lt;HDF5 dataset \"amplifier_type\": shape (), type \"|O\"&gt;\nvalue: MCP \nDEBUG: value: MCP \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/angles): &lt;HDF5 dataset \"angles\": shape (80,), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/angles): &lt;HDF5 dataset \"angles\": shape (80,), type \"&lt;f8\"&gt;\nvalue: [-1.96735314 -1.91500657 -1.86266001 -1.81031344 -1.75796688 -1.70562031 ...\nDEBUG: value: [-1.96735314 -1.91500657 -1.86266001 -1.81031344 -1.75796688 -1.70562031 ...\nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles):\n\n            Angular axis of the analyser data\n            which dimension the axis applies to is defined\n            using the normal NXdata methods.\n\nDEBUG: \n            Angular axis of the analyser data\n            which dimension the axis applies to is defined\n            using the normal NXdata methods.\n\n===== ATTRS (//entry/instrument/analyser/angles@target)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/angles@target)\nvalue: /entry/instrument/analyser/angles \nDEBUG: value: /entry/instrument/analyser/angles \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/angles@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/angles@units)\nvalue: 1/\u00c5 \nDEBUG: value: 1/\u00c5 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles@units [NX_ANGLE]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/angles@units [NX_ANGLE]\n===== FIELD (//entry/instrument/analyser/contrast_aperture): &lt;HDF5 dataset \"contrast_aperture\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/contrast_aperture): &lt;HDF5 dataset \"contrast_aperture\": shape (), type \"|O\"&gt;\nvalue: Out \nDEBUG: value: Out \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/data): &lt;HDF5 dataset \"data\": shape (80, 146, 195), type \"&lt;f4\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/data): &lt;HDF5 dataset \"data\": shape (80, 146, 195), type \"&lt;f4\"&gt;\nvalue: [[0. 0. 0. ... 0. 0. 0.] ...\nDEBUG: value: [[0. 0. 0. ... 0. 0. 0.] ...\nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data\nNXdetector.nxdl.xml:/data\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data\nNXdetector.nxdl.xml:/data\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data):\n\nDEBUG: \ndocumentation (NXdetector.nxdl.xml:/data):\nDEBUG: documentation (NXdetector.nxdl.xml:/data):\n\n      Data values from the detector. The rank and dimension ordering should follow a principle of\n      slowest to fastest measurement axes and may be explicitly specified in application definitions.\n\n      Mechanical scanning of objects (e.g. sample position/angle, incident beam energy, etc) tends to be\n      the slowest part of an experiment and so any such scan axes should be allocated to the first dimensions\n      of the array. Note that in some cases it may be useful to represent a 2D set of scan points as a single\n      scan-axis in the data array, especially if the scan pattern doesn't fit a rectangular array nicely.\n      Repetition of an experiment in a time series tends to be used similar to a slow scan axis\n      and so will often be in the first dimension of the data array.\n\n      The next fastest axes are typically the readout of the detector. A point detector will not add any dimensions\n      (as it is just a single value per scan point) to the data array, a strip detector will add one dimension, an \n      imaging detector will add two dimensions (e.g. X, Y axes) and detectors outputting higher dimensional data \n      will add the corresponding number of dimensions. Note that the detector dimensions don't necessarily have to\n      be written in order of the actual readout speeds - the slowest to fastest rule principle is only a guide.\n\n      Finally, detectors that operate in a time-of-flight mode, such as a neutron spectrometer or a silicon drift \n      detector (used for X-ray fluorescence) tend to have their dimension(s) added to the last dimensions in the data array.\n\n      The type of each dimension should should follow the order of scan points, detector pixels, \n      then time-of-flight (i.e. spectroscopy, spectrometry). The rank and dimension sizes (see symbol list) \n      shown here are merely illustrative of coordination between related datasets.\n\nDEBUG: \n      Data values from the detector. The rank and dimension ordering should follow a principle of\n      slowest to fastest measurement axes and may be explicitly specified in application definitions.\n\n      Mechanical scanning of objects (e.g. sample position/angle, incident beam energy, etc) tends to be\n      the slowest part of an experiment and so any such scan axes should be allocated to the first dimensions\n      of the array. Note that in some cases it may be useful to represent a 2D set of scan points as a single\n      scan-axis in the data array, especially if the scan pattern doesn't fit a rectangular array nicely.\n      Repetition of an experiment in a time series tends to be used similar to a slow scan axis\n      and so will often be in the first dimension of the data array.\n\n      The next fastest axes are typically the readout of the detector. A point detector will not add any dimensions\n      (as it is just a single value per scan point) to the data array, a strip detector will add one dimension, an \n      imaging detector will add two dimensions (e.g. X, Y axes) and detectors outputting higher dimensional data \n      will add the corresponding number of dimensions. Note that the detector dimensions don't necessarily have to\n      be written in order of the actual readout speeds - the slowest to fastest rule principle is only a guide.\n\n      Finally, detectors that operate in a time-of-flight mode, such as a neutron spectrometer or a silicon drift \n      detector (used for X-ray fluorescence) tend to have their dimension(s) added to the last dimensions in the data array.\n\n      The type of each dimension should should follow the order of scan points, detector pixels, \n      then time-of-flight (i.e. spectroscopy, spectrometry). The rank and dimension sizes (see symbol list) \n      shown here are merely illustrative of coordination between related datasets.\n\n===== ATTRS (//entry/instrument/analyser/data@target)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/data@target)\nvalue: /entry/instrument/analyser/data \nDEBUG: value: /entry/instrument/analyser/data \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data\nNXdetector.nxdl.xml:/data\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data\nNXdetector.nxdl.xml:/data\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/data@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/data@units)\nvalue: counts \nDEBUG: value: counts \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data\nNXdetector.nxdl.xml:/data\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data\nNXdetector.nxdl.xml:/data\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data@units - REQUIRED, but undefined unit category\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/data@units - REQUIRED, but undefined unit category\nNXdetector.nxdl.xml:/data@units [NX_ANY]\nDEBUG: NXdetector.nxdl.xml:/data@units [NX_ANY]\n===== FIELD (//entry/instrument/analyser/delays): &lt;HDF5 dataset \"delays\": shape (195,), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/delays): &lt;HDF5 dataset \"delays\": shape (195,), type \"&lt;f8\"&gt;\nvalue: [-1.1        -1.08041237 -1.06082474 -1.04123711 -1.02164948 -1.00206186 ...\nDEBUG: value: [-1.1        -1.08041237 -1.06082474 -1.04123711 -1.02164948 -1.00206186 ...\nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/delays@target)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/delays@target)\nvalue: /entry/instrument/analyser/delays \nDEBUG: value: /entry/instrument/analyser/delays \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/delays@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/delays@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/detector_type): &lt;HDF5 dataset \"detector_type\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/detector_type): &lt;HDF5 dataset \"detector_type\": shape (), type \"|O\"&gt;\nvalue: DLD \nDEBUG: value: DLD \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/dispersion_scheme): &lt;HDF5 dataset \"dispersion_scheme\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/dispersion_scheme): &lt;HDF5 dataset \"dispersion_scheme\": shape (), type \"|O\"&gt;\nvalue: Time of flight \nDEBUG: value: Time of flight \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/energies): &lt;HDF5 dataset \"energies\": shape (146,), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/energies): &lt;HDF5 dataset \"energies\": shape (146,), type \"&lt;f8\"&gt;\nvalue: [ 2.5         2.46917808  2.43835616  2.40753425  2.37671233  2.34589041 ...\nDEBUG: value: [ 2.5         2.46917808  2.43835616  2.40753425  2.37671233  2.34589041 ...\nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies):\n\n            Energy axis of the analyser data\n            which dimension the axis applies to is defined\n            using the normal NXdata methods.\n\nDEBUG: \n            Energy axis of the analyser data\n            which dimension the axis applies to is defined\n            using the normal NXdata methods.\n\n===== ATTRS (//entry/instrument/analyser/energies@target)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/energies@target)\nvalue: /entry/instrument/analyser/energies \nDEBUG: value: /entry/instrument/analyser/energies \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/energies@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/energies@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies@units [NX_ENERGY]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/energies@units [NX_ENERGY]\n===== FIELD (//entry/instrument/analyser/entrance_slit_setting): &lt;HDF5 dataset \"entrance_slit_setting\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/entrance_slit_setting): &lt;HDF5 dataset \"entrance_slit_setting\": shape (), type \"&lt;i8\"&gt;\nvalue: 0 \nDEBUG: value: 0 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_setting\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_setting\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_setting):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_setting):\ndial setting of the entrance slit\nDEBUG: dial setting of the entrance slit\n===== FIELD (//entry/instrument/analyser/entrance_slit_shape): &lt;HDF5 dataset \"entrance_slit_shape\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/entrance_slit_shape): &lt;HDF5 dataset \"entrance_slit_shape\": shape (), type \"|O\"&gt;\nvalue: straight \nDEBUG: value: straight \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_shape\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_shape\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_shape):\nDEBUG: enumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_shape):\n-&gt; curved\nDEBUG: -&gt; curved\n-&gt; straight\nDEBUG: -&gt; straight\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_shape):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_shape):\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/entrance_slit_size): &lt;HDF5 dataset \"entrance_slit_size\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/entrance_slit_size): &lt;HDF5 dataset \"entrance_slit_size\": shape (), type \"&lt;i8\"&gt;\nvalue: 750 \nDEBUG: value: 750 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size):\nsize of the entrance slit\nDEBUG: size of the entrance slit\n===== ATTRS (//entry/instrument/analyser/entrance_slit_size@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/entrance_slit_size@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size@units [NX_LENGTH]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/entrance_slit_size@units [NX_LENGTH]\n===== FIELD (//entry/instrument/analyser/extractor_voltage): &lt;HDF5 dataset \"extractor_voltage\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/extractor_voltage): &lt;HDF5 dataset \"extractor_voltage\": shape (), type \"&lt;i8\"&gt;\nvalue: 6030 \nDEBUG: value: 6030 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/extractor_voltage@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/extractor_voltage@units)\nvalue: V \nDEBUG: value: V \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/field_aperture_x): &lt;HDF5 dataset \"field_aperture_x\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/field_aperture_x): &lt;HDF5 dataset \"field_aperture_x\": shape (), type \"&lt;f8\"&gt;\nvalue: -0.2 \nDEBUG: value: -0.2 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/field_aperture_x@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/field_aperture_x@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/field_aperture_y): &lt;HDF5 dataset \"field_aperture_y\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/field_aperture_y): &lt;HDF5 dataset \"field_aperture_y\": shape (), type \"&lt;f8\"&gt;\nvalue: 5.35 \nDEBUG: value: 5.35 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/field_aperture_y@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/field_aperture_y@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/lens_mode): &lt;HDF5 dataset \"lens_mode\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/lens_mode): &lt;HDF5 dataset \"lens_mode\": shape (), type \"|O\"&gt;\nvalue: 20180430_KPEEM_M_-2.5_FoV6.2_rezAA_20ToF_focused.sav \nDEBUG: value: 20180430_KPEEM_M_-2.5_FoV6.2_rezAA_20ToF_focused.sav \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/lens_mode\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/lens_mode\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/lens_mode):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/lens_mode):\nsetting for the electron analyser lens\nDEBUG: setting for the electron analyser lens\n===== FIELD (//entry/instrument/analyser/magnification): &lt;HDF5 dataset \"magnification\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/magnification): &lt;HDF5 dataset \"magnification\": shape (), type \"&lt;f8\"&gt;\nvalue: -1.5 \nDEBUG: value: -1.5 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/pass_energy): &lt;HDF5 dataset \"pass_energy\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/pass_energy): &lt;HDF5 dataset \"pass_energy\": shape (), type \"&lt;i8\"&gt;\nvalue: 20 \nDEBUG: value: 20 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy):\nenergy of the electrons on the mean path of the analyser\nDEBUG: energy of the electrons on the mean path of the analyser\n===== ATTRS (//entry/instrument/analyser/pass_energy@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/pass_energy@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy@units [NX_ENERGY]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/pass_energy@units [NX_ENERGY]\n===== FIELD (//entry/instrument/analyser/projection): &lt;HDF5 dataset \"projection\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/projection): &lt;HDF5 dataset \"projection\": shape (), type \"|O\"&gt;\nvalue: reciprocal \nDEBUG: value: reciprocal \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/region_origin): &lt;HDF5 dataset \"region_origin\": shape (2,), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/region_origin): &lt;HDF5 dataset \"region_origin\": shape (2,), type \"&lt;i8\"&gt;\nvalue: [0 0] \nDEBUG: value: [0 0] \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_INT']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_origin\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_origin\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_origin):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_origin):\norigin of rectangular region selected for readout\nDEBUG: origin of rectangular region selected for readout\n===== FIELD (//entry/instrument/analyser/region_size): &lt;HDF5 dataset \"region_size\": shape (2,), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/region_size): &lt;HDF5 dataset \"region_size\": shape (2,), type \"&lt;i8\"&gt;\nvalue: [ 80 146] \nDEBUG: value: [ 80 146] \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_INT']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_size\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_size\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_size):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/region_size):\nsize of rectangular region selected for readout\nDEBUG: size of rectangular region selected for readout\n===== FIELD (//entry/instrument/analyser/sensor_count): &lt;HDF5 dataset \"sensor_count\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/sensor_count): &lt;HDF5 dataset \"sensor_count\": shape (), type \"&lt;i8\"&gt;\nvalue: 4 \nDEBUG: value: 4 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/analyser/sensor_size): &lt;HDF5 dataset \"sensor_size\": shape (2,), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/sensor_size): &lt;HDF5 dataset \"sensor_size\": shape (2,), type \"&lt;i8\"&gt;\nvalue: [ 80 146] \nDEBUG: value: [ 80 146] \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_INT']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/sensor_size\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/sensor_size\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/sensor_size):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/sensor_size):\nnumber of raw active elements in each dimension\nDEBUG: number of raw active elements in each dimension\n===== FIELD (//entry/instrument/analyser/time_per_channel): &lt;HDF5 dataset \"time_per_channel\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/time_per_channel): &lt;HDF5 dataset \"time_per_channel\": shape (), type \"&lt;i8\"&gt;\nvalue: 7200 \nDEBUG: value: 7200 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel):\ntodo: define more clearly\nDEBUG: todo: define more clearly\n===== ATTRS (//entry/instrument/analyser/time_per_channel@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/time_per_channel@units)\nvalue: s \nDEBUG: value: s \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel@units [NX_TIME]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser/time_per_channel@units [NX_TIME]\n===== FIELD (//entry/instrument/analyser/working_distance): &lt;HDF5 dataset \"working_distance\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/analyser/working_distance): &lt;HDF5 dataset \"working_distance\": shape (), type \"&lt;i8\"&gt;\nvalue: 4 \nDEBUG: value: 4 \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/analyser/working_distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/analyser/working_distance@units)\nvalue: mm \nDEBUG: value: mm \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== GROUP (//entry/instrument/beam_probe_0 [NXarpes::/NXentry/NXinstrument/NXbeam]): &lt;HDF5 group \"/entry/instrument/beam_probe_0\" (7 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/beam_probe_0 [NXarpes::/NXentry/NXinstrument/NXbeam]): &lt;HDF5 group \"/entry/instrument/beam_probe_0\" (7 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nclasses:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXinstrument.nxdl.xml:/BEAM):\nDEBUG: documentation (NXinstrument.nxdl.xml:/BEAM):\n\nDEBUG: \ndocumentation (NXbeam.nxdl.xml:):\nDEBUG: documentation (NXbeam.nxdl.xml:):\n\n        Properties of the neutron or X-ray beam at a given location. \n\n        This group is intended to be referenced\n        by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is\n        especially valuable in storing the results of instrument simulations in which it is useful\n        to specify the beam profile, time distribution etc. at each beamline component. Otherwise,\n        its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron\n        scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is\n        considered as a beamline component and this group may be defined as a subgroup directly inside\n        :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an \n        :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).\n\n        Note that ``incident_wavelength``, ``incident_energy``, and related fields can be a scalar values or arrays, depending on the use case.\n        To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred\n        by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.\n\nDEBUG: \n        Properties of the neutron or X-ray beam at a given location. \n\n        This group is intended to be referenced\n        by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is\n        especially valuable in storing the results of instrument simulations in which it is useful\n        to specify the beam profile, time distribution etc. at each beamline component. Otherwise,\n        its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron\n        scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is\n        considered as a beamline component and this group may be defined as a subgroup directly inside\n        :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an \n        :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).\n\n        Note that ``incident_wavelength``, ``incident_energy``, and related fields can be a scalar values or arrays, depending on the use case.\n        To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred\n        by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/beam_probe_0@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0@NX_class)\nvalue: NXbeam \nDEBUG: value: NXbeam \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nclasses:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_probe_0/distance): &lt;HDF5 dataset \"distance\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/distance): &lt;HDF5 dataset \"distance\": shape (), type \"&lt;i8\"&gt;\nvalue: 0 \nDEBUG: value: 0 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/distance\nDEBUG: classes:\nNXbeam.nxdl.xml:/distance\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/distance):\nDEBUG: documentation (NXbeam.nxdl.xml:/distance):\nDistance from sample. Note, it is recommended to use NXtransformations instead.\nDEBUG: Distance from sample. Note, it is recommended to use NXtransformations instead.\n===== ATTRS (//entry/instrument/beam_probe_0/distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0/distance@units)\nvalue: cm \nDEBUG: value: cm \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/distance\nDEBUG: classes:\nNXbeam.nxdl.xml:/distance\nNXbeam.nxdl.xml:/distance@units [NX_LENGTH]\nDEBUG: NXbeam.nxdl.xml:/distance@units [NX_LENGTH]\n===== FIELD (//entry/instrument/beam_probe_0/photon_energy): &lt;HDF5 dataset \"photon_energy\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/photon_energy): &lt;HDF5 dataset \"photon_energy\": shape (), type \"&lt;f8\"&gt;\nvalue: 36.49699020385742 \nDEBUG: value: 36.49699020385742 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_probe_0/photon_energy@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0/photon_energy@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_probe_0/polarization_angle): &lt;HDF5 dataset \"polarization_angle\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/polarization_angle): &lt;HDF5 dataset \"polarization_angle\": shape (), type \"&lt;f8\"&gt;\nvalue: 0.0 \nDEBUG: value: 0.0 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_probe_0/polarization_angle@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0/polarization_angle@units)\nvalue: deg \nDEBUG: value: deg \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_probe_0/polarization_ellipticity): &lt;HDF5 dataset \"polarization_ellipticity\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/polarization_ellipticity): &lt;HDF5 dataset \"polarization_ellipticity\": shape (), type \"&lt;f8\"&gt;\nvalue: 0.0 \nDEBUG: value: 0.0 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_probe_0/pulse_duration): &lt;HDF5 dataset \"pulse_duration\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/pulse_duration): &lt;HDF5 dataset \"pulse_duration\": shape (), type \"&lt;i8\"&gt;\nvalue: 70 \nDEBUG: value: 70 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/pulse_duration\nDEBUG: classes:\nNXbeam.nxdl.xml:/pulse_duration\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/pulse_duration):\nDEBUG: documentation (NXbeam.nxdl.xml:/pulse_duration):\n\n             FWHM duration of the pulses at the given location.\n\nDEBUG: \n             FWHM duration of the pulses at the given location.\n\n===== ATTRS (//entry/instrument/beam_probe_0/pulse_duration@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0/pulse_duration@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/pulse_duration\nDEBUG: classes:\nNXbeam.nxdl.xml:/pulse_duration\nNXbeam.nxdl.xml:/pulse_duration@units [NX_TIME]\nDEBUG: NXbeam.nxdl.xml:/pulse_duration@units [NX_TIME]\n===== FIELD (//entry/instrument/beam_probe_0/size_x): &lt;HDF5 dataset \"size_x\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/size_x): &lt;HDF5 dataset \"size_x\": shape (), type \"&lt;i8\"&gt;\nvalue: 500 \nDEBUG: value: 500 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_probe_0/size_x@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0/size_x@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_probe_0/size_y): &lt;HDF5 dataset \"size_y\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_probe_0/size_y): &lt;HDF5 dataset \"size_y\": shape (), type \"&lt;i8\"&gt;\nvalue: 200 \nDEBUG: value: 200 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_probe_0/size_y@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_probe_0/size_y@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== GROUP (//entry/instrument/beam_pump_0 [NXarpes::/NXentry/NXinstrument/NXbeam]): &lt;HDF5 group \"/entry/instrument/beam_pump_0\" (11 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/beam_pump_0 [NXarpes::/NXentry/NXinstrument/NXbeam]): &lt;HDF5 group \"/entry/instrument/beam_pump_0\" (11 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nclasses:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXinstrument.nxdl.xml:/BEAM):\nDEBUG: documentation (NXinstrument.nxdl.xml:/BEAM):\n\nDEBUG: \ndocumentation (NXbeam.nxdl.xml:):\nDEBUG: documentation (NXbeam.nxdl.xml:):\n\n        Properties of the neutron or X-ray beam at a given location. \n\n        This group is intended to be referenced\n        by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is\n        especially valuable in storing the results of instrument simulations in which it is useful\n        to specify the beam profile, time distribution etc. at each beamline component. Otherwise,\n        its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron\n        scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is\n        considered as a beamline component and this group may be defined as a subgroup directly inside\n        :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an \n        :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).\n\n        Note that ``incident_wavelength``, ``incident_energy``, and related fields can be a scalar values or arrays, depending on the use case.\n        To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred\n        by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.\n\nDEBUG: \n        Properties of the neutron or X-ray beam at a given location. \n\n        This group is intended to be referenced\n        by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is\n        especially valuable in storing the results of instrument simulations in which it is useful\n        to specify the beam profile, time distribution etc. at each beamline component. Otherwise,\n        its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron\n        scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is\n        considered as a beamline component and this group may be defined as a subgroup directly inside\n        :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an \n        :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).\n\n        Note that ``incident_wavelength``, ``incident_energy``, and related fields can be a scalar values or arrays, depending on the use case.\n        To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred\n        by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/beam_pump_0@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0@NX_class)\nvalue: NXbeam \nDEBUG: value: NXbeam \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nclasses:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXinstrument.nxdl.xml:/BEAM\nNXbeam.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_pump_0/average_power): &lt;HDF5 dataset \"average_power\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/average_power): &lt;HDF5 dataset \"average_power\": shape (), type \"&lt;f8\"&gt;\nvalue: 6.21289 \nDEBUG: value: 6.21289 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/average_power\nDEBUG: classes:\nNXbeam.nxdl.xml:/average_power\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/average_power):\nDEBUG: documentation (NXbeam.nxdl.xml:/average_power):\n\n             Average power at the at the given location.\n\nDEBUG: \n             Average power at the at the given location.\n\n===== ATTRS (//entry/instrument/beam_pump_0/average_power@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/average_power@units)\nvalue: uW \nDEBUG: value: uW \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/average_power\nDEBUG: classes:\nNXbeam.nxdl.xml:/average_power\nNXbeam.nxdl.xml:/average_power@units [NX_POWER]\nDEBUG: NXbeam.nxdl.xml:/average_power@units [NX_POWER]\n===== FIELD (//entry/instrument/beam_pump_0/center_wavelength): &lt;HDF5 dataset \"center_wavelength\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/center_wavelength): &lt;HDF5 dataset \"center_wavelength\": shape (), type \"&lt;i8\"&gt;\nvalue: 800 \nDEBUG: value: 800 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_pump_0/center_wavelength@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/center_wavelength@units)\nvalue: nm \nDEBUG: value: nm \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_pump_0/distance): &lt;HDF5 dataset \"distance\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/distance): &lt;HDF5 dataset \"distance\": shape (), type \"&lt;i8\"&gt;\nvalue: 0 \nDEBUG: value: 0 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/distance\nDEBUG: classes:\nNXbeam.nxdl.xml:/distance\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/distance):\nDEBUG: documentation (NXbeam.nxdl.xml:/distance):\nDistance from sample. Note, it is recommended to use NXtransformations instead.\nDEBUG: Distance from sample. Note, it is recommended to use NXtransformations instead.\n===== ATTRS (//entry/instrument/beam_pump_0/distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/distance@units)\nvalue: cm \nDEBUG: value: cm \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/distance\nDEBUG: classes:\nNXbeam.nxdl.xml:/distance\nNXbeam.nxdl.xml:/distance@units [NX_LENGTH]\nDEBUG: NXbeam.nxdl.xml:/distance@units [NX_LENGTH]\n===== FIELD (//entry/instrument/beam_pump_0/fluence): &lt;HDF5 dataset \"fluence\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/fluence): &lt;HDF5 dataset \"fluence\": shape (), type \"&lt;i8\"&gt;\nvalue: 5 \nDEBUG: value: 5 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/fluence\nDEBUG: classes:\nNXbeam.nxdl.xml:/fluence\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/fluence):\nDEBUG: documentation (NXbeam.nxdl.xml:/fluence):\n\n             Incident energy fluence at the given location.\n\nDEBUG: \n             Incident energy fluence at the given location.\n\n===== ATTRS (//entry/instrument/beam_pump_0/fluence@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/fluence@units)\nvalue: mJ/cm^2 \nDEBUG: value: mJ/cm^2 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/fluence\nDEBUG: classes:\nNXbeam.nxdl.xml:/fluence\nNXbeam.nxdl.xml:/fluence@units [mJ/cm^2]\nDEBUG: NXbeam.nxdl.xml:/fluence@units [mJ/cm^2]\n===== FIELD (//entry/instrument/beam_pump_0/photon_energy): &lt;HDF5 dataset \"photon_energy\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/photon_energy): &lt;HDF5 dataset \"photon_energy\": shape (), type \"&lt;f8\"&gt;\nvalue: 1.55 \nDEBUG: value: 1.55 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_pump_0/photon_energy@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/photon_energy@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_pump_0/polarization_angle): &lt;HDF5 dataset \"polarization_angle\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/polarization_angle): &lt;HDF5 dataset \"polarization_angle\": shape (), type \"&lt;f8\"&gt;\nvalue: nan \nDEBUG: value: nan \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_pump_0/polarization_angle@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/polarization_angle@units)\nvalue: deg \nDEBUG: value: deg \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_pump_0/polarization_ellipticity): &lt;HDF5 dataset \"polarization_ellipticity\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/polarization_ellipticity): &lt;HDF5 dataset \"polarization_ellipticity\": shape (), type \"&lt;f8\"&gt;\nvalue: -1.0 \nDEBUG: value: -1.0 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_pump_0/pulse_duration): &lt;HDF5 dataset \"pulse_duration\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/pulse_duration): &lt;HDF5 dataset \"pulse_duration\": shape (), type \"&lt;i8\"&gt;\nvalue: 50 \nDEBUG: value: 50 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/pulse_duration\nDEBUG: classes:\nNXbeam.nxdl.xml:/pulse_duration\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/pulse_duration):\nDEBUG: documentation (NXbeam.nxdl.xml:/pulse_duration):\n\n             FWHM duration of the pulses at the given location.\n\nDEBUG: \n             FWHM duration of the pulses at the given location.\n\n===== ATTRS (//entry/instrument/beam_pump_0/pulse_duration@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/pulse_duration@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/pulse_duration\nDEBUG: classes:\nNXbeam.nxdl.xml:/pulse_duration\nNXbeam.nxdl.xml:/pulse_duration@units [NX_TIME]\nDEBUG: NXbeam.nxdl.xml:/pulse_duration@units [NX_TIME]\n===== FIELD (//entry/instrument/beam_pump_0/pulse_energy): &lt;HDF5 dataset \"pulse_energy\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/pulse_energy): &lt;HDF5 dataset \"pulse_energy\": shape (), type \"&lt;f8\"&gt;\nvalue: 1.24258 \nDEBUG: value: 1.24258 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/pulse_energy\nDEBUG: classes:\nNXbeam.nxdl.xml:/pulse_energy\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXbeam.nxdl.xml:/pulse_energy):\nDEBUG: documentation (NXbeam.nxdl.xml:/pulse_energy):\n\n             Energy of a single pulse at the given location.\n\nDEBUG: \n             Energy of a single pulse at the given location.\n\n===== ATTRS (//entry/instrument/beam_pump_0/pulse_energy@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/pulse_energy@units)\nvalue: nJ \nDEBUG: value: nJ \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']\nclasses:\nNXbeam.nxdl.xml:/pulse_energy\nDEBUG: classes:\nNXbeam.nxdl.xml:/pulse_energy\nNXbeam.nxdl.xml:/pulse_energy@units [NX_ENERGY]\nDEBUG: NXbeam.nxdl.xml:/pulse_energy@units [NX_ENERGY]\n===== FIELD (//entry/instrument/beam_pump_0/size_x): &lt;HDF5 dataset \"size_x\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/size_x): &lt;HDF5 dataset \"size_x\": shape (), type \"&lt;i8\"&gt;\nvalue: 500 \nDEBUG: value: 500 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_pump_0/size_x@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/size_x@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/beam_pump_0/size_y): &lt;HDF5 dataset \"size_y\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/beam_pump_0/size_y): &lt;HDF5 dataset \"size_y\": shape (), type \"&lt;i8\"&gt;\nvalue: 200 \nDEBUG: value: 200 \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/beam_pump_0/size_y@units)\nDEBUG: ===== ATTRS (//entry/instrument/beam_pump_0/size_y@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXbeam']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXbeam']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/energy_resolution): &lt;HDF5 dataset \"energy_resolution\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/energy_resolution): &lt;HDF5 dataset \"energy_resolution\": shape (), type \"&lt;i8\"&gt;\nvalue: 100 \nDEBUG: value: 100 \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/energy_resolution@units)\nDEBUG: ===== ATTRS (//entry/instrument/energy_resolution@units)\nvalue: meV \nDEBUG: value: meV \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== GROUP (//entry/instrument/manipulator [NXarpes::/NXentry/NXinstrument/NXpositioner]): &lt;HDF5 group \"/entry/instrument/manipulator\" (9 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/manipulator [NXarpes::/NXentry/NXinstrument/NXpositioner]): &lt;HDF5 group \"/entry/instrument/manipulator\" (9 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nclasses:\nNXinstrument.nxdl.xml:/POSITIONER\nNXpositioner.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXinstrument.nxdl.xml:/POSITIONER\nNXpositioner.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXinstrument.nxdl.xml:/POSITIONER):\nDEBUG: documentation (NXinstrument.nxdl.xml:/POSITIONER):\n\nDEBUG: \ndocumentation (NXpositioner.nxdl.xml:):\nDEBUG: documentation (NXpositioner.nxdl.xml:):\n\n        A generic positioner such as a motor or piezo-electric transducer.  \n\nDEBUG: \n        A generic positioner such as a motor or piezo-electric transducer.  \n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/manipulator@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator@NX_class)\nvalue: NXpositioner \nDEBUG: value: NXpositioner \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nclasses:\nNXinstrument.nxdl.xml:/POSITIONER\nNXpositioner.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXinstrument.nxdl.xml:/POSITIONER\nNXpositioner.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/pos_x1): &lt;HDF5 dataset \"pos_x1\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/pos_x1): &lt;HDF5 dataset \"pos_x1\": shape (), type \"&lt;f8\"&gt;\nvalue: 11.3 \nDEBUG: value: 11.3 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/pos_x1@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/pos_x1@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/pos_x2): &lt;HDF5 dataset \"pos_x2\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/pos_x2): &lt;HDF5 dataset \"pos_x2\": shape (), type \"&lt;f8\"&gt;\nvalue: 11.3 \nDEBUG: value: 11.3 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/pos_x2@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/pos_x2@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/pos_y): &lt;HDF5 dataset \"pos_y\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/pos_y): &lt;HDF5 dataset \"pos_y\": shape (), type \"&lt;f8\"&gt;\nvalue: 7.2 \nDEBUG: value: 7.2 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/pos_y@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/pos_y@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/pos_z1): &lt;HDF5 dataset \"pos_z1\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/pos_z1): &lt;HDF5 dataset \"pos_z1\": shape (), type \"&lt;f8\"&gt;\nvalue: 20.77 \nDEBUG: value: 20.77 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/pos_z1@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/pos_z1@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/pos_z2): &lt;HDF5 dataset \"pos_z2\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/pos_z2): &lt;HDF5 dataset \"pos_z2\": shape (), type \"&lt;f8\"&gt;\nvalue: 21.2 \nDEBUG: value: 21.2 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/pos_z2@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/pos_z2@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/pos_z3): &lt;HDF5 dataset \"pos_z3\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/pos_z3): &lt;HDF5 dataset \"pos_z3\": shape (), type \"&lt;f8\"&gt;\nvalue: 20.22 \nDEBUG: value: 20.22 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/pos_z3@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/pos_z3@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/sample_bias): &lt;HDF5 dataset \"sample_bias\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/sample_bias): &lt;HDF5 dataset \"sample_bias\": shape (), type \"&lt;i8\"&gt;\nvalue: 29 \nDEBUG: value: 29 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/sample_bias@target)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/sample_bias@target)\nvalue: /entry/instrument/manipulator/sample_bias \nDEBUG: value: /entry/instrument/manipulator/sample_bias \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/sample_bias@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/sample_bias@units)\nvalue: V \nDEBUG: value: V \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/sample_temperature): &lt;HDF5 dataset \"sample_temperature\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/sample_temperature): &lt;HDF5 dataset \"sample_temperature\": shape (), type \"&lt;i8\"&gt;\nvalue: 300 \nDEBUG: value: 300 \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/sample_temperature@target)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/sample_temperature@target)\nvalue: /entry/instrument/manipulator/sample_temperature \nDEBUG: value: /entry/instrument/manipulator/sample_temperature \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/manipulator/sample_temperature@units)\nDEBUG: ===== ATTRS (//entry/instrument/manipulator/sample_temperature@units)\nvalue: K \nDEBUG: value: K \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/manipulator/type): &lt;HDF5 dataset \"type\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/manipulator/type): &lt;HDF5 dataset \"type\": shape (), type \"|O\"&gt;\nvalue: Hexapod \nDEBUG: value: Hexapod \nclasspath: ['NXentry', 'NXinstrument', 'NXpositioner']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXpositioner']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== GROUP (//entry/instrument/monochromator [NXarpes::/NXentry/NXinstrument/NXmonochromator]): &lt;HDF5 group \"/entry/instrument/monochromator\" (3 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/monochromator [NXarpes::/NXentry/NXinstrument/NXmonochromator]): &lt;HDF5 group \"/entry/instrument/monochromator\" (3 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator\nNXinstrument.nxdl.xml:/MONOCHROMATOR\nNXmonochromator.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator\nNXinstrument.nxdl.xml:/MONOCHROMATOR\nNXmonochromator.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator):\n\nDEBUG: \ndocumentation (NXinstrument.nxdl.xml:/MONOCHROMATOR):\nDEBUG: documentation (NXinstrument.nxdl.xml:/MONOCHROMATOR):\n\nDEBUG: \ndocumentation (NXmonochromator.nxdl.xml:):\nDEBUG: documentation (NXmonochromator.nxdl.xml:):\n\n        A  wavelength defining device.\n\n        This is a base class for everything which\n        selects a wavelength or energy, be it a \n        monochromator crystal, a velocity selector,\n        an undulator or whatever.\n\n        The expected units are:\n\n        * wavelength: angstrom\n        * energy:     eV\n\n\nDEBUG: \n        A  wavelength defining device.\n\n        This is a base class for everything which\n        selects a wavelength or energy, be it a \n        monochromator crystal, a velocity selector,\n        an undulator or whatever.\n\n        The expected units are:\n\n        * wavelength: angstrom\n        * energy:     eV\n\n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/monochromator@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/monochromator@NX_class)\nvalue: NXmonochromator \nDEBUG: value: NXmonochromator \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator\nNXinstrument.nxdl.xml:/MONOCHROMATOR\nNXmonochromator.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator\nNXinstrument.nxdl.xml:/MONOCHROMATOR\nNXmonochromator.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/monochromator/energy): &lt;HDF5 dataset \"energy\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/monochromator/energy): &lt;HDF5 dataset \"energy\": shape (), type \"&lt;f8\"&gt;\nvalue: 36.49699020385742 \nDEBUG: value: 36.49699020385742 \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy):\n\nDEBUG: \n===== ATTRS (//entry/instrument/monochromator/energy@units)\nDEBUG: ===== ATTRS (//entry/instrument/monochromator/energy@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy@units [NX_ENERGY]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/monochromator/energy@units [NX_ENERGY]\n===== FIELD (//entry/instrument/monochromator/energy_error): &lt;HDF5 dataset \"energy_error\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/monochromator/energy_error): &lt;HDF5 dataset \"energy_error\": shape (), type \"&lt;f8\"&gt;\nvalue: 0.21867309510707855 \nDEBUG: value: 0.21867309510707855 \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_FLOAT']\nclasses:\nNXmonochromator.nxdl.xml:/energy_error\nDEBUG: classes:\nNXmonochromator.nxdl.xml:/energy_error\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nDEPRECATED - see https://github.com/nexusformat/definitions/issues/820\nDEBUG: DEPRECATED - see https://github.com/nexusformat/definitions/issues/820\ndocumentation (NXmonochromator.nxdl.xml:/energy_error):\nDEBUG: documentation (NXmonochromator.nxdl.xml:/energy_error):\nenergy standard deviation\nDEBUG: energy standard deviation\n===== ATTRS (//entry/instrument/monochromator/energy_error@units)\nDEBUG: ===== ATTRS (//entry/instrument/monochromator/energy_error@units)\nvalue: eV \nDEBUG: value: eV \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator', 'NX_FLOAT']\nclasses:\nNXmonochromator.nxdl.xml:/energy_error\nDEBUG: classes:\nNXmonochromator.nxdl.xml:/energy_error\nNXmonochromator.nxdl.xml:/energy_error@units [NX_ENERGY]\nDEBUG: NXmonochromator.nxdl.xml:/energy_error@units [NX_ENERGY]\n===== GROUP (//entry/instrument/monochromator/slit [NXarpes::/NXentry/NXinstrument/NXmonochromator/NXslit]): &lt;HDF5 group \"/entry/instrument/monochromator/slit\" (1 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/monochromator/slit [NXarpes::/NXentry/NXinstrument/NXmonochromator/NXslit]): &lt;HDF5 group \"/entry/instrument/monochromator/slit\" (1 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/monochromator/slit@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/monochromator/slit@NX_class)\nvalue: NXslit \nDEBUG: value: NXslit \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/monochromator/slit/y_gap): &lt;HDF5 dataset \"y_gap\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/monochromator/slit/y_gap): &lt;HDF5 dataset \"y_gap\": shape (), type \"&lt;f8\"&gt;\nvalue: 2000.04833984375 \nDEBUG: value: 2000.04833984375 \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/monochromator/slit/y_gap@units)\nDEBUG: ===== ATTRS (//entry/instrument/monochromator/slit/y_gap@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXmonochromator']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nvalue: HEXTOF @ PG-2, Flash \nDEBUG: value: HEXTOF @ PG-2, Flash \nclasspath: ['NXentry', 'NXinstrument', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NX_CHAR']\nclasses:\nNXinstrument.nxdl.xml:/name\nDEBUG: classes:\nNXinstrument.nxdl.xml:/name\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXinstrument.nxdl.xml:/name):\nDEBUG: documentation (NXinstrument.nxdl.xml:/name):\nName of instrument\nDEBUG: Name of instrument\n===== GROUP (//entry/instrument/source [NXarpes::/NXentry/NXinstrument/NXsource]): &lt;HDF5 group \"/entry/instrument/source\" (16 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/source [NXarpes::/NXentry/NXinstrument/NXsource]): &lt;HDF5 group \"/entry/instrument/source\" (16 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE):\n\nDEBUG: \ndocumentation (NXinstrument.nxdl.xml:/SOURCE):\nDEBUG: documentation (NXinstrument.nxdl.xml:/SOURCE):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:):\nDEBUG: documentation (NXsource.nxdl.xml:):\n\n        Radiation source emitting a beam.\n\n        Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).\n        This base class can also be used to describe neutron or x-ray storage ring/facilities.\n\nDEBUG: \n        Radiation source emitting a beam.\n\n        Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).\n        This base class can also be used to describe neutron or x-ray storage ring/facilities.\n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/source@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/source@NX_class)\nvalue: NXsource \nDEBUG: value: NXsource \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/source/bunch_distance): &lt;HDF5 dataset \"bunch_distance\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/bunch_distance): &lt;HDF5 dataset \"bunch_distance\": shape (), type \"&lt;i8\"&gt;\nvalue: 1 \nDEBUG: value: 1 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_distance\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_distance\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/bunch_distance):\nDEBUG: documentation (NXsource.nxdl.xml:/bunch_distance):\nFor storage rings, time between bunches\nDEBUG: For storage rings, time between bunches\n===== ATTRS (//entry/instrument/source/bunch_distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/bunch_distance@units)\nvalue: us \nDEBUG: value: us \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_distance\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_distance\nNXsource.nxdl.xml:/bunch_distance@units [NX_TIME]\nDEBUG: NXsource.nxdl.xml:/bunch_distance@units [NX_TIME]\n===== FIELD (//entry/instrument/source/bunch_length): &lt;HDF5 dataset \"bunch_length\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/bunch_length): &lt;HDF5 dataset \"bunch_length\": shape (), type \"&lt;i8\"&gt;\nvalue: 100 \nDEBUG: value: 100 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_length\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_length\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/bunch_length):\nDEBUG: documentation (NXsource.nxdl.xml:/bunch_length):\nFor storage rings, temporal length of the bunch\nDEBUG: For storage rings, temporal length of the bunch\n===== ATTRS (//entry/instrument/source/bunch_length@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/bunch_length@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_length\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_length\nNXsource.nxdl.xml:/bunch_length@units [NX_TIME]\nDEBUG: NXsource.nxdl.xml:/bunch_length@units [NX_TIME]\n===== FIELD (//entry/instrument/source/burst_distance): &lt;HDF5 dataset \"burst_distance\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/burst_distance): &lt;HDF5 dataset \"burst_distance\": shape (), type \"&lt;f8\"&gt;\nvalue: 199.5 \nDEBUG: value: 199.5 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/source/burst_distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/burst_distance@units)\nvalue: ms \nDEBUG: value: ms \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source/burst_length): &lt;HDF5 dataset \"burst_length\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/burst_length): &lt;HDF5 dataset \"burst_length\": shape (), type \"&lt;i8\"&gt;\nvalue: 500 \nDEBUG: value: 500 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/source/burst_length@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/burst_length@units)\nvalue: us \nDEBUG: value: us \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source/burst_number_end): &lt;HDF5 dataset \"burst_number_end\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/burst_number_end): &lt;HDF5 dataset \"burst_number_end\": shape (), type \"&lt;i8\"&gt;\nvalue: 102680129 \nDEBUG: value: 102680129 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source/burst_number_start): &lt;HDF5 dataset \"burst_number_start\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/burst_number_start): &lt;HDF5 dataset \"burst_number_start\": shape (), type \"&lt;i8\"&gt;\nvalue: 102644001 \nDEBUG: value: 102644001 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source/current): &lt;HDF5 dataset \"current\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/current): &lt;HDF5 dataset \"current\": shape (), type \"&lt;i8\"&gt;\nvalue: 1 \nDEBUG: value: 1 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/current\nDEBUG: classes:\nNXsource.nxdl.xml:/current\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/current):\nDEBUG: documentation (NXsource.nxdl.xml:/current):\nAccelerator, X-ray tube, or storage ring current\nDEBUG: Accelerator, X-ray tube, or storage ring current\n===== ATTRS (//entry/instrument/source/current@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/current@units)\nvalue: uA \nDEBUG: value: uA \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/current\nDEBUG: classes:\nNXsource.nxdl.xml:/current\nNXsource.nxdl.xml:/current@units [NX_CURRENT]\nDEBUG: NXsource.nxdl.xml:/current@units [NX_CURRENT]\n===== FIELD (//entry/instrument/source/energy): &lt;HDF5 dataset \"energy\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/energy): &lt;HDF5 dataset \"energy\": shape (), type \"&lt;i8\"&gt;\nvalue: 427 \nDEBUG: value: 427 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/energy\nDEBUG: classes:\nNXsource.nxdl.xml:/energy\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/energy):\nDEBUG: documentation (NXsource.nxdl.xml:/energy):\n\n            Source energy. Typically, this would be the energy of\n            the emitted beam. For storage rings, this would be\n            the particle beam energy.\n\nDEBUG: \n            Source energy. Typically, this would be the energy of\n            the emitted beam. For storage rings, this would be\n            the particle beam energy.\n\n===== ATTRS (//entry/instrument/source/energy@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/energy@units)\nvalue: MeV \nDEBUG: value: MeV \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/energy\nDEBUG: classes:\nNXsource.nxdl.xml:/energy\nNXsource.nxdl.xml:/energy@units [NX_ENERGY]\nDEBUG: NXsource.nxdl.xml:/energy@units [NX_ENERGY]\n===== FIELD (//entry/instrument/source/frequency): &lt;HDF5 dataset \"frequency\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/frequency): &lt;HDF5 dataset \"frequency\": shape (), type \"&lt;i8\"&gt;\nvalue: 10 \nDEBUG: value: 10 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/frequency\nDEBUG: classes:\nNXsource.nxdl.xml:/frequency\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/frequency):\nDEBUG: documentation (NXsource.nxdl.xml:/frequency):\nFrequency of pulsed source\nDEBUG: Frequency of pulsed source\n===== ATTRS (//entry/instrument/source/frequency@units)\nDEBUG: ===== ATTRS (//entry/instrument/source/frequency@units)\nvalue: Hz \nDEBUG: value: Hz \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/frequency\nDEBUG: classes:\nNXsource.nxdl.xml:/frequency\nNXsource.nxdl.xml:/frequency@units [NX_FREQUENCY]\nDEBUG: NXsource.nxdl.xml:/frequency@units [NX_FREQUENCY]\n===== FIELD (//entry/instrument/source/mode): &lt;HDF5 dataset \"mode\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/mode): &lt;HDF5 dataset \"mode\": shape (), type \"|O\"&gt;\nvalue: Burst \nDEBUG: value: Burst \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXsource.nxdl.xml:/mode\nDEBUG: classes:\nNXsource.nxdl.xml:/mode\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nenumeration (NXsource.nxdl.xml:/mode):\nDEBUG: enumeration (NXsource.nxdl.xml:/mode):\n-&gt; Single Bunch\nDEBUG: -&gt; Single Bunch\n-&gt; Multi Bunch\nDEBUG: -&gt; Multi Bunch\ndocumentation (NXsource.nxdl.xml:/mode):\nDEBUG: documentation (NXsource.nxdl.xml:/mode):\nsource operating mode\nDEBUG: source operating mode\n===== FIELD (//entry/instrument/source/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nvalue: FLASH \nDEBUG: value: FLASH \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name\nNXsource.nxdl.xml:/name\nNXcomponent.nxdl.xml:/name\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name\nNXsource.nxdl.xml:/name\nNXcomponent.nxdl.xml:/name\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:/name):\nDEBUG: documentation (NXsource.nxdl.xml:/name):\nName of source\nDEBUG: Name of source\ndocumentation (NXcomponent.nxdl.xml:/name):\nDEBUG: documentation (NXcomponent.nxdl.xml:/name):\n\n            Name of the component.\n\nDEBUG: \n            Name of the component.\n\n===== FIELD (//entry/instrument/source/number_of_bunches): &lt;HDF5 dataset \"number_of_bunches\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/number_of_bunches): &lt;HDF5 dataset \"number_of_bunches\": shape (), type \"&lt;i8\"&gt;\nvalue: 500 \nDEBUG: value: 500 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_INT']\nclasses:\nNXsource.nxdl.xml:/number_of_bunches\nDEBUG: classes:\nNXsource.nxdl.xml:/number_of_bunches\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/number_of_bunches):\nDEBUG: documentation (NXsource.nxdl.xml:/number_of_bunches):\nFor storage rings, the number of bunches in use.\nDEBUG: For storage rings, the number of bunches in use.\n===== FIELD (//entry/instrument/source/number_of_bursts): &lt;HDF5 dataset \"number_of_bursts\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/number_of_bursts): &lt;HDF5 dataset \"number_of_bursts\": shape (), type \"&lt;i8\"&gt;\nvalue: 1 \nDEBUG: value: 1 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source/probe): &lt;HDF5 dataset \"probe\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/probe): &lt;HDF5 dataset \"probe\": shape (), type \"|O\"&gt;\nvalue: x-ray \nDEBUG: value: x-ray \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe\nNXsource.nxdl.xml:/probe\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe\nNXsource.nxdl.xml:/probe\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\nDEBUG: enumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\n-&gt; x-ray\nDEBUG: -&gt; x-ray\nenumeration (NXsource.nxdl.xml:/probe):\nDEBUG: enumeration (NXsource.nxdl.xml:/probe):\n-&gt; neutron\nDEBUG: -&gt; neutron\n-&gt; photon\nDEBUG: -&gt; photon\n-&gt; x-ray\nDEBUG: -&gt; x-ray\n-&gt; muon\nDEBUG: -&gt; muon\n-&gt; electron\nDEBUG: -&gt; electron\n-&gt; ultraviolet\nDEBUG: -&gt; ultraviolet\n-&gt; visible light\nDEBUG: -&gt; visible light\n-&gt; positron\nDEBUG: -&gt; positron\n-&gt; proton\nDEBUG: -&gt; proton\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:/probe):\nDEBUG: documentation (NXsource.nxdl.xml:/probe):\ntype of radiation probe (pick one from the enumerated list and spell exactly)\nDEBUG: type of radiation probe (pick one from the enumerated list and spell exactly)\n===== FIELD (//entry/instrument/source/top_up): &lt;HDF5 dataset \"top_up\": shape (), type \"|b1\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/top_up): &lt;HDF5 dataset \"top_up\": shape (), type \"|b1\"&gt;\nvalue: True \nDEBUG: value: True \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_BOOLEAN']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_BOOLEAN']\nclasses:\nNXsource.nxdl.xml:/top_up\nDEBUG: classes:\nNXsource.nxdl.xml:/top_up\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/top_up):\nDEBUG: documentation (NXsource.nxdl.xml:/top_up):\nIs the synchrotron operating in top_up mode?\nDEBUG: Is the synchrotron operating in top_up mode?\n===== FIELD (//entry/instrument/source/type): &lt;HDF5 dataset \"type\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source/type): &lt;HDF5 dataset \"type\": shape (), type \"|O\"&gt;\nvalue: Free Electron Laser \nDEBUG: value: Free Electron Laser \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type\nNXsource.nxdl.xml:/type\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type\nNXsource.nxdl.xml:/type\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXsource.nxdl.xml:/type):\nDEBUG: enumeration (NXsource.nxdl.xml:/type):\n-&gt; Spallation Neutron Source\nDEBUG: -&gt; Spallation Neutron Source\n-&gt; Pulsed Reactor Neutron Source\nDEBUG: -&gt; Pulsed Reactor Neutron Source\n-&gt; Reactor Neutron Source\nDEBUG: -&gt; Reactor Neutron Source\n-&gt; Synchrotron X-ray Source\nDEBUG: -&gt; Synchrotron X-ray Source\n-&gt; Pulsed Muon Source\nDEBUG: -&gt; Pulsed Muon Source\n-&gt; Rotating Anode X-ray\nDEBUG: -&gt; Rotating Anode X-ray\n-&gt; Fixed Tube X-ray\nDEBUG: -&gt; Fixed Tube X-ray\n-&gt; UV Laser\nDEBUG: -&gt; UV Laser\n-&gt; Free-Electron Laser\nDEBUG: -&gt; Free-Electron Laser\n-&gt; Optical Laser\nDEBUG: -&gt; Optical Laser\n-&gt; Ion Source\nDEBUG: -&gt; Ion Source\n-&gt; UV Plasma Source\nDEBUG: -&gt; UV Plasma Source\n-&gt; Metal Jet X-ray\nDEBUG: -&gt; Metal Jet X-ray\n-&gt; Laser\nDEBUG: -&gt; Laser\n-&gt; Dye Laser\nDEBUG: -&gt; Dye Laser\n-&gt; Broadband Tunable Light Source\nDEBUG: -&gt; Broadband Tunable Light Source\n-&gt; Halogen Lamp\nDEBUG: -&gt; Halogen Lamp\n-&gt; LED\nDEBUG: -&gt; LED\n-&gt; Mercury Cadmium Telluride Lamp\nDEBUG: -&gt; Mercury Cadmium Telluride Lamp\n-&gt; Deuterium Lamp\nDEBUG: -&gt; Deuterium Lamp\n-&gt; Xenon Lamp\nDEBUG: -&gt; Xenon Lamp\n-&gt; Globar\nDEBUG: -&gt; Globar\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:/type):\nDEBUG: documentation (NXsource.nxdl.xml:/type):\ntype of radiation source (pick one from the enumerated list and spell exactly)\nDEBUG: type of radiation source (pick one from the enumerated list and spell exactly)\n===== GROUP (//entry/instrument/source_pump [NXarpes::/NXentry/NXinstrument/NXsource]): &lt;HDF5 group \"/entry/instrument/source_pump\" (12 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/source_pump [NXarpes::/NXentry/NXinstrument/NXsource]): &lt;HDF5 group \"/entry/instrument/source_pump\" (12 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE):\n\nDEBUG: \ndocumentation (NXinstrument.nxdl.xml:/SOURCE):\nDEBUG: documentation (NXinstrument.nxdl.xml:/SOURCE):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:):\nDEBUG: documentation (NXsource.nxdl.xml:):\n\n        Radiation source emitting a beam.\n\n        Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).\n        This base class can also be used to describe neutron or x-ray storage ring/facilities.\n\nDEBUG: \n        Radiation source emitting a beam.\n\n        Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).\n        This base class can also be used to describe neutron or x-ray storage ring/facilities.\n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/source_pump@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump@NX_class)\nvalue: NXsource \nDEBUG: value: NXsource \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE\nNXinstrument.nxdl.xml:/SOURCE\nNXsource.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/instrument/source_pump/bunch_distance): &lt;HDF5 dataset \"bunch_distance\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/bunch_distance): &lt;HDF5 dataset \"bunch_distance\": shape (), type \"&lt;i8\"&gt;\nvalue: 1 \nDEBUG: value: 1 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_distance\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_distance\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/bunch_distance):\nDEBUG: documentation (NXsource.nxdl.xml:/bunch_distance):\nFor storage rings, time between bunches\nDEBUG: For storage rings, time between bunches\n===== ATTRS (//entry/instrument/source_pump/bunch_distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump/bunch_distance@units)\nvalue: us \nDEBUG: value: us \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_distance\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_distance\nNXsource.nxdl.xml:/bunch_distance@units [NX_TIME]\nDEBUG: NXsource.nxdl.xml:/bunch_distance@units [NX_TIME]\n===== FIELD (//entry/instrument/source_pump/bunch_length): &lt;HDF5 dataset \"bunch_length\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/bunch_length): &lt;HDF5 dataset \"bunch_length\": shape (), type \"&lt;i8\"&gt;\nvalue: 50 \nDEBUG: value: 50 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_length\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_length\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/bunch_length):\nDEBUG: documentation (NXsource.nxdl.xml:/bunch_length):\nFor storage rings, temporal length of the bunch\nDEBUG: For storage rings, temporal length of the bunch\n===== ATTRS (//entry/instrument/source_pump/bunch_length@units)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump/bunch_length@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/bunch_length\nDEBUG: classes:\nNXsource.nxdl.xml:/bunch_length\nNXsource.nxdl.xml:/bunch_length@units [NX_TIME]\nDEBUG: NXsource.nxdl.xml:/bunch_length@units [NX_TIME]\n===== FIELD (//entry/instrument/source_pump/burst_distance): &lt;HDF5 dataset \"burst_distance\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/burst_distance): &lt;HDF5 dataset \"burst_distance\": shape (), type \"&lt;f8\"&gt;\nvalue: 199.6 \nDEBUG: value: 199.6 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/source_pump/burst_distance@units)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump/burst_distance@units)\nvalue: ms \nDEBUG: value: ms \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source_pump/burst_length): &lt;HDF5 dataset \"burst_length\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/burst_length): &lt;HDF5 dataset \"burst_length\": shape (), type \"&lt;i8\"&gt;\nvalue: 400 \nDEBUG: value: 400 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/source_pump/burst_length@units)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump/burst_length@units)\nvalue: us \nDEBUG: value: us \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source_pump/frequency): &lt;HDF5 dataset \"frequency\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/frequency): &lt;HDF5 dataset \"frequency\": shape (), type \"&lt;i8\"&gt;\nvalue: 10 \nDEBUG: value: 10 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/frequency\nDEBUG: classes:\nNXsource.nxdl.xml:/frequency\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/frequency):\nDEBUG: documentation (NXsource.nxdl.xml:/frequency):\nFrequency of pulsed source\nDEBUG: Frequency of pulsed source\n===== ATTRS (//entry/instrument/source_pump/frequency@units)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump/frequency@units)\nvalue: Hz \nDEBUG: value: Hz \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']\nclasses:\nNXsource.nxdl.xml:/frequency\nDEBUG: classes:\nNXsource.nxdl.xml:/frequency\nNXsource.nxdl.xml:/frequency@units [NX_FREQUENCY]\nDEBUG: NXsource.nxdl.xml:/frequency@units [NX_FREQUENCY]\n===== FIELD (//entry/instrument/source_pump/mode): &lt;HDF5 dataset \"mode\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/mode): &lt;HDF5 dataset \"mode\": shape (), type \"|O\"&gt;\nvalue: Burst \nDEBUG: value: Burst \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXsource.nxdl.xml:/mode\nDEBUG: classes:\nNXsource.nxdl.xml:/mode\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\nenumeration (NXsource.nxdl.xml:/mode):\nDEBUG: enumeration (NXsource.nxdl.xml:/mode):\n-&gt; Single Bunch\nDEBUG: -&gt; Single Bunch\n-&gt; Multi Bunch\nDEBUG: -&gt; Multi Bunch\ndocumentation (NXsource.nxdl.xml:/mode):\nDEBUG: documentation (NXsource.nxdl.xml:/mode):\nsource operating mode\nDEBUG: source operating mode\n===== FIELD (//entry/instrument/source_pump/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nvalue: User Laser @ FLASH \nDEBUG: value: User Laser @ FLASH \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name\nNXsource.nxdl.xml:/name\nNXcomponent.nxdl.xml:/name\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name\nNXsource.nxdl.xml:/name\nNXcomponent.nxdl.xml:/name\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/name):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:/name):\nDEBUG: documentation (NXsource.nxdl.xml:/name):\nName of source\nDEBUG: Name of source\ndocumentation (NXcomponent.nxdl.xml:/name):\nDEBUG: documentation (NXcomponent.nxdl.xml:/name):\n\n            Name of the component.\n\nDEBUG: \n            Name of the component.\n\n===== FIELD (//entry/instrument/source_pump/number_of_bunches): &lt;HDF5 dataset \"number_of_bunches\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/number_of_bunches): &lt;HDF5 dataset \"number_of_bunches\": shape (), type \"&lt;i8\"&gt;\nvalue: 400 \nDEBUG: value: 400 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_INT']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_INT']\nclasses:\nNXsource.nxdl.xml:/number_of_bunches\nDEBUG: classes:\nNXsource.nxdl.xml:/number_of_bunches\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsource.nxdl.xml:/number_of_bunches):\nDEBUG: documentation (NXsource.nxdl.xml:/number_of_bunches):\nFor storage rings, the number of bunches in use.\nDEBUG: For storage rings, the number of bunches in use.\n===== FIELD (//entry/instrument/source_pump/number_of_bursts): &lt;HDF5 dataset \"number_of_bursts\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/number_of_bursts): &lt;HDF5 dataset \"number_of_bursts\": shape (), type \"&lt;i8\"&gt;\nvalue: 1 \nDEBUG: value: 1 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source_pump/probe): &lt;HDF5 dataset \"probe\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/probe): &lt;HDF5 dataset \"probe\": shape (), type \"|O\"&gt;\nvalue: NIR \nDEBUG: value: NIR \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe\nNXsource.nxdl.xml:/probe\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe\nNXsource.nxdl.xml:/probe\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\nDEBUG: enumeration (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\n-&gt; x-ray\nDEBUG: -&gt; x-ray\nenumeration (NXsource.nxdl.xml:/probe):\nDEBUG: enumeration (NXsource.nxdl.xml:/probe):\n-&gt; neutron\nDEBUG: -&gt; neutron\n-&gt; photon\nDEBUG: -&gt; photon\n-&gt; x-ray\nDEBUG: -&gt; x-ray\n-&gt; muon\nDEBUG: -&gt; muon\n-&gt; electron\nDEBUG: -&gt; electron\n-&gt; ultraviolet\nDEBUG: -&gt; ultraviolet\n-&gt; visible light\nDEBUG: -&gt; visible light\n-&gt; positron\nDEBUG: -&gt; positron\n-&gt; proton\nDEBUG: -&gt; proton\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/probe):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:/probe):\nDEBUG: documentation (NXsource.nxdl.xml:/probe):\ntype of radiation probe (pick one from the enumerated list and spell exactly)\nDEBUG: type of radiation probe (pick one from the enumerated list and spell exactly)\n===== FIELD (//entry/instrument/source_pump/rms_jitter): &lt;HDF5 dataset \"rms_jitter\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/rms_jitter): &lt;HDF5 dataset \"rms_jitter\": shape (), type \"&lt;f8\"&gt;\nvalue: 204.68816194453154 \nDEBUG: value: 204.68816194453154 \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/source_pump/rms_jitter@units)\nDEBUG: ===== ATTRS (//entry/instrument/source_pump/rms_jitter@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument', 'NXsource']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/source_pump/type): &lt;HDF5 dataset \"type\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/source_pump/type): &lt;HDF5 dataset \"type\": shape (), type \"|O\"&gt;\nvalue: OPCPA \nDEBUG: value: OPCPA \nclasspath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type\nNXsource.nxdl.xml:/type\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type\nNXsource.nxdl.xml:/type\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\nenumeration (NXsource.nxdl.xml:/type):\nDEBUG: enumeration (NXsource.nxdl.xml:/type):\n-&gt; Spallation Neutron Source\nDEBUG: -&gt; Spallation Neutron Source\n-&gt; Pulsed Reactor Neutron Source\nDEBUG: -&gt; Pulsed Reactor Neutron Source\n-&gt; Reactor Neutron Source\nDEBUG: -&gt; Reactor Neutron Source\n-&gt; Synchrotron X-ray Source\nDEBUG: -&gt; Synchrotron X-ray Source\n-&gt; Pulsed Muon Source\nDEBUG: -&gt; Pulsed Muon Source\n-&gt; Rotating Anode X-ray\nDEBUG: -&gt; Rotating Anode X-ray\n-&gt; Fixed Tube X-ray\nDEBUG: -&gt; Fixed Tube X-ray\n-&gt; UV Laser\nDEBUG: -&gt; UV Laser\n-&gt; Free-Electron Laser\nDEBUG: -&gt; Free-Electron Laser\n-&gt; Optical Laser\nDEBUG: -&gt; Optical Laser\n-&gt; Ion Source\nDEBUG: -&gt; Ion Source\n-&gt; UV Plasma Source\nDEBUG: -&gt; UV Plasma Source\n-&gt; Metal Jet X-ray\nDEBUG: -&gt; Metal Jet X-ray\n-&gt; Laser\nDEBUG: -&gt; Laser\n-&gt; Dye Laser\nDEBUG: -&gt; Dye Laser\n-&gt; Broadband Tunable Light Source\nDEBUG: -&gt; Broadband Tunable Light Source\n-&gt; Halogen Lamp\nDEBUG: -&gt; Halogen Lamp\n-&gt; LED\nDEBUG: -&gt; LED\n-&gt; Mercury Cadmium Telluride Lamp\nDEBUG: -&gt; Mercury Cadmium Telluride Lamp\n-&gt; Deuterium Lamp\nDEBUG: -&gt; Deuterium Lamp\n-&gt; Xenon Lamp\nDEBUG: -&gt; Xenon Lamp\n-&gt; Globar\nDEBUG: -&gt; Globar\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/SOURCE/type):\n\nDEBUG: \ndocumentation (NXsource.nxdl.xml:/type):\nDEBUG: documentation (NXsource.nxdl.xml:/type):\ntype of radiation source (pick one from the enumerated list and spell exactly)\nDEBUG: type of radiation source (pick one from the enumerated list and spell exactly)\n===== FIELD (//entry/instrument/spatial_resolution): &lt;HDF5 dataset \"spatial_resolution\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/spatial_resolution): &lt;HDF5 dataset \"spatial_resolution\": shape (), type \"&lt;i8\"&gt;\nvalue: 500 \nDEBUG: value: 500 \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/spatial_resolution@units)\nDEBUG: ===== ATTRS (//entry/instrument/spatial_resolution@units)\nvalue: um \nDEBUG: value: um \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/instrument/temporal_resolution): &lt;HDF5 dataset \"temporal_resolution\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/instrument/temporal_resolution): &lt;HDF5 dataset \"temporal_resolution\": shape (), type \"&lt;i8\"&gt;\nvalue: 100 \nDEBUG: value: 100 \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/instrument/temporal_resolution@units)\nDEBUG: ===== ATTRS (//entry/instrument/temporal_resolution@units)\nvalue: fs \nDEBUG: value: fs \nclasspath: ['NXentry', 'NXinstrument']\nDEBUG: classpath: ['NXentry', 'NXinstrument']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/run_cycle): &lt;HDF5 dataset \"run_cycle\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/run_cycle): &lt;HDF5 dataset \"run_cycle\": shape (), type \"|O\"&gt;\nvalue: 2018 User Run Block 2 \nDEBUG: value: 2018 User Run Block 2 \nclasspath: ['NXentry', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NX_CHAR']\nclasses:\nNXentry.nxdl.xml:/run_cycle\nDEBUG: classes:\nNXentry.nxdl.xml:/run_cycle\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXentry.nxdl.xml:/run_cycle):\nDEBUG: documentation (NXentry.nxdl.xml:/run_cycle):\nSuch as \"2007-3\". Some user facilities organize their beam time into run cycles.\nDEBUG: Such as \"2007-3\". Some user facilities organize their beam time into run cycles.\n===== GROUP (//entry/sample [NXarpes::/NXentry/NXsample]): &lt;HDF5 group \"/entry/sample\" (14 members)&gt;\nDEBUG: ===== GROUP (//entry/sample [NXarpes::/NXentry/NXsample]): &lt;HDF5 group \"/entry/sample\" (14 members)&gt;\nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE\nNXentry.nxdl.xml:/SAMPLE\nNXsample.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE\nNXentry.nxdl.xml:/SAMPLE\nNXsample.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/SAMPLE):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/SAMPLE):\n\nDEBUG: \ndocumentation (NXentry.nxdl.xml:/SAMPLE):\nDEBUG: documentation (NXentry.nxdl.xml:/SAMPLE):\n\nDEBUG: \ndocumentation (NXsample.nxdl.xml:):\nDEBUG: documentation (NXsample.nxdl.xml:):\n\n        Any information on the sample. \n\n        This could include scanned variables that\n        are associated with one of the data dimensions, e.g. the magnetic field, or\n        logged data, e.g. monitored temperature vs elapsed time.\n\nDEBUG: \n        Any information on the sample. \n\n        This could include scanned variables that\n        are associated with one of the data dimensions, e.g. the magnetic field, or\n        logged data, e.g. monitored temperature vs elapsed time.\n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/sample@NX_class)\nDEBUG: ===== ATTRS (//entry/sample@NX_class)\nvalue: NXsample \nDEBUG: value: NXsample \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE\nNXentry.nxdl.xml:/SAMPLE\nNXsample.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE\nNXentry.nxdl.xml:/SAMPLE\nNXsample.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n===== FIELD (//entry/sample/bias): &lt;HDF5 dataset \"bias\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/sample/bias): &lt;HDF5 dataset \"bias\": shape (), type \"&lt;i8\"&gt;\nvalue: 29 \nDEBUG: value: 29 \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/sample/bias@target)\nDEBUG: ===== ATTRS (//entry/sample/bias@target)\nvalue: /entry/instrument/manipulator/sample_bias \nDEBUG: value: /entry/instrument/manipulator/sample_bias \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/sample/bias@units)\nDEBUG: ===== ATTRS (//entry/sample/bias@units)\nvalue: V \nDEBUG: value: V \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/chem_id_cas): &lt;HDF5 dataset \"chem_id_cas\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/chem_id_cas): &lt;HDF5 dataset \"chem_id_cas\": shape (), type \"|O\"&gt;\nvalue: 12067-46-8 \nDEBUG: value: 12067-46-8 \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/chemical_name): &lt;HDF5 dataset \"chemical_name\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/chemical_name): &lt;HDF5 dataset \"chemical_name\": shape (), type \"|O\"&gt;\nvalue: Tungsten diselenide \nDEBUG: value: Tungsten diselenide \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/growth_method): &lt;HDF5 dataset \"growth_method\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/growth_method): &lt;HDF5 dataset \"growth_method\": shape (), type \"|O\"&gt;\nvalue: Chemical Vapor Deposition \nDEBUG: value: Chemical Vapor Deposition \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/layer): &lt;HDF5 dataset \"layer\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/layer): &lt;HDF5 dataset \"layer\": shape (), type \"|O\"&gt;\nvalue: bulk \nDEBUG: value: bulk \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/name): &lt;HDF5 dataset \"name\": shape (), type \"|O\"&gt;\nvalue: WSe2 \nDEBUG: value: WSe2 \nclasspath: ['NXentry', 'NXsample', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/name\nNXsample.nxdl.xml:/name\nNXcomponent.nxdl.xml:/name\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/name\nNXsample.nxdl.xml:/name\nNXcomponent.nxdl.xml:/name\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/SAMPLE/name):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/SAMPLE/name):\nDescriptive name of sample\nDEBUG: Descriptive name of sample\ndocumentation (NXsample.nxdl.xml:/name):\nDEBUG: documentation (NXsample.nxdl.xml:/name):\nDescriptive name of sample\nDEBUG: Descriptive name of sample\ndocumentation (NXcomponent.nxdl.xml:/name):\nDEBUG: documentation (NXcomponent.nxdl.xml:/name):\n\n            Name of the component.\n\nDEBUG: \n            Name of the component.\n\n===== FIELD (//entry/sample/preparation_method): &lt;HDF5 dataset \"preparation_method\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/preparation_method): &lt;HDF5 dataset \"preparation_method\": shape (), type \"|O\"&gt;\nvalue: in-vacuum cleave \nDEBUG: value: in-vacuum cleave \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/pressure): &lt;HDF5 dataset \"pressure\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/sample/pressure): &lt;HDF5 dataset \"pressure\": shape (), type \"&lt;f8\"&gt;\nvalue: 3.27e-10 \nDEBUG: value: 3.27e-10 \nclasspath: ['NXentry', 'NXsample', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_FLOAT']\nclasses:\nNXsample.nxdl.xml:/pressure\nDEBUG: classes:\nNXsample.nxdl.xml:/pressure\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsample.nxdl.xml:/pressure):\nDEBUG: documentation (NXsample.nxdl.xml:/pressure):\nApplied pressure\nDEBUG: Applied pressure\n===== ATTRS (//entry/sample/pressure@units)\nDEBUG: ===== ATTRS (//entry/sample/pressure@units)\nvalue: mbar \nDEBUG: value: mbar \nclasspath: ['NXentry', 'NXsample', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_FLOAT']\nclasses:\nNXsample.nxdl.xml:/pressure\nDEBUG: classes:\nNXsample.nxdl.xml:/pressure\nNXsample.nxdl.xml:/pressure@units [NX_PRESSURE]\nDEBUG: NXsample.nxdl.xml:/pressure@units [NX_PRESSURE]\n===== FIELD (//entry/sample/purity): &lt;HDF5 dataset \"purity\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/sample/purity): &lt;HDF5 dataset \"purity\": shape (), type \"&lt;f8\"&gt;\nvalue: 0.999 \nDEBUG: value: 0.999 \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/state): &lt;HDF5 dataset \"state\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/state): &lt;HDF5 dataset \"state\": shape (), type \"|O\"&gt;\nvalue: monocrystalline solid \nDEBUG: value: monocrystalline solid \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/surface_orientation): &lt;HDF5 dataset \"surface_orientation\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/surface_orientation): &lt;HDF5 dataset \"surface_orientation\": shape (), type \"|O\"&gt;\nvalue: 0001 \nDEBUG: value: 0001 \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/sample/temperature): &lt;HDF5 dataset \"temperature\": shape (), type \"&lt;i8\"&gt;\nDEBUG: ===== FIELD (//entry/sample/temperature): &lt;HDF5 dataset \"temperature\": shape (), type \"&lt;i8\"&gt;\nvalue: 300 \nDEBUG: value: 300 \nclasspath: ['NXentry', 'NXsample', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature):\n\nDEBUG: \n===== ATTRS (//entry/sample/temperature@target)\nDEBUG: ===== ATTRS (//entry/sample/temperature@target)\nvalue: /entry/instrument/manipulator/sample_temperature \nDEBUG: value: /entry/instrument/manipulator/sample_temperature \nclasspath: ['NXentry', 'NXsample', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature\n@target - IS NOT IN SCHEMA\nDEBUG: @target - IS NOT IN SCHEMA\n\nDEBUG: \n===== ATTRS (//entry/sample/temperature@units)\nDEBUG: ===== ATTRS (//entry/sample/temperature@units)\nvalue: K \nDEBUG: value: K \nclasspath: ['NXentry', 'NXsample', 'NX_NUMBER']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_NUMBER']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature\nNXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature@units [NX_TEMPERATURE]\nDEBUG: NXarpes.nxdl.xml:/ENTRY/SAMPLE/temperature@units [NX_TEMPERATURE]\n===== FIELD (//entry/sample/thickness): &lt;HDF5 dataset \"thickness\": shape (), type \"&lt;f8\"&gt;\nDEBUG: ===== FIELD (//entry/sample/thickness): &lt;HDF5 dataset \"thickness\": shape (), type \"&lt;f8\"&gt;\nvalue: 0.5 \nDEBUG: value: 0.5 \nclasspath: ['NXentry', 'NXsample', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_FLOAT']\nclasses:\nNXsample.nxdl.xml:/thickness\nDEBUG: classes:\nNXsample.nxdl.xml:/thickness\n&lt;&lt;OPTIONAL&gt;&gt;\nDEBUG: &lt;&lt;OPTIONAL&gt;&gt;\ndocumentation (NXsample.nxdl.xml:/thickness):\nDEBUG: documentation (NXsample.nxdl.xml:/thickness):\nsample thickness\nDEBUG: sample thickness\n===== ATTRS (//entry/sample/thickness@units)\nDEBUG: ===== ATTRS (//entry/sample/thickness@units)\nvalue: mm \nDEBUG: value: mm \nclasspath: ['NXentry', 'NXsample', 'NX_FLOAT']\nDEBUG: classpath: ['NXentry', 'NXsample', 'NX_FLOAT']\nclasses:\nNXsample.nxdl.xml:/thickness\nDEBUG: classes:\nNXsample.nxdl.xml:/thickness\nNXsample.nxdl.xml:/thickness@units [NX_LENGTH]\nDEBUG: NXsample.nxdl.xml:/thickness@units [NX_LENGTH]\n===== FIELD (//entry/sample/vendor): &lt;HDF5 dataset \"vendor\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/sample/vendor): &lt;HDF5 dataset \"vendor\": shape (), type \"|O\"&gt;\nvalue: HQ Graphene \nDEBUG: value: HQ Graphene \nclasspath: ['NXentry', 'NXsample']\nDEBUG: classpath: ['NXentry', 'NXsample']\nNOT IN SCHEMA\nDEBUG: NOT IN SCHEMA\n\nDEBUG: \n===== FIELD (//entry/start_time): &lt;HDF5 dataset \"start_time\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/start_time): &lt;HDF5 dataset \"start_time\": shape (), type \"|O\"&gt;\nvalue: 2018-05-01T07:22:00+02:00 \nDEBUG: value: 2018-05-01T07:22:00+02:00 \nclasspath: ['NXentry', 'NX_DATE_TIME']\nDEBUG: classpath: ['NXentry', 'NX_DATE_TIME']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/start_time\nNXentry.nxdl.xml:/start_time\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/start_time\nNXentry.nxdl.xml:/start_time\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/start_time):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/start_time):\n\nDEBUG: \ndocumentation (NXentry.nxdl.xml:/start_time):\nDEBUG: documentation (NXentry.nxdl.xml:/start_time):\nStarting time of measurement\nDEBUG: Starting time of measurement\n===== FIELD (//entry/title): &lt;HDF5 dataset \"title\": shape (), type \"|O\"&gt;\nDEBUG: ===== FIELD (//entry/title): &lt;HDF5 dataset \"title\": shape (), type \"|O\"&gt;\nvalue: Excited-state dynamics of WSe2 in the Valence Band and Core-Levels \nDEBUG: value: Excited-state dynamics of WSe2 in the Valence Band and Core-Levels \nclasspath: ['NXentry', 'NX_CHAR']\nDEBUG: classpath: ['NXentry', 'NX_CHAR']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/title\nNXentry.nxdl.xml:/title\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/title\nNXentry.nxdl.xml:/title\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/title):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/title):\n\nDEBUG: \ndocumentation (NXentry.nxdl.xml:/title):\nDEBUG: documentation (NXentry.nxdl.xml:/title):\nExtended title for entry\nDEBUG: Extended title for entry\n========================\nDEBUG: ========================\n=== Default Plotable ===\nDEBUG: === Default Plotable ===\n========================\nDEBUG: ========================\n\nDEBUG: \nNXentry has been identified: /entry\nDEBUG: NXentry has been identified: /entry\n\nDEBUG: \nNXdata group has been identified: /entry/data\nDEBUG: NXdata group has been identified: /entry/data\n===== GROUP (//entry/data [NXarpes::/NXentry/NXdata]): &lt;HDF5 group \"/entry/data\" (4 members)&gt;\nDEBUG: ===== GROUP (//entry/data [NXarpes::/NXentry/NXdata]): &lt;HDF5 group \"/entry/data\" (4 members)&gt;\n===== ATTRS (//entry/data@NX_class)\nDEBUG: ===== ATTRS (//entry/data@NX_class)\nvalue: NXdata \nDEBUG: value: NXdata \n===== ATTRS (//entry/data@axes)\nDEBUG: ===== ATTRS (//entry/data@axes)\nvalue: ['angles' 'energies' 'delays'] \nDEBUG: value: ['angles' 'energies' 'delays'] \n===== ATTRS (//entry/data@signal)\nDEBUG: ===== ATTRS (//entry/data@signal)\nvalue: data \nDEBUG: value: data \n\nDEBUG: \nSignal has been identified: /entry/data/data\nDEBUG: Signal has been identified: /entry/data/data\n===== FIELD (//entry/data/data): &lt;HDF5 dataset \"data\": shape (80, 146, 195), type \"&lt;f4\"&gt;\nDEBUG: ===== FIELD (//entry/data/data): &lt;HDF5 dataset \"data\": shape (80, 146, 195), type \"&lt;f4\"&gt;\nvalue: [[0. 0. 0. ... 0. 0. 0.] ...\nDEBUG: value: [[0. 0. 0. ... 0. 0. 0.] ...\nDataset referenced as NXdata SIGNAL\nDEBUG: Dataset referenced as NXdata SIGNAL\n===== ATTRS (//entry/data/data@target)\nDEBUG: ===== ATTRS (//entry/data/data@target)\nvalue: /entry/instrument/analyser/data \nDEBUG: value: /entry/instrument/analyser/data \n===== ATTRS (//entry/data/data@units)\nDEBUG: ===== ATTRS (//entry/data/data@units)\nvalue: counts \nDEBUG: value: counts \n\nDEBUG: \nFor Axis #0, 1 axes have been identified: [&lt;HDF5 dataset \"angles\": shape (80,), type \"&lt;f8\"&gt;]\nDEBUG: For Axis #0, 1 axes have been identified: [&lt;HDF5 dataset \"angles\": shape (80,), type \"&lt;f8\"&gt;]\n\nDEBUG: \nFor Axis #1, 1 axes have been identified: [&lt;HDF5 dataset \"energies\": shape (146,), type \"&lt;f8\"&gt;]\nDEBUG: For Axis #1, 1 axes have been identified: [&lt;HDF5 dataset \"energies\": shape (146,), type \"&lt;f8\"&gt;]\n\nDEBUG: \nFor Axis #2, 1 axes have been identified: [&lt;HDF5 dataset \"delays\": shape (195,), type \"&lt;f8\"&gt;]\nDEBUG: For Axis #2, 1 axes have been identified: [&lt;HDF5 dataset \"delays\": shape (195,), type \"&lt;f8\"&gt;]\n</code></pre> <p>In the output, several concepts are reported as \"NOT IN SCHEMA\". These are exactly those fields that we ignored with the <code>ignore-undocumented</code> flag about. NeXus allows to add additional groups/fields/attributes to NeXus files. However, such reports from the <code>validate_nexus</code>/<code>read_nexus</code> tools can also be indicators that a given part of the file is not compliant with the application definition as expected (e.g., because its name does not fit with the name of the intended NeXus concept).</p>"},{"location":"how-tos/pynxtools/validate-nexus-files.html#the-c-option","title":"The <code>-c</code> option","text":"<p>Aside from producing the full annotator log for the NeXus file, <code>read_nexus</code> can also be used with the <code>-c</code> (or <code>--concept</code> option). This helps you to find out all instances in the file that correspond to a given concept path. If you want to find all groups in the file that implement the <code>analyser</code> group within <code>/NXarpes/ENTRY/INSTRUMENT</code>, you can run:</p> <pre><code>read_nexus -f src/pynxtools/data/201805_WSe2_arpes.nxs -c /NXarpes/ENTRY/INSTRUMENT/analyser\n</code></pre> Show output <pre><code>read_nexus -f src/pynxtools/data/201805_WSe2_arpes.nxs -c /NXarpes/ENTRY/INSTRUMENT/analyser\n</code></pre> <pre><code>entry/instrument/analyser\nINFO: entry/instrument/analyser\n</code></pre>"},{"location":"how-tos/pynxtools/validate-nexus-files.html#the-d-option","title":"The <code>-d</code> option","text":"<p>Additionally, <code>read_nexus</code> can also be used with the <code>-d</code> (or <code>--documentation</code> option). Here, the input is the path in the HDF file.</p> <p>This helps you to find the NeXus definition for a given path in the HDF5 file. If you want to understand which NeXus concept the HDF5 group <code>/entry/instrument/analyser</code> corresponds to and how it is documented, you can run:</p> <pre><code>read_nexus -f src/pynxtools/data/201805_WSe2_arpes.nxs -d /entry/instrument/analyser\n</code></pre> Show output <pre><code>read_nexus -f src/pynxtools/data/201805_WSe2_arpes.nxs -d /entry/instrument/analyser\n</code></pre> <pre><code>===== GROUP (//entry/instrument/analyser [NXarpes::/NXentry/NXinstrument/NXdetector]): &lt;HDF5 group \"/entry/instrument/analyser\" (25 members)&gt;\nDEBUG: ===== GROUP (//entry/instrument/analyser [NXarpes::/NXentry/NXinstrument/NXdetector]): &lt;HDF5 group \"/entry/instrument/analyser\" (25 members)&gt;\nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n&lt;&lt;REQUIRED&gt;&gt;\nDEBUG: &lt;&lt;REQUIRED&gt;&gt;\ndocumentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser):\nDEBUG: documentation (NXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser):\n\nDEBUG: \ndocumentation (NXinstrument.nxdl.xml:/DETECTOR):\nDEBUG: documentation (NXinstrument.nxdl.xml:/DETECTOR):\n\nDEBUG: \ndocumentation (NXdetector.nxdl.xml:):\nDEBUG: documentation (NXdetector.nxdl.xml:):\n\n    A detector, detector bank, or multidetector.\n\nDEBUG: \n    A detector, detector bank, or multidetector.\n\ndocumentation (NXcomponent.nxdl.xml:):\nDEBUG: documentation (NXcomponent.nxdl.xml:):\n\n         Base class for components of an instrument - real ones or simulated ones.\n\nDEBUG: \n         Base class for components of an instrument - real ones or simulated ones.\n\ndocumentation (NXobject.nxdl.xml:):\nDEBUG: documentation (NXobject.nxdl.xml:):\n\n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\nDEBUG: \n        This is the base object of NeXus. The groups and fields contained \n        within this file are allowed to be present in any derived base class.\n\n        If nameType=\"partial\", the placeholders (e.g., FIELDNAME or GROUPNAME)\n        can be replaced by the name of any object (field or group, \n        respectively) that exists within the same group.\n\n===== ATTRS (//entry/instrument/analyser@NX_class)\nDEBUG: ===== ATTRS (//entry/instrument/analyser@NX_class)\nvalue: NXdetector \nDEBUG: value: NXdetector \nclasspath: ['NXentry', 'NXinstrument', 'NXdetector']\nDEBUG: classpath: ['NXentry', 'NXinstrument', 'NXdetector']\nclasses:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\nDEBUG: classes:\nNXarpes.nxdl.xml:/ENTRY/INSTRUMENT/analyser\nNXinstrument.nxdl.xml:/DETECTOR\nNXdetector.nxdl.xml:\nNXcomponent.nxdl.xml:\nNXobject.nxdl.xml:\n@NX_class [NX_CHAR]\nDEBUG: @NX_class [NX_CHAR]\n\nDEBUG: \n</code></pre> <p>If you run this call, you get a smaller subset of the full annotation log that helps you to understand which NeXus concept a given HDF5 object corresponds to.</p>"},{"location":"how-tos/pynxtools/validate-nexus-files.html#other-approaches-not-part-of-pynxtools","title":"Other approaches (not part of pynxtools)","text":"<p>Aside from the tools we develop within FAIRmat, the official NeXus website lists additional programs for the validation of NeXus files:</p> <ol> <li>cnxvalidate: NeXus validation tool written in C</li> <li>punx: Python Utilities for NeXus HDF5 files</li> <li>nexpy/nxvalidate: A python API for validating NeXus file</li> </ol> <p>We will not discuss these tools here, but you can find some information about them on the dedicated how-to page.</p>"},{"location":"learn/nexus/multiple-appdefs.html","title":"The concept of multiple application definitions","text":"<p>Work in progress</p> <p>This part of the documentation is still being written and it might be confusing or incomplete.</p> <p>This tutorial showcases how to employ multiple application definitions in NeXus for creating a file that conforms to various definitions simultaneously.</p> <p>Prerequisites</p> <p>Familiarity with the basics of NeXus and its application definitions is required. For an introduction to NeXus, please refer to the basic documentation.</p> <p>In a laboratory setting, the data we collect can vary significantly depending on the experiment's specific setup. Consider, for instance, an experiment characterized using the <code>NXexperiment</code> application definition. Suppose we want to enhance this experiment by incorporating energy resolution details. A straightforward approach might involve creating a specialized sub-application definition, like <code>NXexperiment_energy_resolved</code>, to include metadata about the experiment's energy resolution.</p> <p>While this method is effective for initial expansions of the metadata, it becomes cumbersome when trying to merge multiple enhancements into a single application definition. Imagine we wish to integrate additional elements that provide time resolution data for our experiment.  We need to create three sub application definitions to reflect all combinations: <code>NXexperiment_time_resolved</code>, <code>NXexperiment_energy_resolved</code> and <code>NXexperiment_energy_time_resolved</code>. For three experimental facets we already need 7 sub application definitions. An additional problem is that we have to repeat the whole procedure for all experiments we like to add the specific traits to. So if we have three different parent application definitions we already need to create 9 sub application definitions just to add energy and time resolution.</p> <p>The solution for this problem is to specify multiple application definitions while writing a NeXus file to follow different traits of the experiment. This allows us to simply create <code>NXtime_resolved</code> and <code>NXenergy_resolved</code> and combine it with any experiment we want to use it with. This comes, however, with a few drawbacks. One of them is that it is currently not possible to write a file which wants to use two different application definitions which have conflicting fields. While this is generally possible in the framework of NeXus, since every application definition creates their own namespace, this is not supported when the paths are reduced to entry path notation.</p> <p>ToDo:</p> <ul> <li>Make an example of NXexperiment, NXtime_resolved and NXenergy_resolved and show how it is combined into the instance path.</li> <li>Also show this for a conflict. Compare concept path (no problem) to instance path (colliding).</li> <li>Write a part how it is described in the file that it follows two application definitions <code>/entry/definitions</code> as array containing both application definitions.</li> <li>Explain that this is no problem with the expanded concept path notation but fails when we only use the instance path.</li> <li>Explain the reader concept: One reader for one application definition, then pynxtools will figure out how to combine them (this is domain knowledge for the FAIRmat reader -&gt; will be different when a read/write tool is written somewhere else).</li> </ul>"},{"location":"learn/nexus/nexus-primer.html","title":"A primer on NeXus","text":"<p>NeXus is a common data exchange format initially developed for neutron, X-ray, and muon experiments. Within FAIRmat we extensively extended the format to cover a range of experiments with major support for APM, ARPES, XPS, and optical spectroscopy, but we also give advice and guidance for developing standards for other formats as well.</p>"},{"location":"learn/nexus/nexus-primer.html#what-is-nexus","title":"What is NeXus?","text":"<p>Sometimes, NeXus is seen as writing data to some form of file in HDF5 format. While this is partly true, NeXus is independent of the actual storage format, but is typically written into an HDF5 file.</p> <p>But what is NeXus then? It is the conceptual layer above the file structure. It is a contract on which data has to be present and how to name them in a given dataset. Hence, the use of NeXus helps to make data FAIR. It especially covers the interoperability and reproducibility part of research data.</p> <p>NeXus path notations</p> <p>There are several methods for referencing concepts or data paths within NeXus:</p> <ul> <li> <p>Concept Path Notation: This notation describes the hierarchical structure of NeXus concepts using class names. For example, <code>NXexperiment:/NXentry/NXinstrument/NXdetector</code> indicates the creation of a new NXdetector class within the NXexperiment concept. This path typically forms automatically when an application definition extends a base class's fields.</p> </li> <li> <p>Instance Path Notation: It represents the actual location of a field or group in a NeXus data instance (e.g., an HDF5 file). An example is <code>my_file.nxs:/entry/instrument/detector</code>.</p> </li> <li> <p>Combined Notation: In <code>pynxtools</code>, we use templates and configuration files to match data instances from other sources to the terms defined in NeXus application definitions and base classes. We represent these NeXus concepts using a mixed notation, where uppercase indicates a selectable (part of the) name and lowercase a fixed name. Examples include <code>NXexperiment:ENTRY[my_experiment.nxs:entry]/INSTRUMENT[instrument]/DETECTOR[detector]</code> and <code>NXexperiment:ENTRY[my_experiment.nxs:entry]/my_INSTRUMENT[my_instrument]/DETECTOR[detector]</code>. In this notation, we combine concept (outside the square brackets) and instance paths (inside the square brackets). The leftmost entries may include the NeXus class or file reference.</p> </li> </ul>"},{"location":"learn/nexus/nexus-primer.html#nexus-as-a-tool-for-fair-data","title":"NeXus as a tool for FAIR data","text":"<p>If you want to build data according to the FAIR principles, you can think of NeXus fulfilling the interoperability and reproducibility part. As NeXus defines commonly used standards for describing experiments in materials science, any data that is written according to the NeXus standard can be compared to any other such data. NeXus application definitions, which exactly define which data is required to describe a given experiments, help to reproduce experiments.</p> <p>If integrated into a research data management (RDM) platform, the findable and accessible part of FAIR can also be fulfilled. We integrate NeXus into the RDM we are developing in FAIRmat: NOMAD. Experimental data following an NeXus application definition can easily be uploaded and is recognized by NOMAD's search system. If you want to learn more about uploading NeXus data to NOMAD, please refer to the NeXus to NOMAD tutorial of this documentation. Since NeXus follows a rigorously defined structure, NOMAD can enabling semantic searches, making it easy to find and access NeXus data.</p>"},{"location":"learn/nexus/nexus-rules.html","title":"Rules for storing data in NeXus","text":"<p>There are several rules which apply for storing single data items in NeXus. There exists a summary in the NeXus documentation outlining most of these rules. However, to guide data providers even further, we have compiled here additional information and explanations.</p>"},{"location":"learn/nexus/nexus-rules.html#name-resolution","title":"Name resolution","text":"<p>In general, the names of NeXus group and field items are validated according to the boundaries outlined in the Rules for Storing Data Items in NeXus Files, section \"NXDL group and field names\":</p> <ul> <li> <p>Recommended names</p> <ul> <li>lower case words separated by underscores and, if needed, with a trailing number</li> </ul> </li> <li> <p>Allowed names</p> <ul> <li>any combination of upper and lower case letter, numbers, underscores and periods, except that periods cannot be at the start or end of the string</li> <li>This statement is equivalent to matching  this regular expression (named <code>validItemName</code> in the nxdl.xsd XML Schema file):</li> </ul> <pre><code>^[a-zA-Z0-9_]([a-zA-Z0-9_.]*[a-zA-Z0-9_])?$\n</code></pre> </li> <li> <p>Invalid names:</p> <ul> <li>any name not matching this <code>validItemName</code> regular expression</li> </ul> </li> </ul> <p>Note that this explicitly also means that it is not allowed to have whitespace (including \" \") in NeXus names.</p> <p>A specialty of NeXus is the possibility to define concept names that are different to the names of the actual data instances. In NeXus base classes and application definitions, there are three options for defining how instances must be named to match to the name of a given concept. This matching is based on a combination of the <code>name</code> and the <code>nameType</code> attributes of the concept.</p> <p>Concept and instance names</p> <p>In NeXus, we must distinguish carefully between names of concepts and the names given to the actual instance of that concept.</p> <ul> <li>Concept Name: This is the name given to a NeXus concept, i.e., on the data modelling level in the NeXus definitions.</li> <li>Instance Name: This is the actual name for a NeXus data instance of the concept (e.g., in an HDF5 file).</li> </ul> <p>There are three different options for the <code>nameType</code> XML attribute:</p> <ul> <li><code>specified</code></li> <li><code>any</code></li> <li><code>partial</code></li> </ul> <p>If <code>nameType=specified</code>, that means that any instance must have the exact same (fixed) name as the concept. As an example, if there is a field called <code>my_field</code> with <code>nameType=specified</code> in an application definition, the only allowed name in a file would be <code>my_field</code>. Note that this is also true for concept names containing uppercase letters. \"specified\" is the default <code>nameType</code>, i.e., if no <code>nameType</code> is given, it is assumed that any instance name must match the concept name directly</p> <p>In addition, there is also the option to allow for selectable names. This is achieved by <code>nameType=any</code> or <code>nameType=partial</code>.</p> <p>If the <code>nameType</code> is any, that means that the concept name can be matched by any instance name, as long as it matches the regular expression above. As an example. As an example, if a field in an application definition is called <code>FIELD</code> and has <code>nameType=any</code>, <code>field</code>, <code>field0</code>, <code>any_other_name</code> would be allowed names, while <code>any other name</code> would not be allowed.</p> <p>There is also the possibility to fix a subpart of the name using <code>nameType=partial</code>. In this case, it important which characters in the concept name are lowercase and which are uppercase. Those characters that are uppercase may be replaced by any other string, as long as the final instance name is still valid according to the regex above. For example, there might be a <code>userID</code> group. In this case, allowed names include any name that start with <code>user</code>, e.g., <code>user0</code>, <code>user_abcde</code>,  Note that here it is also allowed to write <code>user</code>, i.e., replacing the uppercase part of the name with an empty string.</p> <p>The validation of names is performed by namefitting, i.e., fitting the name that is used by the data provider to the name given in the base class / application definitions.</p> <p>A python implementation of this process can be found in this function. This function returns twice the length for an exact match, otherwise the number of matching characters (case insensitive) or zero, if <code>name_any</code> is set to True, is returned. This is also the function that is used in the validation implemented in <code>pynxtools</code>.</p>"},{"location":"learn/nexus/nexus-rules.html#special-rules-for-names-and-namefitting","title":"Special rules for names and namefitting","text":"<p>Aside from these general rules, there are a number of special rules for NeXus names that need to be considered:</p> <ul> <li> <p>There is a set of prefixes (like <code>BLUESKY_</code>, <code>DECTRIS_</code>, <code>IDF_</code>, etc.) that are reserved for certain projects and communities. These prefixes (typically written as uppercase + underscore cannot be overwritten by namefitting.</p> </li> <li> <p>There is also a set of reserved suffixes that are used to give additional information for a group or field. These can only be used if the original field is present as well. As an example, the field <code>temperature_set</code> - which uses the suffix <code>_set</code>, reserved for setpoint of field values - can only be present if the field <code>temperature</code> is present as well.</p> </li> <li> <p>Additionally to namefitting, data annotation can use further information. For example, in case of NXdata, the axes listed among the <code>@axes</code> shall fit to any instances of <code>AXISNAME</code> and data objects listed in <code>@signal</code> or <code>@auxiliary_signals</code> shall fit to instances of <code>DATA</code>. Such rules are typically given in the base classes (e.g., see here for NXdata). Any tool that makes use of the base classes should implement these special rules in its validation procedure. As an example, pynxtools has a special function for handling NXdata.</p> </li> </ul> <p>For the full list of these respective rules, see Rules for Storing Data Items in NeXus Files.</p>"},{"location":"learn/nexus/nexus-rules.html#concept-name-inheritance","title":"Concept name inheritance","text":"<p>Note that NeXus also supports inheritance of concepts. The same rules as for instance names on the data level apply here for the inherited concept names. That is, the name of a concept must match in concept name and <code>nameType</code> to inherit from another concept. As an example, if we define a field with name <code>userID</code> and <code>nameType=\"partial\"</code> in a base class and then use this base class in an application definition, the concept <code>user</code> and <code>nameType=\"specified\"</code> would inherit its property. Contrarily, the concept <code>my_user</code> would not inherit from <code>userID</code>.</p>"},{"location":"learn/pynxtools/dataconverter-and-readers.html","title":"Data conversion in pynxtools","text":"<p>One of the main motivations for pynxtools is to develop a tool for combining various instrument output formats and electronic lab notebook (ELN) into a file according to NeXus application definitions. </p> <p>The <code>dataconverter</code> API in pynxtools provides exactly that: it converts experimental as well as simulation data, together with the results from analysis of such data, to NeXus files based on any provided NXDL schemas. Here, we are using HDF5 as the serialization format.</p> <p>The dataconverter currently has essentially three functionalities:</p> <ol> <li>Read in experimental data using <code>readers</code></li> <li>Validate the data and metadata against a NeXus application definition of choice (i.e., check that the output data matches all existence, shape, and format constraints of application definition)</li> <li>Write a valid NeXus/HDF5 file</li> </ol> <p>A set of readers has been developed which the converter calls to read in a set of experiment/method-specific file(s) and for a specific set of application definitions (NXDL XML file). These data files can be in a proprietary format, or of a certain format used in the respective scientific community, or text files. Only in combination, these files hold all the required pieces of information which the application definition demands and which are thus required to make a NeXus/HDF5 file compliant. Users can store additional pieces of information in an NeXus/HDF5 file. In this case readers will issue a warning that these data are not properly documented from the perspective of NeXus.</p> <p>There exists two different subsets of readers:</p> <ol> <li>Built-in readers, which are implemented directly in pynxtools and are typically used either as superclasses for new reader implementations or for generic reading purposes not directly related to any specific technique.</li> <li>Reader plugins for `pynxtools, which are used for reading data of specific experimental techniques and are typically available as their own Python packages.</li> </ol>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#matching-to-nexus-application-definitions","title":"Matching to NeXus application definitions","text":"<p>The purpose of the dataconverter is to create NeXus/HDF5 files with content that matches a specific NeXus application definition. Such application definitions are useful for collecting a set of pieces of information about a specific experiment in a given scientific field. The pieces of information are numerical and categorical (meta)data. The application definition is used to provide these data in a format that serves a data delivery contract: The HDF5 file, or so-called NeXus file, delivers all those pieces of information which the application definition specifies. Required and optional pieces of information are distinguished. NeXus classes can recommend the inclusion of certain pieces of information. Recommended data are essentially optional. The idea is that flagging these data as recommended motivates users to collect these, but does not require to write dummy or nonsense data if the recommended data is not available.</p>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#getting-started","title":"Getting started","text":"<p>You should start by installing <code>pynxtools</code> and (if needed) one or more of its supported plugins.</p> <ul> <li>Installation</li> </ul>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#usage","title":"Usage","text":"<p>See here for the documentation of the <code>dataconverter</code> API.</p>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#use-with-multiple-input-files","title":"Use with multiple input files","text":"<pre><code>dataconverter metadata data.raw otherfile --nxdl nxdl --reader &lt;reader-name&gt;\n</code></pre>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#merge-partial-nexus-files-into-one","title":"Merge partial NeXus files into one","text":"<pre><code>dataconverter --nxdl nxdl partial1.nxs partial2.nxs\n</code></pre>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#map-an-hdf5-filejson-file","title":"Map an HDF5 file/JSON file","text":"<pre><code>dataconverter --nxdl nxdl any_data.hdf5 --mapping my_custom_map.mapping.json\n</code></pre> <p>You can find actual examples with data files at <code>examples/json_map</code>.</p>"},{"location":"learn/pynxtools/dataconverter-and-readers.html#example-data-for-testing-and-development-purposes","title":"Example data for testing and development purposes","text":"<p>Before using your own data we strongly encourage you to download a set of open-source test data for testing the pynxtools readers and reader  plugins. For this purpose, pynxtools and its plugins come with <code>examples</code> and <code>test</code> directories including reader-specific examples. These examples can be used for downloading test data and use specific readers as a standalone converter to translate given data into a NeXus/HDF5 file.</p> <p>Once you have practiced with these tools how to convert these examples, feel free to use the tools for converting your own data. You should feel invited to contact the respective corresponding author(s) of each reader if you run into issues with the reader or feel there is a necessity to include additional data into the NeXus file for your respective application.</p> <p>We are looking forward to learning from your experience and learn from your use cases. You can find the contact persons here or in the respective documentation of each reader (plugin).</p>"},{"location":"learn/pynxtools/multi-format-reader.html","title":"The MultiFormatReader as a reader superclass","text":"<p>There are three options for building a new <code>pynxtools</code> reader:</p> <ol> <li>build the reader from scratch</li> <li>inherit and extend the <code>BaseReader</code></li> <li>inherit and extend the <code>MultiFormatReader</code></li> </ol> <p>While option 1 is generally not recommended, inheriting and extending the <code>BaseReader</code> has traditionally been the default solution for all existing pynxtools readers and reader plugins. The <code>BaseReader</code>, which is an abstract base class, has an essentially empty <code>read</code> function and is  thus only helpful for implementing the correct input/output design of the <code>read</code> function of any reader which is implemented off of it.</p> <p>While building on the <code>BaseReader</code> allows for the most flexibility, in most cases it is desirable to implement a reader that can read in multiple file formats and then populate the NeXus file based on the read data, in compliance with a NeXus application definition. For this purpose, <code>pynxtools</code> has the <code>MultiFormatReader</code>, which can be readily extended for any new data.</p> <p>Here, we will explain the inner workings of the <code>MultiFormatReader</code>. Note that there is also a how-to guide on how to implement a new reader off of the <code>MultiFormatReader</code> using a concrete example. In case you simply want to use the <code>MultiFormatReader</code> without understanding its inner logic, we recommend you start there.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#the-basic-structure","title":"The basic structure","text":"<p>For extending the <code>MultiFormatReader</code>, the following basic structure must be implemented:</p> multi/reader.py<pre><code>\"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\nfrom typing import Any\n\nfrom pynxtools.dataconverter.readers.base.reader import MultiFormatReader\n\nclass MyDataReader(MultiFormatReader):\n    \"\"\"MyDataReader implementation for the DataConverter to convert mydata to NeXus.\"\"\"\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n        self.extensions = {\n            \".yml\": self.handle_eln_file,\n            \".yaml\": self.handle_eln_file,\n            \".json\": self.set_config_file,\n            # Here, one must add functions for handling any other file extension(s)\n        }\n# This has to be set to allow the convert script to use this reader. Set it to \"MyDataReader\".\nREADER = MyDataReader\n</code></pre> <p>In order to understand the capabilities of the <code>MultiFormatReader</code> and which methods need to be implemented when extending it, we will have a look at its <code>read</code> method:</p> multi/reader.py<pre><code>def read(\n    self,\n    template: dict = None,\n    file_paths: tuple[str] = None,\n    objects: Optional[tuple[Any]] = None,\n    **kwargs,\n) -&gt; dict:\n    self.kwargs = kwargs\n    self.config_file = self.kwargs.get(\"config_file\", self.config_file)\n    self.overwrite_keys = self.kwargs.get(\"overwrite_keys\", self.overwrite_keys)   \n</code></pre>"},{"location":"learn/pynxtools/multi-format-reader.html#template-initialization-and-processing-order","title":"Template initialization and processing order","text":"<p>An empty <code>Template</code> object is initialized that later gets filled from the data files later.</p> multi/reader.py<pre><code>    template = Template(overwrite_keys=self.overwrite_keys)\n\n    def get_processing_order(path: str) -&gt; tuple[int, Union[str, int]]:\n        \"\"\"\n        Returns the processing order of the file.\n        \"\"\"\n        ext = os.path.splitext(path)[1]\n        if self.processing_order is None or ext not in self.processing_order:\n            return (1, ext)\n        return (0, self.processing_order.index(ext))\n\n    sorted_paths = sorted(file_paths, key=get_processing_order)\n</code></pre> <p>If the reader has a <code>self.processing_order</code>, the input files get sorted in this order. If <code>self.overwrite_keys</code> is True, later files get precedent. For example, if <code>self.processing_order = [\".yaml\", \".hdf5\"]</code>, any values coming from HDF5 files would overwrite values from the YAML files.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#reading-of-input-files","title":"Reading of input files","text":"multi/reader.py<pre><code>    for file_path in sorted_paths:\n        extension = os.path.splitext(file_path)[1].lower()\n        if extension not in self.extensions:\n            logger.warning(\n                f\"File {file_path} has an unsupported extension, ignoring file.\"\n            )\n            continue\n        if not os.path.exists(file_path):\n            logger.warning(f\"File {file_path} does not exist, ignoring entry.\")\n            continue\n\n        template.update(self.extensions.get(extension, lambda _: {})(file_path))\n</code></pre> <p>This parts reads in the data from all data files. The <code>MultiFormatReader</code> has an <code>extensions</code> property, which is a dictionary that for each file extension calls a function that reads in data from files with that extension. If the reader shall handle e.g. an HDF5 file, a method for handling this type of file should be added, i.e., <code>self.extensions[\".hdf5\"] = self.handle_hdf5</code>. Note that these methods should also implement any logic depending on the provided data, i.e., it may not be sufficient to rely on the filename suffix, but the reader may also need to check for different file versions, binary signature, mimetype, etc.</p> <p>Any of these methods should take as input only the file path, e.g.</p> multi/reader.py<pre><code>def handle_eln_file(self, file_path: str) -&gt; dict[str, Any]\n</code></pre> <p>These methods must return a dictionary. One possibility is to return a dictionary that directly fills the template (see the <code>template.update</code> call above) with the data from the file. Another option is to return an empty dictionary (i.e., not fill the template at this stage) and only later fill the template from a config file (see below).</p> <p>Note that for several input formats, standardized parser functions already exist within the <code>MultiFormatReader</code>. For example, YAML files can be parsed using the <code>pynxtools.dataconverter.readers.utils.parse_yml</code> function.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#setting-default-values-in-the-template","title":"Setting default values in the template","text":"multi/reader.py<pre><code>    template.update(self.setup_template())\n</code></pre> <p>Next, the <code>setup_template</code> method can be implemented, which is used to populate the template with initial data that does not come from the files themselves. This may be used to set fixed information, e.g., about the reader. As an example, <code>NXentry/program_name</code> (which is defined as the name of program used to generate the NeXus file) scan be set to <code>pynxtools-plugin</code> by making <code>setup_template</code> return a dictionary of the form</p> <pre><code>{\n  \"/ENTRY[my_entry]/program_name\": \"pynxtools-plugin\",\n  \"/ENTRY[my_entry]/program_name/@version\": \"v0.1.0\"\n}\n</code></pre>"},{"location":"learn/pynxtools/multi-format-reader.html#handling-objects","title":"Handling objects","text":"multi/reader.py<pre><code>    if objects is not None:\n        template.update(self.handle_objects(objects))\n</code></pre> <p>Aside from data files, it is also possible to directly pass any Python objects to the <code>read</code> function (e.g., a numpy array with measurement data). In order to exploit this, the <code>handle_objects</code> method must implemented, which should return a dictionary that populates the template.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#parsing-the-config-file","title":"Parsing the config file","text":"multi/reader.py<pre><code>    if self.config_file is not None:\n        self.config_dict = parse_flatten_json(\n            self.config_file, create_link_dict=False\n        )\n</code></pre> <p>Next up, we can make use of the config file, which is a JSON file that tells the reader which input data to use to populate the template. In other words, the config.json is used for ontology mapping between the input file paths and the NeXus application definition. Essentially, the config file should contain all keys that are present in the NXDL. A subset of a typical config file may look like this:</p> <pre><code>{\n  \"/ENTRY/title\": \"@attrs:metadata/title\", \n  \"/ENTRY/USER[user]\": {\n    \"name\": \"my_name\",\n  }, \n  \"/ENTRY/INSTRUMENT[instrument]\": {\n    \"name\":\"@eln\",\n    \"temperature_sensor\": {\n      \"value\": \"@attrs:metadata/temp\",\n      \"value/@units\": \"K\"\n    }\n  },\n  \"/ENTRY/SAMPLE[sample]\": {\n    \"temperature_env\": {\n      \"temperature_sensor\": \"@link:/entry/instrument/temperature_sensor\"\n    }\n  },  \n  \"/ENTRY/data\": {\n    \"@axes\": \"@data:dims\",\n    \"AXISNAME_indices[@*_indices]\": \"@data:*.index\",\n    \"@signal\": \"data\",\n    \"data\": \"@data:mydata\",\n  }\n}\n</code></pre> <p>Here, the <code>parse_flatten_json</code> method is used that allows us to write the config dict in the structured manner above and internally flattens it (so that it has a similar structure as the Template).</p> <p>In the config file, one can</p> <ol> <li>hard-code values (like the unit <code>\"K\"</code> in <code>\"/ENTRY/INSTRUMENT[instrument]/temperature_sensor/value/@units\"</code>) or</li> <li>tell the reader where to search for data using the <code>@</code>-prefixes. For more on these prefixes, see below.</li> </ol> <p>Note that in order to use a <code>link_callback</code> (see below), <code>create_link_dict</code> must be set to <code>False</code>, which means that at this stage, config values of the form <code>\"@link:\"/path/to/source/data\"</code> get NOT yet converted to <code>{\"link\": \"/path/to/source/data\"}</code>.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#data-post-processing","title":"Data post processing","text":"multi/reader.py<pre><code>   self.post_process()\n</code></pre> <p>In case there is the need for any post-processing on the data and/or config dictionary after they have been read, the <code>post_process</code> method can be implemented. For example, this can be helpful if there are multiple entities of a given NX_CLASS (for example, multiple detectors) on the same level and the config dict shall be set up to fill the template with all of these entities.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#filling-the-template-from-the-read-in-data","title":"Filling the template from the read-in data","text":"multi/reader.py<pre><code>    if self.config_dict:\n        suppress_warning = kwargs.pop(\"suppress_warning\", False)\n        template.update(\n            fill_from_config(\n                self.config_dict,\n                self.get_entry_names(),\n                self.callbacks,\n                suppress_warning=suppress_warning,\n            )\n        )\n\n    return template\n</code></pre> <p>As a last step, the template is being filled from the config dict using the data. If there is more than one entry, the <code>get_entry_names</code> method must be implemented, which shall return a list of all entry names. The <code>fill_from_config</code> method iterates through all of the them and replaces the generic <code>/ENTRY/</code> in the config file by keys of the form <code>/ENTRY[my-entry]/</code> to fill the template.</p> <p>Here, we are using callbacks, which are used to bring in data based on <code>@</code>-prefixes in the config file. These are defined in the reader's <code>__init__</code> call using the <code>pynxtools.dataconverter.readers.multi.ParseJsonCallbacks</code> class:</p> multi/reader.py<pre><code>self.callbacks = ParseJsonCallbacks(\n    attrs_callback=self.get_attr,\n    data_callback=self.get_data,\n    eln_callback=self.get_eln_data,\n    dims=self.get_data_dims,\n)\n</code></pre> <p>The <code>ParseJsonCallbacks</code> class has an attribute called <code>special_key_map</code> that makes use of these callbacks to populate the template based on the starting prefix of the config dict value:</p> multi/reader.py<pre><code>self.special_key_map = {\n    \"@attrs\": attrs_callback if attrs_callback is not None else self.identity,\n    \"@link\": link_callback if link_callback is not None else self.link_callback,\n    \"@data\": data_callback if data_callback is not None else self.identity,\n    \"@eln\": eln_callback if eln_callback is not None else self.identity,\n}\n</code></pre> <p>That means, if the config file has an entry <code>{\"/ENTRY/title\": \"@attrs:metadata/title\"}</code>, the <code>get_attr</code> method of the reader gets called and should return an attribute from the given path, i.e., in this case from <code>metadata/title</code>.</p> <p>By default, the MultiFormatReader supports the following special prefixes:</p> <ul> <li><code>@attrs</code>: To get metadata from the read-in experiment file(s). You need to implement the <code>get_attr</code> method in the reader.</li> <li><code>@data</code>: To get measurement data from the read-in experiment file(s). You need to implement the <code>get_data</code> method in the reader.</li> <li><code>@eln</code>: To get metadata from additional ELN files. You need to implement the <code>get_eln_data</code> method in the reader.</li> <li><code>@link</code>: To implement a link between two entities in the NeXus file. By default, the link callback returns a dict of the form {\"link\": value.replace(\"/entry/\", f\"/{self.entry_name}/\")}, i.e., a generic <code>/entry/</code> get replaced by the actual <code>entry_name</code>.</li> </ul> <p>The distinction between data and metadata is somewhat arbitrary here. The reason to have both of these prefixes is to have different methods to access different parts of the read-in data. For example, <code>@attrs</code> may just access key-value pairs of a read-in dictionary, whereas <code>@data</code> can handle different object types, e.g. xarrays. The implementation in the reader decides how to distinguish data and metadata and what each of the callbacks shall do.</p> <p>In addition, the reader can also implement the <code>get_data_dims</code> method, which is used to return a list of the data dimensions (see below for more details).</p> <p>All of <code>get_attr</code>, <code>get_data</code>, and <code>get_eln_data</code>  (as well as any similar method that might be implemented) should have the same call signature:</p> <pre><code>def get_data(self, key: str, path: str) -&gt; Any:\n</code></pre> <p>Here, <code>key</code> is the config dict key (e.g., <code>\"/ENTRY[my-entry]/data/data\"</code>) and path is the path that comes after the prefix in the config file. In the example config file above, <code>path</code> would be <code>mydata</code>. With these two inputs, the reader should be able to return the correct data for this template key.</p>"},{"location":"learn/pynxtools/multi-format-reader.html#special-rules","title":"Special rules","text":"<ul> <li> <p>Lists as config value: It is possible to write a list of possible configurations of the sort   <pre><code>\"/ENTRY/title\":\"['@attrs:my_title', '@eln', 'no title']\"\n</code></pre>   The value must be a string which can be parsed as a list, with each item being a string itself. This allows to provide different options depending if the data exists for a given callback. For each list item , it is checked if a value can be returned and if so, the value is written. In this example, the converter would check (in order) the <code>@attrs</code> (with path <code>\"my_title\"</code>) and <code>@eln</code> (with path <code>\"\"</code>) tokens and write the respective value if it exists. If not, it defaults to \"no title\".   This concept can be particularly useful if the same config file is used for multiple measurement configurations, where for some setup, the same metadata may or may not be available.</p> <p>Note that if this notation is used, it may be helpful to pass the <code>suppress_warning</code> keyword as <code>True</code> to the read function. Otherwise, there will be a warning for every non-existent value.</p> </li> <li> <p>Wildcard notation: There exists a wildcard notation (using <code>*</code>)   <pre><code>\"/ENTRY/data/AXISNAME[*]\": \"@data:*.data\",\n</code></pre>   that allows filling multiple fields of the same type from a list of dimensions. This can be particularly helpful for writing <code>DATA</code> and <code>AXISNAME</code> fields that are all stored under similar paths in the read-in data.   For this, the <code>get_data_dims</code> method needs to be implemented. For a given path, it should return a list of all data axes available to replace the wildcard.</p> <p>The same wildcard notation can also be used within a name to repeat entries with different names (e.g., field_*{my, name, etc} is converted into three keys with * replaced by my, name, etc, respectively). As an example, for multiple lenses and their voltage readouts, one could write:   <pre><code>\"ELECTROMAGNETIC_LENS[lens_*{A,B,Foc}]\": {\n  \"name\": \"*\",\n  \"voltage\": \"@attrs:metadata/file/Lens:*:V\",\n  \"voltage/@units\": \"V\"\n},\n</code></pre>   which would write <code>NXelectromagnetic_lens</code> instances named <code>lens_A</code>, <code>lens_B</code>, and <code>lens_Foc</code>.</p> </li> <li> <p>Required fields in optional groups: There will sometimes be the situation that there is an optional NeXus group in an application definition, that (if implemented) requires some sub-element. As an example, for the instrument's energy resolution, the only value expected to come from a data source is the <code>resolution</code>, whereas other fields are hardcoded.   <pre><code>\"ENTRY/INSTRUMENT[instrument]/energy_resolution\": {\n  \"resolution\": \"@attrs:metadata/instrument/electronanalyzer/energy_resolution\",\n  \"resolution/@units\": \"meV\",\n  \"physical_quantity\": \"energy\"\n}\n</code></pre>   Now, if there is no data for <code>@attrs:metadata/instrument/electronanalyzer/energy_resolution</code> available in a dataset, this will be skipped by the reader, and not available, yet the other entries are present. During validation, this means that the required field <code>resolution</code> of the optional group <code>energy_resolution</code> is not present, and thus a warning or error would be raised:   <pre><code>LookupError: The data entry, /ENTRY[entry]/INSTRUMENT[instrument]/ELECTRONANALYZER[electronanalyzer]/energy_resolution/physical_quantity, has an optional parent, /ENTRY[entry]/INSTRUMENT[instrument]/ELECTRONANALYZER[electronanalyzer]/energy_resolution, with required children set. Either provide no children for /ENTRY[entry]/INSTRUMENT[instrument]/ELECTRONANALYZER[electronanalyzer]/energy_resolution or provide all required ones.\n</code></pre></p> <p>To circumvent this problem, there exists a notation using the <code>\"!\"</code> prefix. If you write <pre><code>\"ENTRY/INSTRUMENT[instrument]/energy_resolution/resolution\": \"!@attrs:metadata/instrument/electronanalyzer/energy_resolution\"\n</code></pre> the whole parent group <code>/ENTRY/INSTRUMENT[instrument]/energy_resolution</code> will not be written in case that there is no value for <code>@attrs:metadata/instrument/electronanalyzer/energy_resolution\"</code>, thus preventing the aforementioned error.</p> </li> </ul>"},{"location":"learn/pynxtools/nexus-validation.html","title":"Validation of NeXus files in <code>pynxtools</code>","text":"<p>This page is intended to give more information about the validation tools that are part of <code>pynxtools</code>. Please also have a look at our comprehensive how-to guide on NeXus validation.</p> <p>Validation is a processing step during which the structure, concepts, and annotations of data in a file are checked for conformance with a specific version of the NeXus definitions. The processing yields a list of deviations between the actual formatting of individual data instances and their expected formatting. These deviations are typically categorized based on their severity. In effect, boolean or more nuanced conclusions can be drawn how closely the content of the file follows the definitions.</p> <p>The validity of NeXus files is fundamental to ensure FAIR data. Validation ensures that key contextual information - such as the type of experiment, laser wavelength, applied voltage, structure of tabular data, units of measurement, referenced standards, measurement location, and acquisition time - matches the expected definitions and formats.</p> <p>The NeXus application definitions define the minimum set of terms/concepts that must be reported for a given experiment (i.e., the required terms that you must add to the NeXus file in order to be compliant with that application definition). Application definitions may also define terms that are optional in the NeXus data file. Entries in NeXus files (which are instances of the <code>NXentry</code> base class) should report which definition they implement (under <code>NXentry/definition</code>). Such an entry is valid if all required concepts of the respective application definition are present and if all instance data within the entry adheres to the format and constraints defined in the application definition.</p>"},{"location":"learn/pynxtools/nexus-validation.html#approach","title":"Approach","text":"<p>One of the main advantages of using <code>pynxtools</code> is that it comes with its own validation tools. That is, it can be used to validate that a given NeXus/HDF5 file is compliant with a NeXus application definition.</p> <p>The following use cases are covered by the validation in <code>pynxtools</code>:</p> <ul> <li>Required concepts: Warnings are logged if a required group/field/attribute is missing. This is also the case for required concepts within recommended/optional groups.</li> <li>Namefitting: NeXus allows for variable instance names for a given concept through the combination of uppercase notation and the <code>nameType</code> attribute (for more information see the section on NeXus naming rules.) In the validation process, the name of any instance data is compared to the defined NeXus concepts. Errors are raised if a group/field uses a name defined for a concept of a different NeXus type (i.e., if a group in the instance data has the same name as a defined field). If given instance data cannot be fit to any concept, a warning is logged as well.</li> <li> <p>NeXus fields/attributes:</p> <ul> <li>For concepts where an enumeration is used, it is checked if the provided value is contained in the enumeration. For closed enumerations, a warning is logged if the provided value does not match any of the enumeration choices. For open enumerations, an info level message is logged in such cases.</li> <li>Values of fields and attributes are checked against the NeXus data type and warnings are logged if a mismatch is detected.</li> <li>Units for fields are validated using the Python units package <code>pint</code> by confirming that the dimensionality of a given unit matches its NeXus Unit Category. Missing units and units for which no associated field is given also produce warning messages.</li> <li>For NeXus attributes, a warning is logged if there is no associated group or field for the attribute.</li> </ul> </li> <li> <p><code>NXdata</code>: The <code>NXdata</code> group plays a special rule in NeXus as it is used to define the plottable data. Therefore, <code>NXdata</code> comes with a specific set of rules attributes (especially the presence of the <code>@signal</code> and <code>@data</code>) . The validator checks for the presence of these attributes and also ensures that the dimensionality of the signals and axes match.</p> </li> <li>Links: When writing NeXus files in HDF5, any group or field can be replaced by an HDF5 link to another group/field. In the validation, these links are resolved and the validity of the resolved object against the NeXus definition is checked. In addition, the presence of the <code>@target</code> attribute (which is supposed to be set when using links) is checked.</li> <li>Undocumented concepts: In NeXus, it is allowed to add additional data that are not defined in the NeXus definitions (e.g., additional fields). In order to prevent unintended use of this feature (arising, for example, from misspelling of instance names), warnings are logged for any such additional data.</li> <li>Reserved suffixes and prefixes: NeXus defines a number of reserved suffixes. These are suffixes for the name of fields that can only be used if the actual field exists as well (e.g., the suffix <code>_set</code> in the field <code>temperature_set</code> would be used to report the setpoint for the field <code>temperature</code>). If the associated field does not exist, a warning is logged. In addition, NeXus also has a number of reserved prefixes, which can only be used in certain contexts (e.g., in a specific application definition). If such a prefix is used anywhere else, the validation tool produces a warning message.</li> </ul>"},{"location":"learn/pynxtools/nexus-validation.html#validation-use-cases-and-tools","title":"Validation use cases and tools","text":""},{"location":"learn/pynxtools/nexus-validation.html#as-part-of-the-dataconverter","title":"As part of the dataconverter","text":"<p>During data conversion within <code>pynxtools</code>, before writing the HDF5 file, by default the data are first checked against the provided application definition. In the conversion, we are using a special combined notation to indicate that instance paths shall match to NeXus concepts. As an example, the path <code>ENTRY[entry]/INSTRUMENT[instrument]/DETECTOR[detector]</code> indicates that we would like to create an HDF5 group at <code>/entry/instrument/detector</code> and that it shall match to the <code>NXdetector</code> group within <code>NXentry/NXinstrument</code>. While this notation enables connecting instances to concepts in a succinct way, it also requires more rigorous check to validate that the names for instances and data actually match. Therefore, additional validation checks are implemented and warnings are logged if the two names have a mismatch.</p> <p>It is also possible to define in the data conversion process whether the data shall be compressed in the HDF5 file. Warnings are logged if the given compression strength (which must be between 0 and 9) is incorrect.</p> <p>Since the validation is performed during the conversion, it is possible to automatically correct the data: as a convenience feature, any instance data that produces invalid files (e.g., when an HDF5 field would be named the same as a group in the NeXus definitions) are removed before writing the files. In addition, if a mismatch between the data type of the instance and the concept is detected, we convert these values silently if possible. As an example, we convert from int to float or from the string representation of bools (<code>\"true\"</code>/<code>\"false\"</code>) to actual booleans.</p>"},{"location":"learn/pynxtools/nexus-validation.html#validate_nexus-validate-existing-nexushdf5-files","title":"validate_nexus: Validate existing NeXus/HDF5 files","text":"<p>While we encourage NeXus users to convert their data using the <code>pynxtools</code> data conversion pipeline, we also realize that a lot of NeXus files are created using other applications. For such use cases, <code>pynxtools</code> provides a standalone validator (called <code>validate_nexus</code>). This CLI tool can be used to validate existing HDF5 files against the NeXus application definition they claim to be compliant with. Read more in the API documentation.</p> <p>Validation of existing files is generally more straightforward than validating the <code>pynxtools</code> template as the NeXus type (i.e., group/fields/attributes) of instance data is easily detected from the file structure. Therefore, no additional special rules are applied in <code>validate_nexus</code> other than those given above.</p>"},{"location":"learn/pynxtools/nexus-validation.html#read_nexus-nexus-file-reader-and-debugger","title":"read_nexus: NeXus file reader and debugger","text":"<p>In addition to the validation tools mentioned above, there is another utility in <code>pynxtools</code> called <code>read_nexus</code> (available from the command line after installation). This tool outputs a debug log for a given NeXus file by annotating the data and metadata entries with the schema definitions from the respective NeXus base classes and application definitions to which the file refers to. Read more in the API documentation.</p>"},{"location":"learn/pynxtools/nexus-validation.html#limitations","title":"Limitations","text":"<p>While we try to cover most NeXus use cases in the validation, there are some checks that we do not apply consistently yet. These limitations are mostly due to inconsistencies in the standard (like for the use of symbols and dimensionalities) or because an idea in NeXus is seldomly used (like NeXus choices). We are looking forward to resolving such ambiguities with the NeXus community going forward, after which a more rigorous implementation in the validation software is possible.</p>"},{"location":"learn/pynxtools/nexus-validation.html#other-validation-software","title":"Other validation software","text":"<p>There are several tools which can be used for validation of NeXus files.</p> <ol> <li> <p>pynxtools - our own software tool</p> </li> <li> <p>cnxvalidate: NeXus validation tool written in C</p> </li> <li> <p>punx: Python Utilities for NeXus HDF5 files</p> </li> <li> <p>nexpy/nxvalidate: A python API for validating NeXus file</p> </li> </ol> <p>All are different and have individual advantages or disadvantages. We encourage users to have a look at the how-to guide for these tools to learn more.</p>"},{"location":"reference/built-in-readers.html","title":"Built-in <code>pynxtools</code> readers","text":"<p>There exists a number of readers directly in <code>pynxtools</code>. These are typically used either as superclasses for new reader implementations or for generic reading purposes not directly related to any specific technique.</p>"},{"location":"reference/built-in-readers.html#the-basereader","title":"The BaseReader","text":"<p>This is the most simple reader, which is an abstract base class, on top of which a new reader implementation can build. It has an essentially empty read function and is thus only helpful for implementing the correct input/output design of the <code>read</code> function of any reader that is inheriting from this base reader.</p>"},{"location":"reference/built-in-readers.html#the-multiformatreader","title":"The MultiFormatReader","text":"<p>Another reader that can act as the basis for any reader implementation is the <code>MultiFormatReader</code>, which can be used to implement a reader that can read in multiple file formats and then populate the NeXus file using the read data. Note that this reader has a lot of already built-in functionality, which is extensively described here. There is also a how-to guide on how to implement a new reader off of the <code>MultiFormatReader</code> using a concrete example.</p>"},{"location":"reference/built-in-readers.html#the-jsonmapreader","title":"The JsonMapReader","text":"<p>This reader is designed to allow users of <code>pynxtools</code> to convert their existing data with the help of a map file. The map file tells the reader which concept and instance data to pick from the data files and how to convert these to NeXus files. The following formats are supported as input files:</p> <ul> <li>HDF5</li> <li>JSON</li> <li>Python Dict Objects pickled with pickle. These can contain xarray.DataArray objects as well as regular Python types and Numpy types. Note that while it is supported, we strongly recommend note to use pickle due to its known security concerns.</li> </ul> <p>It accepts any XML file that follows the NXDL schema definition language file as long as your mapping file contains all the required fields. Please use the <code>--generate-template</code> function of the <code>dataconverter</code> to create a <code>.mapping.json</code> file:</p> <pre><code>user@box:~$ dataconverter --nxdl NXmynxdl --generate-template &gt; mynxdl.mapping.json\n</code></pre>"},{"location":"reference/built-in-readers.html#the-mappingjson-file","title":"The mapping.json file","text":"<p>This file is designed to let you fill in the requirements of a NeXus Application Definition without writing any code. If you already have data in the formats listed above, you just need to use this mapping file to help the dataconverter pick your data correctly.</p> <p>The mapping files will always be based on the template the dataconverter generates. See above on how to generate a mapping file. The right hand side values of the template keys are what you can modify. These keys are called NeXus template paths, because they combine the actual path that will be used in the HDF5 hierarchy with additional NeXus datatype hints to guide the dataconverter to add NX_class annotations.</p> <p>Here are the three different ways you can fill the right hand side of the template keys:</p> <ul> <li>Write the nested path in your datafile. This is indicated by a leading <code>/</code> before the word <code>entry</code> to make <code>/entry/data/current_295C</code> below. Example:</li> </ul> <pre><code>  \"/ENTRY[entry]/DATA[data]/current_295C\": \"/entry/data/current_295C\",\n  \"/ENTRY[entry]/NXODD_name/posint_value\": \"/a_level_down/another_level_down/posint_value\",\n</code></pre> <p>Here, <code>\"/entry/data/current_295C\"</code> is the path in the original HDF5 file, while the key shown here is the template path (see above).</p> <ul> <li>Write the values directly in the mapping file for missing data from your data file.</li> </ul> <pre><code>  \"/ENTRY[entry]/PROCESS[process]/program\": \"Bluesky\",\n  \"/ENTRY[entry]/PROCESS[process]/program/@version\": \"1.6.7\"\n</code></pre> <ul> <li>Write JSON objects with a link key. This follows the same link mechanism that the dataconverter implements. In the context of this reader, you can only use external links to your data files. In the example below, <code>current.nxs</code> is an already existing HDF5 file that we link to in our new NeXus file without copying over the data. The format is as follows: <code>\"link\": \"&lt;filename&gt;:&lt;path_in_file&gt;\"</code> Note: This only works for HDF5 files currently.</li> </ul> <pre><code>  \"/ENTRY[entry]/DATA[data]/current_295C\": {\"link\": \"current.nxs:/entry/data/current_295C\"},\n  \"/ENTRY[entry]/DATA[data]/current_300C\": {\"link\": \"current.nxs:/entry/data/current_300C\"},\n</code></pre>"},{"location":"reference/built-in-readers.html#examples","title":"Examples","text":""},{"location":"reference/built-in-readers.html#basic-mappings","title":"Basic mappings","text":"<p>There are some example files you can use:</p> <p>data.mapping.json</p> <p>data.json</p> <pre><code>user@box:~$ dataconverter --nxdl NXtest data.json --mapping data.mapping.json\n</code></pre>"},{"location":"reference/built-in-readers.html#example-with-hdf5-files","title":"Example with HDF5 files","text":"<p>You can find example data files for using the mapping with HDF5 files at <code>examples/json_map</code>.</p> <p>The example can be run by calling</p> <pre><code>user@box:~$ dataconverter --nxdl nxdl any_data.hdf5 --mapping my_custom_map.mapping.json\n</code></pre>"},{"location":"reference/built-in-readers.html#the-yamljsonreader","title":"The YamlJsonReader","text":"<p>Work in progress</p>"},{"location":"reference/built-in-readers.html#installation","title":"Installation","text":"<p>Each of the built-in readers are shipped/installed with the main <code>pynxtools</code> package. Hence, these readers are available after installation:</p> <ul> <li>Installation</li> </ul>"},{"location":"reference/cli-api.html","title":"API for command line tools","text":"<p><code>pynxtools</code> supports a number of command line applications. This page provides documentation for their current API.</p>"},{"location":"reference/cli-api.html#data-conversion","title":"Data conversion","text":"<p>Note that simply calling <code>dataconverter</code> defaults to <code>dataconverter convert</code>.</p>"},{"location":"reference/cli-api.html#dataconverter","title":"dataconverter","text":"<p>Usage:</p> <pre><code>dataconverter [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>convert: This command allows you to use the converter functionality of the dataconverter.</li> <li>generate-template: Generates and prints a template to use for your nxdl.</li> <li>get-readers: Prints a list of all installed readers.</li> </ul>"},{"location":"reference/cli-api.html#dataconverter-convert","title":"dataconverter convert","text":"<p>This command allows you to use the converter functionality of the dataconverter.</p> <p>Usage:</p> <pre><code>dataconverter convert [OPTIONS] [FILES]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--input-file</code> text Deprecated: Please use the positional file arguments instead. The path to the input data file to read. Repeat for more than one file. default=[] This option is required if no '--params-file' is supplied. <code>[]</code> <code>--reader</code> choice (<code>example</code> | <code>json_map</code> | <code>json_yml</code> | <code>multi</code>) The reader to use. Examples are json_map or readers from a pynxtools plugin. default='json_map' This option is required if no '--params-file' is supplied. <code>json_map</code> <code>--nxdl</code> text The name of the NeXus application definition file to use without the extension nxdl.xml. This option is required if no '--params-file' is supplied. None <code>--output</code> text The path to the output NeXus file to be generated. default='output.nxs' <code>output.nxs</code> <code>--params-file</code> filename Allows to pass a .yaml file with all the parameters the converter supports. None <code>--ignore-undocumented</code> boolean Ignore all undocumented concepts during validation. <code>False</code> <code>--fail</code> boolean Fail conversion and don't create an output file if the validation fails. <code>False</code> <code>--skip-verify</code> boolean Skips the verification routine during conversion. <code>False</code> <code>--mapping</code> text Takes a .mapping.json file and converts data from given input files. <code>Sentinel.UNSET</code> <code>-c</code>, <code>--config</code> file A json config file for the reader None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/cli-api.html#dataconverter-generate-template","title":"dataconverter generate-template","text":"<p>Generates and prints a template to use for your nxdl.</p> <p>Usage:</p> <pre><code>dataconverter generate-template [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--nxdl</code> text The name of the NeXus application definition file to use without extension. For example: NXmpes _required <code>--required</code> boolean Use this flag to only get the required template. <code>False</code> <code>--pythonic</code> boolean Prints a valid Python dictionary instead of JSON <code>False</code> <code>--output</code> path Writes the output into the filepath provided. <code>Sentinel.UNSET</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/cli-api.html#dataconverter-get-readers","title":"dataconverter get-readers","text":"<p>Prints a list of all installed readers.</p> <p>Usage:</p> <pre><code>dataconverter get-readers [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/cli-api.html#nexus-file-validation","title":"NeXus file validation","text":""},{"location":"reference/cli-api.html#validate_nexus","title":"validate_nexus","text":"<p>Validates a NeXus HDF5 file.</p> <p>FILE: The path to the NeXus file to validate.</p> <p>Usage:</p> <pre><code>validate_nexus [OPTIONS] FILE\n</code></pre> <p>Options:</p> Name Type Description Default <code>--ignore-undocumented</code> boolean Ignore all undocumented concepts during validation. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/cli-api.html#nexus-annotator","title":"NeXus annotator","text":""},{"location":"reference/cli-api.html#read_nexus","title":"read_nexus","text":"<p>Functionality to extract documentation and concept definition information about the individual parts of a NeXus/HDF5 file.</p> <p>Usage:</p> <pre><code>read_nexus [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--nexus-file</code> text NeXus file with extension .nxs. None <code>-d</code>, <code>--documentation</code> text Definition path in nexus output (.nxs) file. Returns debug log relevant with that definition path. Example input: /entry/data/delays None <code>-c</code>, <code>--concept</code> text Concept path from application definition file (.nxdl.xml). Finds out all the available concept definition (IS-A relation) for a given concept path. Example input: /NXarpes/ENTRY/INSTRUMENT/analyser None <code>--help</code> boolean Show this message and exit. <code>False</code> <p>NOTE: Only one option from (<code>-d</code> and <code>-c</code>) is acceptable.</p>"},{"location":"reference/cli-api.html#eln-generation","title":"ELN generation","text":""},{"location":"reference/cli-api.html#generate_eln","title":"generate_eln","text":"<p>Helper tool for generating ELN files in YAML format.</p> <p>Usage:</p> <pre><code>generate_eln [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--nxdl</code> text Name of NeXus definition without extension (.nxdl.xml). <code>Sentinel.UNSET</code> <code>--skip-top-levels</code> integer To skip the level of parent hierarchy level. For example, by default the part Entry[ENTRY] from /Entry[ENTRY]/Instrument[INSTRUMENT]/... will be skiped. <code>0</code> <code>--output-file</code> text Name of file that is needed to generated output file. None <code>--eln-type</code> choice (<code>reader</code> | <code>schema</code>) Choose a type of ELN output (reader or schema). <code>eln</code> <code>--optionality</code> choice (<code>required</code> | <code>recommended</code> | <code>optional</code>) Level of requiredness to generate. If any of ('required', 'recommended', 'optional', only those concepts matching this requiredness level are created. <code>required</code> <code>--filter-file</code> text JSON configuration file to filter NeXus concepts (based on the presence of the '@eln' keyword). This is a positive filter, i.e., all concepts in the filter file will be included in the ELN. None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/definitions.html","title":"NeXus definitions","text":"<p>We link two references here. The first links to the official definitions by the NIAC and the second one links to latest FAIRmat definitions.</p> <ul> <li>Official NIAC definitions</li> <li>Latest FAIRmat definitions</li> </ul> <p>The FAIRmat definitions are regularly contributed to NIAC (around every 6 months), but generally reflect a state which is still under development and may contain new or improved application definitions or base classes. Consider it as the public review stage of these application definitions. However, there might be some parts which are still under discussion and will be subject to change.</p> <p>Note: To connect NeXus concepts with semantic web tools, efforts are underway to represent them using the W3C Web Ontology Language (OWL). See the NeXusOntology for more details.</p>"},{"location":"reference/plugins.html","title":"FAIRmat-supported <code>pynxtools</code> plugins","text":"<p>There are a number of plugins available for <code>pynxtools</code> that are maintained within FAIRmat. These are extensions of <code>pynxtools</code> used for reading data of specific experimental techniques and/or file formats.</p>"},{"location":"reference/plugins.html#photoemission-spectroscopy","title":"Photoemission spectroscopy","text":"Repository Description Docs PyPI pynxtools-mpes Reader plugin for multi-dimensional photoelectron spectroscopy (MPES) data. \ud83d\udce6 pynxtools-xps Reader plugin for X-ray photoelectron spectroscopy (XPS) data from various vendors/sources. \ud83d\udcda \ud83d\udce6"},{"location":"reference/plugins.html#electron-microscopy","title":"Electron microscopy","text":"Repository Description Docs PyPI pynxtools-em Reader plugin for electron microscopy (EM) data from various vendors/sources. \ud83d\udcda \ud83d\udce6"},{"location":"reference/plugins.html#atom-probe-microscopytomography","title":"Atom probe microscopy/tomography","text":"Repository Description Docs PyPI pynxtools-apm Reader plugin for atom probe microscopy (APM) as well as related field ion microscopy (FIM) data. \ud83d\udcda \ud83d\udce6"},{"location":"reference/plugins.html#optical-spectroscopy","title":"Optical spectroscopy","text":"Repository Description Docs PyPI pynxtools-ellips Reader plugin for ellipsometry data. \ud83d\udcda \ud83d\udce6 pynxtools-raman Reader plugin for Raman data. \ud83d\udce6"},{"location":"reference/plugins.html#scanning-probe-microscopy","title":"Scanning probe microscopy","text":"Repository Description Docs PyPI pynxtools-spm Reader plugin for scanning probe microscopy (SPM). \ud83d\udcda \ud83d\udce6"},{"location":"reference/plugins.html#x-ray-diffraction","title":"X-ray diffraction","text":"Repository Description Docs PyPI pynxtools-xrd pynxtools reader plugin for X-ray diffraction data. \ud83d\udce6"},{"location":"reference/plugins.html#others","title":"Others","text":"Repository Description Docs PyPI pynxtools-igor A general reader plugin for Igor Pro Binary Wave data. \ud83d\udcda \ud83d\udce6"},{"location":"reference/plugins.html#installation","title":"Installation","text":"<p>You can install each of the plugins together with <code>pynxtools</code> by passing the name of the plugin as an extra to the pip install call. For example, for the <code>pynxtools-mpes</code> plugin:</p> uvpip <pre><code>uv pip install pynxtools[mpes]\n</code></pre> <pre><code>pip install pynxtools[mpes]\n</code></pre> <p>In addition, you can also install all of the pynxtools reader plugins which are maintained by FAIRmat by passing the <code>[convert]</code> extra to the pip install call:</p> uvpip <pre><code>uv pip install pynxtools[convert]\n</code></pre> <pre><code>pip install pynxtools[convert]\n</code></pre>"},{"location":"tutorial/contributing.html","title":"Development guide","text":"<p>This tutorial will guide you through on how to set up a working environment for developing <code>pynxtools</code>.</p>"},{"location":"tutorial/contributing.html#what-should-you-should-know-before-this-tutorial","title":"What should you should know before this tutorial?","text":"<ul> <li>You should read our guide on getting started.</li> <li>You should read the installation tutorial.</li> </ul>"},{"location":"tutorial/contributing.html#what-you-will-know-at-the-end-of-this-tutorial","title":"What you will know at the end of this tutorial?","text":"<p>You will know</p> <ul> <li>how to setup your environment for developing <code>pynxtools</code></li> <li>how to make changes to the software</li> <li>how to test the software</li> <li>how to contribute on GitHub</li> <li>how to use pynxtools as a NOMAD plugin</li> </ul>"},{"location":"tutorial/contributing.html#contributing","title":"Contributing","text":"Structure of the <code>pynxtools</code> repository <p>The software tools are located inside <code>src/pynxtools</code>. They are shipped with unit tests located in <code>tests</code>. Some examples from the scientific community are provided in <code>examples</code>. They guide you through the process of converting instrument data into the NeXus standard and visualizing the files' content.</p>"},{"location":"tutorial/contributing.html#setup","title":"Setup","text":"<p>It is recommended to use python 3.11 with a dedicated virtual environment for this package. Learn how to manage python versions and virtual environments. We recommend using <code>uv</code>, an extremely fast manager Python package and project manager. In this tutorial, you will find paralleled descriptions, using either <code>uv</code> or a more classical approach using <code>venv</code> and <code>pip</code>.</p> <p>Start by creating a virtual environment:</p> uvvenv <p><code>uv</code> is capable of creating a virtual environment and install the required Python version at the same time.</p> <pre><code>uv venv --python 3.11\n</code></pre> <p>Note that you will need to install the Python version manually beforehand.</p> <pre><code>python -m venv .venv\n</code></pre> <p>That command creates a new virtual environment in a directory called .venv.</p>"},{"location":"tutorial/contributing.html#development-installation","title":"Development installation","text":"<p>We start by cloning the repository:</p> <pre><code>git clone https://github.com/FAIRmat-NFDI/pynxtools.git \\\\\n    --branch master \\\\\n    --recursive pynxtools\ncd pynxtools\ngit submodule sync --recursive\ngit submodule update --init --recursive --jobs=4\n</code></pre> <p>Note that we are using the NeXus definitions as a Git submodule. The last two lines initiate the submodule and upgrade it to match the first used in pynxtools.</p> <p>Next, we install the package in editable mode (together with its dependencies):</p> uvpip <pre><code>uv pip install -e \".[dev]\"\n</code></pre> <p>Note that you will need to install the Python version manually beforehand.</p> <pre><code>pip install --upgrade pip\npip install -e \".[dev]\"\n</code></pre>"},{"location":"tutorial/contributing.html#linting-and-formatting","title":"Linting and formatting","text":"<p>We are using ruff and mypy for linting, formatting, and type checking. It is recommended to use the pre-commit hook available for ruff which formats the code and checks the linting before actually making an actual Git commit.</p> <p>Install the precommit by running</p> <pre><code>pre-commit install\n</code></pre> <p>from the root of this repository.</p>"},{"location":"tutorial/contributing.html#testing","title":"Testing","text":"<p>There exist unit tests for the software written in pytest which can be used as follows:</p> <pre><code>pytest -sv tests\n</code></pre>"},{"location":"tutorial/contributing.html#editing-the-documentation","title":"Editing the documentation","text":"<p>We are using `mkdocs for the documentation. If you edit the documentation, you can build it locally. For this, you need to install an additional set of dependencies:</p> uvpip <pre><code>uv pip install -e \".[docs]\"\n</code></pre> <pre><code>pip install -e \".[docs]\"\n</code></pre> <p>You can then serve the documentation locally by running</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"tutorial/contributing.html#running-the-examples","title":"Running the examples","text":"<p>A number of examples exist which document how the tools can be used. For a standalone usage, convenient Jupyter notebooks are available for some of the tools. To use these notebooks, Jupyter and related tools have to be installed in the development environment as follows:</p> uvpip <pre><code>uv pip install jupyter\nuv pip install jupyterlab\nuv pip install jupyterlab_h5web\n</code></pre> <pre><code>pip install jupyter\npip install jupyterlab\npip install jupyterlab_h5web\n</code></pre>"},{"location":"tutorial/contributing.html#contributing-to-the-package-on-github","title":"Contributing to the package on Github","text":"<p>Once you are happy with the changes, please commit them on a separate branch and create a pull request on GitHub. We run a number of GitHub actions that check the correct linting, run the tests in an isolated environment, and build the documentation. Once these pass and a peer review of the code has occurred, your code will be accepted.</p>"},{"location":"tutorial/contributing.html#developing-pynxtools-as-a-nomad-plugin","title":"Developing pynxtools as a NOMAD plugin","text":"<p>If you plan to contribute to the NOMAD plugin functionality of <code>pynxtools</code>, it often makes sense to use the NOMAD development environment called <code>nomad-distro-dev</code>. You can learn more in the NOMAD documentation.</p>"},{"location":"tutorial/contributing.html#troubleshooting","title":"Troubleshooting","text":"<p>If you face any issues with the tool or when setting up the development environment, please create a new Github Issue.</p>"},{"location":"tutorial/converting-data-to-nexus.html","title":"Converting your research data to NeXus","text":""},{"location":"tutorial/converting-data-to-nexus.html#who-is-this-tutorial-for","title":"Who is this tutorial for?","text":"<p>The document is for people who want to standardize their research data by converting their research data into a NeXus standardized format. We cover the basic principles and common principles of NeXus, here. For a more detailed description on the general principles of NeXus we recommend reading our learning page for NeXus or the official NeXus user manual.</p>"},{"location":"tutorial/converting-data-to-nexus.html#what-should-you-should-know-before-this-tutorial","title":"What should you should know before this tutorial?","text":"<ul> <li>You should have a basic understanding of NeXus: see our primer on NeXus.</li> <li>You should have a basic understanding of FAIR data.</li> <li>You should have installed <code>pynxtools</code>: Installation tutorial.</li> </ul>"},{"location":"tutorial/converting-data-to-nexus.html#what-you-will-know-at-the-end-of-this-tutorial","title":"What you will know at the end of this tutorial?","text":"<p>You will have</p> <ul> <li>a basic understanding how to use the NeXus data converter from the <code>pynxtools</code> package</li> </ul>"},{"location":"tutorial/converting-data-to-nexus.html#setup","title":"Setup","text":"<p><code>pynxtools</code> has a number of readers that support reading and converting multiple file formats. A generic reader is the JSON Map Reader. In addition, we provide multiple reader plugins for different experimental techniques.</p> <p>We will use the XPS reader plugin with a SpecsLabProdigy file (file extension: <code>.sle</code>) as an example.</p>"},{"location":"tutorial/converting-data-to-nexus.html#steps","title":"Steps","text":"<ol> <li> <p>Download the example files from here:</p> <p>Download example files</p> </li> <li> <p>Extract the zip and copy the files in your current working directory. You can find the working directory by typing the following in your terminal:</p> <pre><code>pwd\n</code></pre> </li> <li> <p>Install pynxtools with the XPS reader plugin:</p> uvpip <pre><code>uv pip install pynxtools[xps]\n</code></pre> <pre><code>pip install pynxtools[xps]\n</code></pre> </li> <li> <p>Verify you can run the <code>dataconverter</code> in a terminal window. Open a terminal with the Python environment where you installed <code>pynxtools</code>. Then type the following:</p> <pre><code>dataconverter --help\n</code></pre> </li> </ol>"},{"location":"tutorial/converting-data-to-nexus.html#converting-the-example-files","title":"Converting the example files","text":"<p>Once you have your files copied into the working directory, your directory structure should look like this:</p> <pre><code>\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 EX439_S718_Au.sle\n\u251c\u2500\u2500 eln_data_sle.yaml\n\u2514\u2500\u2500 params.yaml\n</code></pre> <p>The <code>eln_data_sle.yaml</code> YAML file is another data file containing additional information (e.g., information about the experimenter) that is not provided in the main data file.</p> <p>Next, you will run the conversion routine from your Python environment:</p> <pre><code>dataconverter --params-file params.yaml\n</code></pre> <p>Here we use a <code>params.yaml</code> parameter file to configure the converter.  This will create a file called <code>Au_25_mbar_O2_no_align.nxs</code> in your current directory.</p> <p>Congrats! You now have a FAIR NeXus file!</p> <p>You can try out other examples from pynxtools.</p>"},{"location":"tutorial/installation.html","title":"Installation guide","text":"<p>The document is the entry point for anybody that is new to the NeXus data format and to FAIRmat/NOMAD. It serves as a guide to getting started with the <code>pynxtools</code> software.</p>"},{"location":"tutorial/installation.html#what-should-you-should-know-before-this-tutorial","title":"What should you should know before this tutorial?","text":"<p>However, to get started, it does not hurt to  the following explanations:</p> <ul> <li>You should have read our guide on getting started</li> </ul>"},{"location":"tutorial/installation.html#what-you-will-know-at-the-end-of-this-tutorial","title":"What you will know at the end of this tutorial?","text":"<p>You will know</p> <ul> <li>how to install <code>pynxtools</code></li> <li>how to configure your <code>pynxtools</code> installation</li> <li>how to install <code>pynxtools</code> together with NOMAD</li> </ul>"},{"location":"tutorial/installation.html#setup","title":"Setup","text":"<p>It is recommended to use python 3.11 with a dedicated virtual environment for this package. Learn how to manage python versions and virtual environments.</p> <p>There are many alternatives to managing virtual environments and package dependencies (requirements). We recommend using <code>uv</code>, an extremely fast manager Python package and project manager. In this tutorial, you will find paralleled descriptions, using either <code>uv</code> or a more classical approach using <code>venv</code> and <code>pip</code>.</p> <p>Start by creating a virtual environment:</p> uvvenv <p><code>uv</code> is capable of creating a virtual environment and install the required Python version at the same time.</p> <pre><code>uv venv --python 3.11\n</code></pre> <p>Note that you will need to install the Python version manually beforehand.</p> <pre><code>python -m venv .venv\n</code></pre> <p>That command creates a new virtual environment in a directory called <code>.venv</code>.</p>"},{"location":"tutorial/installation.html#installation","title":"Installation","text":"<p>Install the latest stable version of this package from PyPI with</p> uvpip <pre><code>uv pip install pynxtools\n</code></pre> <pre><code>pip install pynxtools\n</code></pre> <p>You can also install the latest development version with</p> uvpip <pre><code>uv pip install git+https://github.com/FAIRmat-NFDI/pynxtools.git\n</code></pre> <pre><code>pip install git+https://github.com/FAIRmat-NFDI/pynxtools.git\n</code></pre>"},{"location":"tutorial/installation.html#configuring-your-pynxtools-installation","title":"Configuring your <code>pynxtools</code> installation","text":"<p><code>pynxtools</code> comes with a list of built-in readers that can be used after after pip installation. In addition, <code>pynxtools</code> supports a plugin mechanism for adding file readers for different experimental techniques. The different FAIRmat-supported plugins can be installed together with <code>pynxtools</code> by passing the name of the plugin as an extra to the install call. For example, for the <code>pynxtools-mpes</code> plugin, you can run:</p> uvpip <pre><code>uv pip install pynxtools[mpes]\n</code></pre> <pre><code>pip install pynxtools[mpes]\n</code></pre> <p>In addition, you can also install all of the pynxtools reader plugins which are maintained by FAIRmat by passing the <code>[convert]</code> extra to the install call:</p> uvpip <pre><code>uv pip install pynxtools[convert]\n</code></pre> <pre><code>pip install pynxtools[convert]\n</code></pre> <p>Note that in this case, the latest version of the plugin(s) from PyPI are installed.</p>"},{"location":"tutorial/installation.html#how-to-install-pynxtools-with-nomad","title":"How to install <code>pynxtools</code> with NOMAD","text":"<p>To use <code>pynxtools</code> with NOMAD, simply install it in the same environment as the <code>nomad-lab</code> package. NOMAD will recognize <code>pynxtools</code> as a plugin automatically and offer automatic parsing of <code>.nxs</code> files. In addition, NOMAD will install a schema for NeXus application definitions.</p>"},{"location":"tutorial/installation.html#start-using-pynxtools","title":"Start using <code>pynxtools</code>","text":"<p>That's it! You can now use <code>pynxtools</code> and the plugins that you have installed!</p>"},{"location":"tutorial/nexus-to-nomad.html","title":"Uploading NeXus data to NOMAD","text":"<p>Great choice! NOMAD makes it easier than ever to work with your research data. At this point you probably have an idea of what FAIR data is. Even if you don't, it doesn't matter. NOMAD provides a simple graphical interface that let's you collect and have your data ready for publication.</p> <p>In this tutorial, we will go through how one can upload their NeXus files to NOMAD.</p> <p>NOMAD, as a FAIR data platform, supports NeXus and allows users to upload their NeXus (<code>.nxs</code>) files directly. These files get interpreted and added to your NOMAD account with complete control on how you would like to present and publish them alongside your research.</p>"},{"location":"tutorial/nexus-to-nomad.html#create-an-account","title":"Create an account","text":"<p>The very first thing you need to do is get a NOMAD account. If you don't have one you can register here.</p> <ol> <li>Navigate to nomad-lab.eu</li> <li>Click on <code>Login / Register</code> on the top right corner.</li> </ol> <p></p>"},{"location":"tutorial/nexus-to-nomad.html#create-an-upload","title":"Create an Upload","text":"<p>NOMAD allows you to have a draft working space called an upload. This allows you to test and prepare how your data will look in NOMAD before you publish it.</p> <p>Go to <code>Publish -&gt; Uploads</code></p> <p></p> <p></p> <p>Click <code>Create a new upload</code></p> <p></p>"},{"location":"tutorial/nexus-to-nomad.html#upload-your-nexus-file","title":"Upload your NeXus file","text":"<p>Now we can upload your FAIR NeXus file and let NOMAD interpret it for us.</p> <p>Click the <code>Drop files here...</code> button and choose your NeXus file from your device. </p> <p>Once NOMAD has interpreted your data, this is what your screen will look like.</p> <p></p>"},{"location":"tutorial/nexus-to-nomad.html#browsing-your-nexus-data","title":"Browsing your NeXus data","text":"<p>You can find the NOMAD interpretation of your data under entries. If you click on this arrow, you will be able to see an Overview of your NeXus file.</p> <p></p> <p></p> <p>On the Overview page you will be presented with <code>H5Web</code> that let's you browse the data in your <code>NeXus</code> file directly.</p> <p></p> <p></p> <p>NOMAD also interprets and normalizes this data to make it interoperable with other corners of materials research. To browse this normalized data you can browse the <code>DATA</code> tab. Here you see all the information NOMAD has picked up and made available for search and comparison with synthesis, experimental, and computational materials data.</p> <p></p> <p>Feel free to explore more!</p>"},{"location":"tutorial/nexus-to-nomad.html#learn-more","title":"Learn more","text":"<p>Learn more about uploading and publishing experimental data in NOMAD:</p> <ul> <li>NOMAD tutorial on uploading NeXus data</li> </ul>"}]}